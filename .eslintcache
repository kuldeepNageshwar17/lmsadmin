[{"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\index.js":"1","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\BasePage.js":"2","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\BuilderPage.js":"3","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\index.js":"4","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\index.js":"5","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\permissionRoles.js":"6","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\index.js":"7","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\Courses.js":"8","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\branchUserList.js":"9","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\examQuestions.js":"10","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\SectionEditDilogue.js":"11","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\CourseProfileFormater.js":"12","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\ContentAddButton.js":"13","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\progressbar.js":"14","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\questionForm.js":"15","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\NewCourse.js":"16","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentform.js":"17","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionTestList.js":"18","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\TestForm.js":"19","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestList.js":"20","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseQuestionForm.js":"21","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\pages\\Notifications.js":"22","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\CourseContent.js":"23","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\cardSideStickey.js":"24","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Announcement.js":"25","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\TestQuestionsActionFormatter.js":"26","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\coursetestblocks.js":"27","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ScheduleExamActionFormatter.js":"28","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget1.js":"29","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget8.js":"30","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\mixed\\MixedWidget1.js":"31","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget4.js":"32","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\stats\\StatsWidget12.js":"33","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenuListControlPanel.js":"34","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\Userform.js":"35","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\index.js":"36","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\store.js":"37","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicSubheader.js":"38","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\privateRoute.js":"39","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\_redux\\EcourseRedux.js":"40","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\_redux\\authRedux.js":"41","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CoursePlayer.js":"42","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\__mocks__\\userTableMock.js":"43","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\index.js":"44","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\index.js":"45","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage5.js":"46","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage2.js":"47","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\menus.js":"48","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\FeeManagement\\pages\\feeManagement.js":"49","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\scheduleExam.js":"50","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\location.js":"51","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentAudio.js":"52","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\userProfile.js":"53","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentText.js":"54","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\components\\userActionFormatter.js":"55","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\classActionFormatterBranch.js":"56","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Overview.js":"57","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\SplashScreen.js":"58","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\LoadingDialog.js":"59","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\Pagination.js":"60","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\HeaderCheckbox.js":"61","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\stats\\StatsWidget11.js":"62","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\mixed\\MixedWidget14.js":"63","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget3.js":"64","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\FormAlert.js":"65","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\FieldFeedbackLabel.js":"66","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeBlockToolbar.js":"67","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeBlock.js":"68","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\batches.js":"69","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\branches.js":"70","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\branchForm.js":"71","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseSections.js":"72","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownTopbarItemToggler.js":"73","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu3.js":"74","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu2.js":"75","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\cookie.js":"76","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\branchActionFormatter.js":"77","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classes.js":"78","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentPasswordReset.js":"79","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\classActionFormatter.js":"80","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestQuestion.js":"81","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\RouterHelpers.js":"82","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionalTestList.js":"83","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TablePaginationHelpers.js":"84","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\testQuestion.js":"85","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\content\\ContentRoute.js":"86","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\TestActionFormatter.js":"87","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\ScrollTop.js":"88","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\footer\\Footer.js":"89","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\components\\NotificationActionFormatter.js":"90","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\offcanvas\\QuickPanel.js":"91","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\scrolltop.js":"92","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\footer.js":"93","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\brand.js":"94","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header.js":"95","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\Topbar.js":"96","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside.js":"97","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\components\\BreadCrumbs.js":"98","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\offcanvas.js":"99","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\ControlPanelButton.js":"100","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\LanguageSelectorDropdown.js":"101","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\MyCartDropdown.js":"102","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenuList.js":"103","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\search\\SearchResult.js":"104","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\index.js":"105","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\index.js":"106","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\setupAxios.js":"107","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\Metronici18n.js":"108","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicSplashScreen.js":"109","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\LayoutConfig.js":"110","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorsPage.js":"111","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\LayoutInit.js":"112","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\StickyToolbar.js":"113","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\Aside.js":"114","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\SubHeader.js":"115","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage6.js":"116","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\index.js":"117","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\_redux\\authCrud.js":"118","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\header-menu\\HeaderMenuWrapper.js":"119","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\components\\QuickActions.js":"120","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\brand\\Brand.js":"121","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\sticky-card.js":"122","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside-toggle.js":"123","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside-menu.js":"124","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TableSortingHelpers.js":"125","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\QuiclUserToggler.js":"126","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\AssetsHelpers.js":"127","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\menu.js":"128","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\PaginationToolbar.js":"129","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Checkbox.js":"130","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\PaginationLinks.js":"131","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples-kt\\KTCodeExample.js":"132","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeExample.js":"133","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\UserProfileDropdown.js":"134","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\BranchesSelectorDropdown.js":"135","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\QuickActionsDropdown.js":"136","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage3.js":"137","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\DashboardPage.js":"138","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\index.js":"139","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentVideo.js":"140","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\testList.js":"141","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentAll.js":"142","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\batchForm.js":"143","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestForm.js":"144","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classForm.js":"145","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\question.js":"146","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\exam.js":"147","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\FAQs.js":"148","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\batchActionFormatter.js":"149","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\QuestionOptionForm.js":"150","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\index.js":"151","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\advance-tables\\AdvanceTablesWidget2.js":"152","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\index.js":"153","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\CourseActionFormatter.js":"154","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourses.js":"155","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\feesChangeFormatterBranch.js":"156","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\UserCourseActionFormatter.js":"157","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourseForm.js":"158","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseSectionform.js":"159","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\UserCourseProfileFormater.js":"160","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourseSections.js":"161","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourseSectionform.js":"162","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserContentAll.js":"163","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\App.js":"164","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\__mocks__\\mockAxios.js":"165","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\content\\Content.js":"166","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\I18nProvider.js":"167","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage1.js":"168","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\permissionContext.js":"169","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\index.js":"170","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\stretched-card.js":"171","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\ContentEditDilogue.js":"172","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\index.js":"173","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\header-menu\\HeaderMenu.js":"174","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\branchuserForm.js":"175","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\SVGIcon.js":"176","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\index.js":"177","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\DatePickerField.js":"178","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples-kt\\KTCodeBlock.js":"179","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Curriculam.js":"180","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\builder\\Builder.js":"181","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\examForm.js":"182","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseForm.js":"183","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\permissions.js":"184","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header-topbar.js":"185","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header-menu.js":"186","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\components\\StudentActionFormatter.js":"187","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\rootReducer.js":"188","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicLayout.js":"189","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\connectPage.js":"190","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\MyPage.js":"191","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\LocalStorageHelpers.js":"192","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\CourseDetails.js":"193","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionalTestForm.js":"194","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dashboards\\Dashboard.js":"195","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Reviews.js":"196","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\Notice.js":"197","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\Card.js":"198","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeExampleSimple.js":"199","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classesForBranch.js":"200","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ExamQuestionsActionFormatter.js":"201","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\components\\MenuActionFormatter.js":"202","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\Header.js":"203","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\quick-user.js":"204","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\subheader.js":"205","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\search\\SearchDropdown.js":"206","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MaterialThemeProvider.js":"207","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\QuestionOptionForm.js":"208","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu1.js":"209","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Select.js":"210","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\UserList.js":"211","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentPdf.js":"212","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\question.js":"213","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\Layout.js":"214","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\HTMLClassService.js":"215","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\toggle.js":"216","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\UserNotificationsDropdown.js":"217","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\Courses.js":"218","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\courseblocks.js":"219","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget9.js":"220","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Input.js":"221","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownCustomToggler.js":"222","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\questionForm.js":"223","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenu.js":"224","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ExamActionFormatter.js":"225","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage4.js":"226","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\FeeManagement\\index.js":"227","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\content.js":"228","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\FeeManagement.js":"229","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu4.js":"230","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\student.js":"231","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\index.js":"232","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\offcanvas\\QuickUser.js":"233","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestQuestions.js":"234","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\card.js":"235","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\AnimateLoading.js":"236","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header-mobile\\HeaderMobile.js":"237","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\quick-panel.js":"238","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\scrolltop.js":"239"},{"size":1082,"mtime":1612250061198,"results":"240","hashOfConfig":"241"},{"size":3019,"mtime":1612251168339,"results":"242","hashOfConfig":"241"},{"size":143,"mtime":1602574510030,"results":"243","hashOfConfig":"241"},{"size":1563,"mtime":1603882714442,"results":"244","hashOfConfig":"241"},{"size":1176,"mtime":1605011855263,"results":"245","hashOfConfig":"241"},{"size":1851,"mtime":1605704396587,"results":"246","hashOfConfig":"241"},{"size":93,"mtime":1602574509977,"results":"247","hashOfConfig":"241"},{"size":2201,"mtime":1612773678654,"results":"248","hashOfConfig":"241"},{"size":4523,"mtime":1612772759143,"results":"249","hashOfConfig":"241"},{"size":4527,"mtime":1612768431136,"results":"250","hashOfConfig":"241"},{"size":5538,"mtime":1602574510008,"results":"251","hashOfConfig":"241"},{"size":722,"mtime":1604403250174,"results":"252","hashOfConfig":"241"},{"size":1266,"mtime":1602574510018,"results":"253","hashOfConfig":"241"},{"size":469,"mtime":1604473630690,"results":"254","hashOfConfig":"241"},{"size":5884,"mtime":1604396857725,"results":"255","hashOfConfig":"241"},{"size":5978,"mtime":1602574510010,"results":"256","hashOfConfig":"241"},{"size":8016,"mtime":1605878768575,"results":"257","hashOfConfig":"241"},{"size":4698,"mtime":1602756042900,"results":"258","hashOfConfig":"241"},{"size":4790,"mtime":1603172140918,"results":"259","hashOfConfig":"241"},{"size":4890,"mtime":1603798494638,"results":"260","hashOfConfig":"241"},{"size":5624,"mtime":1604668377045,"results":"261","hashOfConfig":"241"},{"size":7540,"mtime":1606565435783,"results":"262","hashOfConfig":"241"},{"size":9780,"mtime":1602764233930,"results":"263","hashOfConfig":"241"},{"size":916,"mtime":1604736372828,"results":"264","hashOfConfig":"241"},{"size":3599,"mtime":1604666700836,"results":"265","hashOfConfig":"241"},{"size":1848,"mtime":1603369349092,"results":"266","hashOfConfig":"241"},{"size":2004,"mtime":1604404760443,"results":"267","hashOfConfig":"241"},{"size":3369,"mtime":1606114191051,"results":"268","hashOfConfig":"241"},{"size":5943,"mtime":1602574509979,"results":"269","hashOfConfig":"241"},{"size":4480,"mtime":1602574509980,"results":"270","hashOfConfig":"241"},{"size":7898,"mtime":1602574509981,"results":"271","hashOfConfig":"241"},{"size":5922,"mtime":1602574509980,"results":"272","hashOfConfig":"241"},{"size":5298,"mtime":1602574509982,"results":"273","hashOfConfig":"241"},{"size":10040,"mtime":1612268664956,"results":"274","hashOfConfig":"241"},{"size":9158,"mtime":1612262508613,"results":"275","hashOfConfig":"241"},{"size":2132,"mtime":1602574510031,"results":"276","hashOfConfig":"241"},{"size":899,"mtime":1602574510034,"results":"277","hashOfConfig":"241"},{"size":1776,"mtime":1602574509987,"results":"278","hashOfConfig":"241"},{"size":630,"mtime":1612245766301,"results":"279","hashOfConfig":"241"},{"size":1458,"mtime":1602574510007,"results":"280","hashOfConfig":"241"},{"size":4406,"mtime":1612267227045,"results":"281","hashOfConfig":"241"},{"size":19752,"mtime":1612514496150,"results":"282","hashOfConfig":"241"},{"size":2505,"mtime":1602574510003,"results":"283","hashOfConfig":"241"},{"size":963,"mtime":1604668377048,"results":"284","hashOfConfig":"241"},{"size":2812,"mtime":1604401928280,"results":"285","hashOfConfig":"241"},{"size":1101,"mtime":1602574510013,"results":"286","hashOfConfig":"241"},{"size":759,"mtime":1602574510012,"results":"287","hashOfConfig":"241"},{"size":4224,"mtime":1603172140920,"results":"288","hashOfConfig":"241"},{"size":4754,"mtime":1608376147583,"results":"289","hashOfConfig":"241"},{"size":8902,"mtime":1606113497309,"results":"290","hashOfConfig":"241"},{"size":2215,"mtime":1606896292246,"results":"291","hashOfConfig":"241"},{"size":4444,"mtime":1602574510021,"results":"292","hashOfConfig":"241"},{"size":944,"mtime":1602574510027,"results":"293","hashOfConfig":"241"},{"size":4465,"mtime":1602574510021,"results":"294","hashOfConfig":"241"},{"size":1572,"mtime":1605075139676,"results":"295","hashOfConfig":"241"},{"size":1420,"mtime":1605859903477,"results":"296","hashOfConfig":"241"},{"size":485,"mtime":1604733268478,"results":"297","hashOfConfig":"241"},{"size":440,"mtime":1602574509969,"results":"298","hashOfConfig":"241"},{"size":1068,"mtime":1602574509967,"results":"299","hashOfConfig":"241"},{"size":570,"mtime":1602574509974,"results":"300","hashOfConfig":"241"},{"size":272,"mtime":1602574509972,"results":"301","hashOfConfig":"241"},{"size":5018,"mtime":1602574509982,"results":"302","hashOfConfig":"241"},{"size":3830,"mtime":1602574509981,"results":"303","hashOfConfig":"241"},{"size":5800,"mtime":1602574509980,"results":"304","hashOfConfig":"241"},{"size":591,"mtime":1602574509972,"results":"305","hashOfConfig":"241"},{"size":1477,"mtime":1602574509972,"results":"306","hashOfConfig":"241"},{"size":1166,"mtime":1602574509970,"results":"307","hashOfConfig":"241"},{"size":3501,"mtime":1602574509970,"results":"308","hashOfConfig":"241"},{"size":4596,"mtime":1612770955265,"results":"309","hashOfConfig":"241"},{"size":4581,"mtime":1612608195027,"results":"310","hashOfConfig":"241"},{"size":5994,"mtime":1606823330089,"results":"311","hashOfConfig":"241"},{"size":10377,"mtime":1612764578825,"results":"312","hashOfConfig":"241"},{"size":392,"mtime":1602574509977,"results":"313","hashOfConfig":"241"},{"size":2647,"mtime":1602574509976,"results":"314","hashOfConfig":"241"},{"size":1905,"mtime":1602574509976,"results":"315","hashOfConfig":"241"},{"size":1697,"mtime":1602574509562,"results":"316","hashOfConfig":"241"},{"size":1425,"mtime":1602574510019,"results":"317","hashOfConfig":"241"},{"size":4415,"mtime":1603798916684,"results":"318","hashOfConfig":"241"},{"size":2427,"mtime":1602574510029,"results":"319","hashOfConfig":"241"},{"size":1771,"mtime":1605702874746,"results":"320","hashOfConfig":"241"},{"size":2247,"mtime":1604668377046,"results":"321","hashOfConfig":"241"},{"size":1657,"mtime":1602574509964,"results":"322","hashOfConfig":"241"},{"size":4952,"mtime":1603455881289,"results":"323","hashOfConfig":"241"},{"size":2447,"mtime":1602574509965,"results":"324","hashOfConfig":"241"},{"size":4574,"mtime":1612774484993,"results":"325","hashOfConfig":"241"},{"size":821,"mtime":1602574509991,"results":"326","hashOfConfig":"241"},{"size":1871,"mtime":1603369349091,"results":"327","hashOfConfig":"241"},{"size":377,"mtime":1602574509992,"results":"328","hashOfConfig":"241"},{"size":1941,"mtime":1602574509997,"results":"329","hashOfConfig":"241"},{"size":1948,"mtime":1606118389422,"results":"330","hashOfConfig":"241"},{"size":31741,"mtime":1602574509996,"results":"331","hashOfConfig":"241"},{"size":889,"mtime":1602574509840,"results":"332","hashOfConfig":"241"},{"size":758,"mtime":1602574509819,"results":"333","hashOfConfig":"241"},{"size":869,"mtime":1602574509817,"results":"334","hashOfConfig":"241"},{"size":1709,"mtime":1602574509825,"results":"335","hashOfConfig":"241"},{"size":3568,"mtime":1602574509998,"results":"336","hashOfConfig":"241"},{"size":3327,"mtime":1602574509567,"results":"337","hashOfConfig":"241"},{"size":756,"mtime":1602574510000,"results":"338","hashOfConfig":"241"},{"size":9129,"mtime":1602574509564,"results":"339","hashOfConfig":"241"},{"size":1119,"mtime":1612269372715,"results":"340","hashOfConfig":"241"},{"size":2795,"mtime":1602574509993,"results":"341","hashOfConfig":"241"},{"size":9664,"mtime":1602574509993,"results":"342","hashOfConfig":"241"},{"size":18091,"mtime":1612599615350,"results":"343","hashOfConfig":"241"},{"size":11389,"mtime":1602574509995,"results":"344","hashOfConfig":"241"},{"size":395,"mtime":1602574510000,"results":"345","hashOfConfig":"241"},{"size":64,"mtime":1602574509983,"results":"346","hashOfConfig":"241"},{"size":863,"mtime":1602574510033,"results":"347","hashOfConfig":"241"},{"size":1319,"mtime":1602574509983,"results":"348","hashOfConfig":"241"},{"size":1411,"mtime":1602574509986,"results":"349","hashOfConfig":"241"},{"size":5421,"mtime":1602574509986,"results":"350","hashOfConfig":"241"},{"size":891,"mtime":1602574510014,"results":"351","hashOfConfig":"241"},{"size":2941,"mtime":1602574509988,"results":"352","hashOfConfig":"241"},{"size":1478,"mtime":1602574509992,"results":"353","hashOfConfig":"241"},{"size":1693,"mtime":1602574509988,"results":"354","hashOfConfig":"241"},{"size":3426,"mtime":1602574509999,"results":"355","hashOfConfig":"241"},{"size":965,"mtime":1602574510013,"results":"356","hashOfConfig":"241"},{"size":234,"mtime":1602574509966,"results":"357","hashOfConfig":"241"},{"size":970,"mtime":1612246455574,"results":"358","hashOfConfig":"241"},{"size":2213,"mtime":1602574509999,"results":"359","hashOfConfig":"241"},{"size":1651,"mtime":1602574510000,"results":"360","hashOfConfig":"241"},{"size":1558,"mtime":1602574509990,"results":"361","hashOfConfig":"241"},{"size":2304,"mtime":1602574509826,"results":"362","hashOfConfig":"241"},{"size":2560,"mtime":1602574509566,"results":"363","hashOfConfig":"241"},{"size":2853,"mtime":1602574509566,"results":"364","hashOfConfig":"241"},{"size":995,"mtime":1602574509965,"results":"365","hashOfConfig":"241"},{"size":1920,"mtime":1608198189737,"results":"366","hashOfConfig":"241"},{"size":313,"mtime":1602574509964,"results":"367","hashOfConfig":"241"},{"size":29809,"mtime":1602574509564,"results":"368","hashOfConfig":"241"},{"size":1689,"mtime":1602574509974,"results":"369","hashOfConfig":"241"},{"size":385,"mtime":1602574509971,"results":"370","hashOfConfig":"241"},{"size":2994,"mtime":1602574509974,"results":"371","hashOfConfig":"241"},{"size":1861,"mtime":1602574509969,"results":"372","hashOfConfig":"241"},{"size":919,"mtime":1602574509970,"results":"373","hashOfConfig":"241"},{"size":6461,"mtime":1602574509994,"results":"374","hashOfConfig":"241"},{"size":2791,"mtime":1602574509992,"results":"375","hashOfConfig":"241"},{"size":6790,"mtime":1602574509994,"results":"376","hashOfConfig":"241"},{"size":1202,"mtime":1602574510012,"results":"377","hashOfConfig":"241"},{"size":153,"mtime":1602574510031,"results":"378","hashOfConfig":"241"},{"size":1269,"mtime":1612249130638,"results":"379","hashOfConfig":"241"},{"size":4481,"mtime":1602935473187,"results":"380","hashOfConfig":"241"},{"size":2307,"mtime":1604402211182,"results":"381","hashOfConfig":"241"},{"size":14546,"mtime":1611925876416,"results":"382","hashOfConfig":"241"},{"size":4374,"mtime":1612771672278,"results":"383","hashOfConfig":"241"},{"size":7223,"mtime":1612763901881,"results":"384","hashOfConfig":"241"},{"size":4099,"mtime":1604399561347,"results":"385","hashOfConfig":"241"},{"size":2098,"mtime":1602745391836,"results":"386","hashOfConfig":"241"},{"size":7305,"mtime":1612767738156,"results":"387","hashOfConfig":"241"},{"size":3129,"mtime":1612863365003,"results":"388","hashOfConfig":"241"},{"size":1420,"mtime":1602574510019,"results":"389","hashOfConfig":"241"},{"size":2225,"mtime":1602574510015,"results":"390","hashOfConfig":"241"},{"size":683,"mtime":1602574509979,"results":"391","hashOfConfig":"241"},{"size":18681,"mtime":1602574509978,"results":"392","hashOfConfig":"241"},{"size":4196,"mtime":1612348252509,"results":"393","hashOfConfig":"241"},{"size":2279,"mtime":1612612368775,"results":"394","hashOfConfig":"241"},{"size":5039,"mtime":1612345153392,"results":"395","hashOfConfig":"241"},{"size":1727,"mtime":1606109556214,"results":"396","hashOfConfig":"241"},{"size":2251,"mtime":1612334352678,"results":"397","hashOfConfig":"241"},{"size":7941,"mtime":1612527577624,"results":"398","hashOfConfig":"241"},{"size":3385,"mtime":1612775520091,"results":"399","hashOfConfig":"241"},{"size":726,"mtime":1612334356979,"results":"400","hashOfConfig":"241"},{"size":10288,"mtime":1612508309490,"results":"401","hashOfConfig":"241"},{"size":3398,"mtime":1612766205989,"results":"402","hashOfConfig":"241"},{"size":14550,"mtime":1612348178363,"results":"403","hashOfConfig":"241"},{"size":1718,"mtime":1602574510001,"results":"404","hashOfConfig":"241"},{"size":262,"mtime":1602574510032,"results":"405","hashOfConfig":"241"},{"size":936,"mtime":1602574509990,"results":"406","hashOfConfig":"241"},{"size":1181,"mtime":1602574509982,"results":"407","hashOfConfig":"241"},{"size":752,"mtime":1602574510012,"results":"408","hashOfConfig":"241"},{"size":953,"mtime":1605859903520,"results":"409","hashOfConfig":"241"},{"size":326,"mtime":1606034398942,"results":"410","hashOfConfig":"241"},{"size":1653,"mtime":1602574509827,"results":"411","hashOfConfig":"241"},{"size":7240,"mtime":1602574510008,"results":"412","hashOfConfig":"241"},{"size":1291,"mtime":1602574509973,"results":"413","hashOfConfig":"241"},{"size":1236,"mtime":1602574509999,"results":"414","hashOfConfig":"241"},{"size":6936,"mtime":1605859903520,"results":"415","hashOfConfig":"241"},{"size":552,"mtime":1602574509968,"results":"416","hashOfConfig":"241"},{"size":342,"mtime":1602574509977,"results":"417","hashOfConfig":"241"},{"size":1272,"mtime":1602574509971,"results":"418","hashOfConfig":"241"},{"size":3106,"mtime":1602574509969,"results":"419","hashOfConfig":"241"},{"size":1800,"mtime":1604661966971,"results":"420","hashOfConfig":"241"},{"size":35920,"mtime":1602574509966,"results":"421","hashOfConfig":"241"},{"size":6568,"mtime":1604491494176,"results":"422","hashOfConfig":"241"},{"size":7249,"mtime":1606566629799,"results":"423","hashOfConfig":"241"},{"size":4133,"mtime":1605094964074,"results":"424","hashOfConfig":"241"},{"size":965,"mtime":1602574509823,"results":"425","hashOfConfig":"241"},{"size":2360,"mtime":1602574509822,"results":"426","hashOfConfig":"241"},{"size":1225,"mtime":1602574510028,"results":"427","hashOfConfig":"241"},{"size":390,"mtime":1602574510033,"results":"428","hashOfConfig":"241"},{"size":1739,"mtime":1602574509986,"results":"429","hashOfConfig":"241"},{"size":682,"mtime":1608196733706,"results":"430","hashOfConfig":"241"},{"size":226,"mtime":1602574510031,"results":"431","hashOfConfig":"241"},{"size":2660,"mtime":1602574509964,"results":"432","hashOfConfig":"241"},{"size":4416,"mtime":1612862681503,"results":"433","hashOfConfig":"241"},{"size":6230,"mtime":1604668377046,"results":"434","hashOfConfig":"241"},{"size":2168,"mtime":1602574509975,"results":"435","hashOfConfig":"241"},{"size":1251,"mtime":1612863361527,"results":"436","hashOfConfig":"241"},{"size":1099,"mtime":1602574509968,"results":"437","hashOfConfig":"241"},{"size":4362,"mtime":1602574509967,"results":"438","hashOfConfig":"241"},{"size":4611,"mtime":1602574509971,"results":"439","hashOfConfig":"241"},{"size":5439,"mtime":1606112044150,"results":"440","hashOfConfig":"241"},{"size":1835,"mtime":1603369349090,"results":"441","hashOfConfig":"241"},{"size":1399,"mtime":1603172140919,"results":"442","hashOfConfig":"241"},{"size":1549,"mtime":1602574509998,"results":"443","hashOfConfig":"241"},{"size":2251,"mtime":1602574509839,"results":"444","hashOfConfig":"241"},{"size":1000,"mtime":1602574509829,"results":"445","hashOfConfig":"241"},{"size":7130,"mtime":1602574509995,"results":"446","hashOfConfig":"241"},{"size":1748,"mtime":1602574509986,"results":"447","hashOfConfig":"241"},{"size":2225,"mtime":1602743254603,"results":"448","hashOfConfig":"241"},{"size":2461,"mtime":1602574509976,"results":"449","hashOfConfig":"241"},{"size":1089,"mtime":1602574509973,"results":"450","hashOfConfig":"241"},{"size":4532,"mtime":1612605749058,"results":"451","hashOfConfig":"241"},{"size":4439,"mtime":1602574510021,"results":"452","hashOfConfig":"241"},{"size":2105,"mtime":1602756023035,"results":"453","hashOfConfig":"241"},{"size":3700,"mtime":1602574509988,"results":"454","hashOfConfig":"241"},{"size":9603,"mtime":1602574509985,"results":"455","hashOfConfig":"241"},{"size":6074,"mtime":1602574509565,"results":"456","hashOfConfig":"241"},{"size":24405,"mtime":1602574509994,"results":"457","hashOfConfig":"241"},{"size":4958,"mtime":1612612627210,"results":"458","hashOfConfig":"241"},{"size":2672,"mtime":1606128403205,"results":"459","hashOfConfig":"241"},{"size":6262,"mtime":1602574509980,"results":"460","hashOfConfig":"241"},{"size":1126,"mtime":1602574509973,"results":"461","hashOfConfig":"241"},{"size":401,"mtime":1602574509975,"results":"462","hashOfConfig":"241"},{"size":5603,"mtime":1604668377047,"results":"463","hashOfConfig":"241"},{"size":1496,"mtime":1603369349070,"results":"464","hashOfConfig":"241"},{"size":2323,"mtime":1612767835264,"results":"465","hashOfConfig":"241"},{"size":1107,"mtime":1602574510013,"results":"466","hashOfConfig":"241"},{"size":324,"mtime":1608359142916,"results":"467","hashOfConfig":"241"},{"size":1179,"mtime":1602574509818,"results":"468","hashOfConfig":"241"},{"size":334,"mtime":1608358026975,"results":"469","hashOfConfig":"241"},{"size":2730,"mtime":1602574509976,"results":"470","hashOfConfig":"241"},{"size":4153,"mtime":1602574510029,"results":"471","hashOfConfig":"241"},{"size":114,"mtime":1602574510033,"results":"472","hashOfConfig":"241"},{"size":10706,"mtime":1608198252132,"results":"473","hashOfConfig":"241"},{"size":4590,"mtime":1602842642301,"results":"474","hashOfConfig":"241"},{"size":11062,"mtime":1602574509562,"results":"475","hashOfConfig":"241"},{"size":1629,"mtime":1602574509967,"results":"476","hashOfConfig":"241"},{"size":2628,"mtime":1602574509997,"results":"477","hashOfConfig":"241"},{"size":3505,"mtime":1602574509837,"results":"478","hashOfConfig":"241"},{"size":4509,"mtime":1602574509564,"results":"479","hashOfConfig":"241"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"483"},"a5wehm",{"filePath":"484","messages":"485","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"494"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"500"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"483"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"483"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"523"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"523"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"483"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"483"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"483"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"483"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"491"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"483"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"483"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"523"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"523"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"523"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"513"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"483"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"483"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"483"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"513"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"513"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"608"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"523"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"513"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"617","messages":"618","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"513"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"513"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"500"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"500"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"669"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"523"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"500"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"483"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"513"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"483"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"491"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751","usedDeprecatedRules":"483"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"500"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"500"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"500"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"483"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"801","usedDeprecatedRules":"483"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"483"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807","usedDeprecatedRules":"483"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810","usedDeprecatedRules":"483"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"483"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"483"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"500"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"835","usedDeprecatedRules":"523"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"523"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"847","usedDeprecatedRules":"513"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"483"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"875","messages":"876","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"877","usedDeprecatedRules":"483"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"513"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"488"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"916","usedDeprecatedRules":"483"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"923","usedDeprecatedRules":"483"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926","usedDeprecatedRules":"513"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"929","usedDeprecatedRules":"483"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"932","usedDeprecatedRules":"513"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"513"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"964","messages":"965","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"966","usedDeprecatedRules":"523"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"971","messages":"972","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"973","messages":"974","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"975","messages":"976","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"977","messages":"978","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"979","usedDeprecatedRules":"523"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"982","usedDeprecatedRules":"483"},{"filePath":"983","messages":"984","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"989","messages":"990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"991","messages":"992","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"513"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1003","usedDeprecatedRules":"483"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"483"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\index.js",["1024"],"import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport Students from './pages/student'\r\nimport StudentProfile from './pages/studentProfile'\r\nimport StudentForm from './pages/studentform'\r\nimport Passwordreset from './pages/studentPasswordReset'\r\n\r\nexport default function Student() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/Student/StudentForm/:id'>\r\n        <StudentForm />\r\n      </Route>\r\n      <Route exact path='/Student/studentProfile/:id'>\r\n        <StudentProfile />\r\n      </Route>\r\n      <Route exact path='/Student/SPasswordReset/:id'>\r\n        <Passwordreset />\r\n      </Route>\r\n      {/* <Route exact path='/Student/Student/:id'>\r\n        <StudentProfile />\r\n      </Route> */}\r\n      <Route exact path='/Student'>\r\n        <Students />\r\n      </Route>\r\n      {/* <Route exact path='/Student' component={Students} /> */}\r\n      <Route  exact path='/Student/StudentForm' component={StudentForm} />\r\n      {/* <Route  exact path='/Student/testprofile' component={StudentProfile} /> */}\r\n\r\n     \r\n    </Switch>\r\n  )\r\n}\r\n",["1025","1026"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\BasePage.js",["1027","1028"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\BuilderPage.js",[],["1029","1030"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\index.js",[],["1031","1032"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\index.js",[],["1033","1034"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\permissionRoles.js",["1035"],"import React, { useEffect, useState } from 'react'\r\nimport { Card, Table } from 'react-bootstrap'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nexport default function PermissionRoles () {\r\n  const [Roles, setRoles] = useState()\r\n  const history = useHistory()\r\n  const { id } = useParams()\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('/api/permission/roles')\r\n      .then(result => {\r\n        console.log(\"result here\" , result , \"end\")\r\n        setRoles(result.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    // axios\r\n    //   .get(`/api/permission/getRolesPermission/${id}`)\r\n    //   .then(result => {\r\n    //     console.log(result)\r\n    //     setRoles(result.data)\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err)\r\n    //   })\r\n  }, [id])\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Header title='Examinations'>\r\n              <Card.Title></Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <h1>Roles</h1>\r\n              <Table>\r\n                <tr>\r\n                \r\n                </tr>\r\n                {Roles &&\r\n                  Roles.length != 0 &&\r\n                  Roles.map(item => (\r\n                    <tr>\r\n                      <td\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={() =>\r\n                          history.push(`/permission/Role/${item.id}`)\r\n                        }\r\n                      >\r\n                        <h4>{item.name}</h4>\r\n                      </td>\r\n                    \r\n                    </tr>\r\n                  ))}\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\index.js",[],["1036","1037"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\Courses.js",["1038","1039","1040"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\branchUserList.js",["1041"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\examQuestions.js",["1042"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport ActionFormatter from '../components/ExamQuestionsActionFormatter'\r\n\r\n\r\nexport default function ExamQuestions (props) {\r\n  const {id} = useParams();\r\n  const [questions, setQuestions] = useState([])\r\n\r\n  let history = useHistory()\r\n  const EditHandler = (qid) => {\r\n    debugger;\r\n    history.push('/Exams/'+id+'/QuestionForm/' + qid)\r\n  }\r\n  const DeleteHandler = (qid) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios.get('/api/Examination/getQuestion/'+qid)\r\n      .then(res => {\r\n        console.log(res)\r\n        axios\r\n        .post('/api/Examination/deleteQuestion/' + id ,res.data)\r\n        .then(res => {alert(\"Question Deleted \");updateData() })\r\n        .catch(() => {})\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      \r\n    }\r\n  }\r\n  const ShowHandler=(id)=>{\r\n    history.push('/Exams/Question/' + id)\r\n\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'question',\r\n      text: 'question',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },    \r\n    {\r\n      dataField: 'marks',\r\n      text: 'Marks',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    }, \r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n       formatter: ActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestion:ShowHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\n\r\n const  updateData = () => {\r\n    debugger\r\n    axios.get('/api/Examination/getQuestionListExam/'+id)\r\n      .then(res => {\r\n      debugger;         \r\n      console.log(res.data)\r\n      setQuestions(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\nuseEffect(() => {\r\n  updateData()\r\n}, [id])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Exam Question'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push('/Exams/'+id+'/QuestionForm/')\r\n                  }}\r\n                >\r\n                  Add Question\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {questions ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={questions}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\SectionEditDilogue.js",["1043","1044","1045"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n// import { useParams } from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Modal } from 'react-bootstrap'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport { Input } from '../../../../_metronic/_partials/controls'\r\nimport { actions } from './../_redux/EcourseRedux'\r\n\r\nconst SectionEditSchema = Yup.object().shape({\r\n  _id: Yup.string().nullable(true),\r\n  name: Yup.string().required('Firstname is required'),\r\n  timeInHours: Yup.number().required('Time  is required'),\r\n  timeInMinutes: Yup.number().required('Time is required'),\r\n  order: Yup.number(),\r\n  courseId: Yup.mixed()\r\n    .nullable(false)\r\n    .required('Course is required')\r\n})\r\n\r\nfunction SectionEditDilogue ({\r\n  show,\r\n  actionsLoading,\r\n  CourseID,\r\n  dispatch,\r\n  Section\r\n})\r\n\r\n\r\n{\r\n  const [section, setsection] = useState(Section != null ?{ ...Section, courseId: CourseID }:{\r\n    _id: null,\r\n    courseId: CourseID,\r\n    name: '',\r\n    timeInHours: null,\r\n    timeInMinutes:null ,\r\n    order: null\r\n  })\r\n  \r\n  let history = useHistory()\r\n  const onHide = () => {\r\n    console.log(CourseID)\r\n    dispatch(actions.SetCurrentSection(null))\r\n    history.push('/Ecourse/CourseContent/?id=' + CourseID)\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal\r\n        size='md'\r\n        show={show}\r\n        onHide={onHide}\r\n        aria-labelledby='example-modal-sizes-title-md'\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id='example-modal-sizes-title-md'>\r\n  {section._id!=null?\"Edit\":\"New\"} section\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <>\r\n          <Formik\r\n            // enableReinitialize={true}\r\n            initialValues={section}\r\n            validationSchema={SectionEditSchema}\r\n            onSubmit={values => {\r\n              debugger\r\n              console.log(values)\r\n              let sec = {\r\n                _id: values._id,\r\n                courseId: values.courseId,\r\n                name: values.name,\r\n                timeInHours: values.timeInHours,\r\n                timeInMinutes: values.timeInMinutes,\r\n                order:values.order\r\n              }\r\n              axios\r\n                .post('/api/course/courseSection', sec)\r\n                .then(response => {\r\n                  onHide()\r\n                })\r\n                .catch(err => {\r\n                  console.log(err)\r\n                })\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <>\r\n                <Modal.Body className='overlay overlay-block cursor-default'>\r\n                  {actionsLoading && (\r\n                    <div className='overlay-layer bg-transparent'>\r\n                      <div className='spinner spinner-lg spinner-success' />\r\n                    </div>\r\n                  )}\r\n                  <Form className='form form-label-right'>\r\n                    <div className='form-group row'>\r\n                      <div className='col-lg-12'>\r\n                        <Field                        \r\n                          name='name'\r\n                          component={Input}\r\n                          placeholder='title'\r\n                          label='Section Title'\r\n                        />\r\n                      </div>\r\n                      <div className='col-lg-12'>\r\n                        <Field\r\n                          name='timeInHours'\r\n                          component={Input}\r\n                          placeholder='timeInHours'\r\n                          label='timeInHours'\r\n                          type=\"number\"\r\n                        />\r\n                      </div>\r\n                      <div className='col-lg-12'>\r\n                        <Field\r\n                          name='timeInMinutes'\r\n                          component={Input}\r\n                          placeholder='timeInMinutes'\r\n                          label='timeInMinutes'\r\n                          type=\"number\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className='col-lg-12'>\r\n                        <Field\r\n                          name='order'\r\n                          component={Input}\r\n                          placeholder='order'\r\n                          label='order'\r\n                          type=\"number\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <button\r\n                    type='button'\r\n                    onClick={onHide}\r\n                    className='btn btn-light btn-elevate mr-2'\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <></>\r\n                  <button\r\n                    type='submit'\r\n                    onClick={() => handleSubmit()}\r\n                    className='btn btn-primary btn-elevate'\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </Modal.Footer>\r\n              </>\r\n            )}\r\n          </Formik>\r\n        </>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  debugger\r\n  console.log(state.course.CurrentCourseId)\r\n  return {\r\n    CourseID: state.course.CurrentCourseId,\r\n    Section: state.course.CurrentSection\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(SectionEditDilogue)\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\CourseProfileFormater.js",[],["1046","1047"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\ContentAddButton.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\progressbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\questionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\NewCourse.js",["1048"],"import React, { Component } from 'react'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport JoditEditor from 'jodit-react'\r\nimport axios from 'axios'\r\n\r\n\r\nexport default class NewCourse extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      // _id: null,\r\n      categories: null,\r\n      rating: 0,\r\n      numberOfRatings: 0,\r\n      numberOfStudent: 0,\r\n      title: '',\r\n      Description: '',\r\n      overview: '',\r\n      timeInHours: \"\",\r\n      timeInMinutes: \"\",\r\n      posterImageUrl: \"\",\r\n      file: ''\r\n    }\r\n    this.editor = React.createRef(null)\r\n    this.uploadFile = this.uploadFile.bind(this)\r\n    this.submitCourse = this.submitCourse.bind(this)\r\n    const {id}=this.props.match.params;\r\n\r\n  }\r\n  onChangeOverView = e => {\r\n    debugger\r\n    // console.log(this.editor.current)\r\n    this.setState(state => ({\r\n      overview: e.target.innerHTML\r\n    }))\r\n  }\r\n  uploadFile = event => {\r\n    console.log('uploding File')\r\n  }\r\n  submitCourse = event => {\r\n    console.log('uploding File')\r\n    console.log(this.id)\r\n    axios\r\n      .post('/api/course/course'+this.id)\r\n      .then(result => {\r\n        this.props.history.push('/setting/courses/'+this.id)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n\r\n    event.preventDefault()\r\n  }\r\n  componentDidMount () {\r\n\r\n    // const search = useLocation().search;\r\n\r\n    const search = this.props.location.search;\r\n    console.log(search);\r\n    const id = new URLSearchParams(search).get(\"cid\");\r\n    console.log(\"id\", id);\r\n    if (id) {\r\n      axios.get(\"/api/course/course/\"+id).then(response=>{\r\n        this.setState({\r\n          ...response.data\r\n        }) \r\n      })\r\n    \r\n    }\r\n  }\r\n  render () {\r\n    const config = {\r\n      readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n    }\r\n    return (\r\n      <div>\r\n        <div className='row'>\r\n          <div className='col-md-12'>\r\n            <Card>\r\n              <Form onSubmit={this.submitCourse} className='form'>\r\n              <Card.Body>\r\n                \r\n                  <Form.Group className='row'>\r\n                    <div className='col-md-6' controlId='formTitle'>\r\n                    <Form.Label>Course Title</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Course Title'\r\n                      value={this.state.title}\r\n                      onChange={event =>\r\n                        this.setState({ title: event.target.value })\r\n                      }\r\n                    />\r\n                    <Form.Text className='text-muted'>\r\n                      new course title.\r\n                    </Form.Text> </div>\r\n                    <div controlId='formDesc' className='col-md-6'>\r\n                \r\n                    <Form.Label>Course Description</Form.Label>\r\n                    <Form.Control \r\n                      type='text'\r\n                      placeholder='Course Description'\r\n                      value={this.state.Description}\r\n                      onChange={event =>\r\n                        this.setState({ Description: event.target.value })\r\n                      }\r\n                    /></div>\r\n                  </Form.Group>\r\n                  \r\n                  <Form.Group controlId='formThr' className='row'>\r\n                    <div className='col-md-6'>\r\n                    <Form.Label>Course Time (hr)</Form.Label>\r\n                    <Form.Control \r\n                      type='number'\r\n                      placeholder='Time in hours'\r\n                      value={this.state.timeInHours}\r\n                      onChange={event =>\r\n                        this.setState({ timeInHours: event.target.value })\r\n                      }\r\n                    /></div>\r\n                 \r\n                  <div className='col-md-6' controlId='formTmin'>\r\n                    <Form.Label>Course Time (min)</Form.Label>\r\n                    <Form.Control\r\n                      type='number'\r\n                      placeholder='Time in Minutes'\r\n                      value={this.state.timeInMinutes}\r\n                      onChange={event =>\r\n                        this.setState({ timeInMinutes: event.target.value })\r\n                      }\r\n                    /></div>\r\n                  </Form.Group>\r\n                  <Form.Group controlId='formOverview' className='row'>\r\n                    <Form.Label className='col-md-12 text-left mb-5'>Course Overview</Form.Label>\r\n                    {/* <Form.Control type='text' placeholder='Course Overview' /> */}\r\n                   <div className='col-md-12 mb-5'><JoditEditor\r\n                      ref={this.editor}\r\n                      value={this.state.overview}\r\n                      config={config}\r\n                      tabIndex={1} // tabIndex of textarea\r\n                      onBlur={this.onChangeOverView.bind(this)} // preferred to use only this option to update the content for performance reasons\r\n                      //    onChange={newContent=>{ this.setState(state=>({overview: newContent.target.textContent}))}}\r\n                    /></div> \r\n                  </Form.Group>\r\n\r\n\r\n                  <Form.Group controlId='Image'>\r\n                    <Form.Label>Course Description</Form.Label>\r\n                    <Form.Control\r\n                      type='file'\r\n                      //   value={this.state.Description}\r\n                      onChange={event =>\r\n                        this.setState({ file: event.target.files[0] })\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n\r\n                 \r\n              \r\n              </Card.Body>\r\n              <Card.Footer>\r\n              <Button variant='primary' type='submit'>\r\n                    Submit\r\n                  </Button>\r\n              </Card.Footer>\r\n              </Form>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n",["1049","1050"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentform.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionTestList.js",["1051"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport TestActionFormatter from '../components/TestActionFormatter'\r\n\r\nexport default function SetionTest (props) {\r\n  const [Test, setTests] = useState([])\r\n\r\n  let history = useHistory()\r\n    const {id} = useParams();\r\n  const EditHandler = (TId) => {\r\n    debugger;\r\n    history.push(`/Test/Course/${id}/TestForm/${TId}`)\r\n  }\r\n  const DeleteHandler = (TId) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios\r\n        .delete('/api/Test/' + id + '/deleteTestById/' + TId )\r\n        .then(res => {alert(\"Test Deleted \");updateData() })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n  const GetQuestionHandler=(TId)=>{\r\n    history.push(`/Test/${TId}/Questions` )\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },   \r\n    {\r\n      dataField: 'passingMarks',\r\n      text: 'passing',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'totalMarks',\r\n      text: 'Total',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'isComplete',\r\n      text: 'Status',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'description',\r\n      text: 'Description',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: TestActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestions:GetQuestionHandler,\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\nconst updateData=()=>{\r\n//   debugger\r\n  axios.get(`/api/Test/${id}/getAllTestsBySection`)\r\n    .then(res => {\r\n    debugger;\r\n    setTests(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title={`Test-`}>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push(`/Test/Course/${id}/TestForm`)\r\n                  }}\r\n                >\r\n                  Create Test\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Test ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Test}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\TestForm.js",["1052","1053"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function TestForm () {\r\n  const [Test, setTest] = useState({\r\n    name: '',\r\n    description: '',\r\n    class: '',\r\n    totalMarks: '',\r\n    timeInHours: '',\r\n    timeInMinutes: '',\r\n    passingMarks: ''\r\n  })\r\n  const [Class, setClasses] = useState([])\r\n  // const [Years, setYears] = useState([])\r\n\r\n  let { id ,  TId } = useParams()\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    \r\n    debugger\r\n    if (id) {\r\n      console.log(id , TId)\r\n      axios.get(`/api/Test/getTestById/${TId}`)\r\n    .then(res => {\r\n    debugger;\r\n    console.log(\"res\" , res)\r\n    setTest(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n    }\r\n  }, [TId, id])\r\n\r\n  const saveTest = event => {\r\n    event.preventDefault()\r\n    axios\r\n      .post(`/api/Test/${id}/saveTestDetails`, Test)\r\n      .then(res => {\r\n        history.push(`/Test/Course/${id}/tests`)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form onSubmit={saveTest} className='form'>\r\n                <Form.Group controlId='formTitle' className='row'>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Test Name</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test Name'\r\n                      value={Test.name}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, name: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Total Marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='Total Marks'\r\n                      value={Test.totalMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, totalMarks: event.target.value })\r\n                      }\r\n                    />set\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>passing  marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='passing Marks'\r\n                      value={Test.passingMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, passingMarks: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                 \r\n\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Hours</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='time in  hours'\r\n                      value={Test.timeInHours}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInHours: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Minutes</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='time in  minutes'\r\n                      value={Test.timeInMinutes}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInMinutes: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='col-md-12'>\r\n                    <Form.Label>Test description</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test description'\r\n                      value={Test.description}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, description: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestList.js",["1054"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport TestActionFormatter from '../components/TestActionFormatter'\r\n\r\nexport default function CourseTestList (props) {\r\n  const [Test, setTests] = useState([])\r\n\r\n  let history = useHistory()\r\n    const {id} = useParams();\r\n  const EditHandler = (TId) => {\r\n    debugger;\r\n    history.push(`/Test/CourseTest/${id}/TestForm/${TId}`)\r\n  }\r\n  const DeleteHandler = (TId) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios\r\n        .delete('/api/Course/' + id + '/deleteTestById/' + TId )\r\n        .then(res => {alert(\"Test Deleted \");updateData() })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n  const GetQuestionHandler=(TId)=>{\r\n    history.push(`/Test/CourseTest/${TId}/Questions` )\r\n  }\r\n  const ChangeDescription = (cellContent) => {\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent }}></div>\r\n}\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },   \r\n    {\r\n      dataField: 'passingMarks',\r\n      text: 'passing',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'totalMarks',\r\n      text: 'Total',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'isComplete',\r\n      text: 'Status',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'testLevel',\r\n      text: 'Test Level',\r\n      sort: true,\r\n      formatter : ChangeDescription , \r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: TestActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestions:GetQuestionHandler,\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\nconst updateData=()=>{\r\n//   debugger\r\n  axios.get(`/api/Course/${id}/getAllTestsByCourse`)\r\n    .then(res => {\r\n    debugger;\r\n    setTests(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title={`Test-`}>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push(`/Test/CourseTest/${id}/TestForm`)\r\n                  }}\r\n                >\r\n                  Create Test\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Test ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Test}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseQuestionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\pages\\Notifications.js",["1055","1056","1057","1058"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Button , Modal } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\nimport NotificationActionFormatter from '../components/NotificationActionFormatter'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\n\r\nexport default function Notifications (props) {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [modelData , setModelData] = useState()\r\n\r\n  const ChangeDescription = (cellContent) => {\r\n  return cellContent && <Button onClick={() => {setModelData(cellContent) ; setModalShow(true)}}>Show </Button> \r\n  }\r\n  const ChangeDate = (cellContent) =>{ \r\n    return cellContent.slice(0 ,10)\r\n  }\r\n  const ChangeName = (cellContent) => {\r\n    return cellContent.charAt(0).toUpperCase() + cellContent.slice(1)\r\n  }\r\n  const StatusColor = (cellContent) => {\r\n    if(cellContent == \"Pending\"){\r\n      return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"Red\") }}></div> \r\n    }\r\n    if(cellContent == 'Approved'){\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"Green\") }}></div> \r\n    }\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"marron\") }}></div> \r\n\r\n  }\r\n  const ChangeTypeColor = (cellContent) => {\r\n     if(cellContent == \"ClassFee\"){\r\n        return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"Blue-green\t\") }}></div> \r\n     }\r\n     if (cellContent == \"StudentFee\"){\r\n      return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"Brick Red\t\") }}></div>  \r\n     }\r\n\r\n    return cellContent\r\n\r\n   }\r\n  const RejectClassAction = (changeRequestId ,entityId ,requestedFees , requestType) => {\r\n    var data = {status : \"Rejected\" , changeRequestId :changeRequestId ,entityId :entityId ,\r\n    requestedFees :requestedFees , requestType : requestType\r\n   }\r\n   \r\n\r\n   \r\n   axios.post('/api/branch/handleRequest' , data).then((res) => {\r\n\r\n   }).catch((error) => {\r\n\r\n   })\r\n   updateData()\r\n  }\r\n  const ApproveClassAction = (changeRequestId ,entityId ,requestedFees , requestType) => {\r\n    var data = {status : \"Approved\" , changeRequestId :changeRequestId ,entityId :entityId ,\r\n     requestedFees :requestedFees , requestType : requestType\r\n    }\r\n\r\n    axios.post('/api/branch/handleRequest' , data).then((res) => {\r\n\r\n    }).catch((error) => {\r\n\r\n    })\r\n    updateData()\r\n\r\n  }\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Description\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* <h4>Centered Modal</h4> */}\r\n          <p>\r\n           {props.data}\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )}\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: 'changeRequest._id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'changeRequest.requestType',\r\n      text: 'Type',\r\n      sort: true,\r\n      formatter : ChangeTypeColor,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'changeRequest.entityName',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'changeRequest.description',\r\n      text: 'Description',\r\n      sort: true,\r\n      formatter : ChangeDescription,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'changeRequest.fees',\r\n      text: 'fees',\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: 'changeRequest.requestedFees',\r\n      text: 'RequestedFees',\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: 'changeRequest.requestedBy[0].name',\r\n      text: 'requestedBy',\r\n      sort: true,\r\n      formatter : ChangeName,\r\n    },\r\n    {\r\n      dataField: 'changeRequest.requestDate',\r\n      text: 'requestdate',\r\n      sort: true,\r\n      formatter : ChangeDate,\r\n    },\r\n    {\r\n      dataField: 'changeRequest.status',\r\n      text: 'status',\r\n      sort: true,\r\n      formatter : StatusColor\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter : NotificationActionFormatter , \r\n      formatExtraData: {\r\n        RejectClassAction: RejectClassAction,\r\n        ApproveClassAction: ApproveClassAction\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '250px'\r\n      }\r\n    }\r\n  ]\r\n  const updateData=()=>{\r\n    debugger\r\n    axios\r\n      .get('/api/Branch/getRequests')\r\n      .then(res => {\r\n        setNotifications(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const [Notifications, setNotifications] = useState(null)\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='All Class'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    props.history.push('/setting/classForm')\r\n                  }}\r\n                >\r\n                  New Class\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Notifications ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Notifications}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps}\r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n              {modelData && <MyVerticallyCenteredModal\r\n      show={modalShow}\r\n      onHide={() => setModalShow(false)}\r\n      data={ modelData}\r\n      />}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\CourseContent.js",["1059","1060","1061","1062","1063","1064","1065","1066"],"import React, { Component } from 'react'\r\nimport { Button, Form, Accordion, Card, Col, Nav, Row } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { Typography, Grid, Paper } from '@material-ui/core'\r\nimport { ExpansionPanel } from '@material-ui/core'\r\nimport { ExpansionPanelSummary } from '@material-ui/core'\r\nimport { ExpansionPanelDetails } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { actions } from './../_redux/EcourseRedux'\r\n\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   CardHeader,\r\n//   CardHeaderToolbar\r\n// } from '../../../../_metronic/_partials/controls'\r\n// import Typography from '@material-ui/core'\r\n\r\n// const useStyles  = theme => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//   },\r\n//   paper: {\r\n//     padding: theme.spacing(2),\r\n//     textAlign: 'center',\r\n//     color: theme.palette.text.secondary,\r\n//   },\r\n// })\r\n\r\nclass CourseContent extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    const search = this.props.location.search\r\n    console.log(search)\r\n    const id = new URLSearchParams(search).get('id')\r\n\r\n    this.state = {\r\n      courseId: id,\r\n      sections: [],\r\n      expanded: 'panel1'\r\n    }\r\n    this.handleChange = panel => () => {\r\n      if (this.state.expanded != panel) this.setState({ expanded: panel })\r\n    }\r\n    this.CreateSection = () => {\r\n      this.props.history.push('/Ecourse/CourseContent/section')\r\n    }\r\n\r\n    this.EditSection = (item, e) => {\r\n      this.props.dispatch(actions.SetCurrentSection(item))\r\n      this.props.history.push('/Ecourse/CourseContent/section?id=' + item._id)\r\n      e.stopPropagation()\r\n    }\r\n    this.DeleteSection = (id, e) => {\r\n      debugger\r\n      if (window.confirm('Do you realy Want to delete Compelete Section ?')) {\r\n        debugger\r\n        axios\r\n          .delete('/api/course/courseSection/', {\r\n            data: { courseId: this.state.courseId, _id: id }\r\n          })\r\n          .then(response => {\r\n            this.loaddata()\r\n          })\r\n      }\r\n      e.stopPropagation()\r\n    }\r\n    this.loaddata = () => {\r\n      debugger\r\n      if (this.state.courseId) {\r\n        axios\r\n          .get('/api/course/course/' + this.state.courseId)\r\n          .then(response => {\r\n            this.setState({\r\n              ...response.data\r\n            })\r\n          })\r\n      }\r\n    }\r\n  }\r\n  addSectionContent = (section, event) => {\r\n    this.props.dispatch(actions.SetCurrentSection(section))\r\n    this.props.history.push('/Ecourse/CourseContent/section/Content')\r\n  }\r\n  EditSectionContent = (section, item, event) => {\r\n    this.props.dispatch(actions.SetCurrentSection(section))\r\n    this.props.dispatch(actions.SetCurrentContent(item))\r\n    this.props.history.push(\r\n      '/Ecourse/CourseContent/section/Content?id=' + item._id\r\n    )\r\n  }\r\n  DeleteSectionContent = (_id, e) => {\r\n    debugger\r\n    if (window.confirm('Do you realy Want to delete this Content ?')) {\r\n      debugger\r\n      axios\r\n        .delete('/api/course/courseSectionContent', {\r\n          data: { id: _id }\r\n        })\r\n        .then(response => {\r\n          this.loaddata()\r\n        })\r\n    }\r\n    // e.stopPropagation()\r\n  }\r\n  componentDidMount () {\r\n    this.unblock = this.props.history.block(targetLocation => {\r\n      // take your action here\r\n      return true\r\n    })\r\n    debugger\r\n    this.props.dispatch(actions.SetCurrentContent(null))\r\n    this.props.dispatch(actions.SetCurrentSection(null))\r\n    const search = this.props.location.search\r\n    console.log(search)\r\n    const id = new URLSearchParams(search).get('id')\r\n    if (id) {\r\n      axios.get('/api/course/course/' + id).then(response => {\r\n        this.setState({\r\n          ...response.data\r\n        })\r\n      })\r\n    }\r\n  }\r\n  componentWillUnmount () {\r\n    this.unblock()\r\n  }\r\n  render () {\r\n    // const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className='row'>\r\n            <div className='col-md-12'>\r\n              <Card>\r\n                <Card.Header as='h5'>\r\n                  {this.state.title}\r\n                  <button                   \r\n                    className='btn btn-primary float-right'\r\n                    onClick={this.CreateSection}\r\n                  >\r\n                    Add New Section\r\n                  </button>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col><Card.Text>{this.state.Description}</Card.Text></Col>\r\n                    <Col md=\"auto\">\r\n                    <Nav variant=\"pills\"  className=\"justify-content-end mb-5\" defaultActiveKey=\"#first\">\r\n      <Nav.Item>\r\n        <Nav.Link href=\"#first\">Video</Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link href=\"#link\">Audio</Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link href=\"#disabled\">PDF</Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link href=\"#disabled\">Text</Nav.Link>\r\n      </Nav.Item>\r\n    </Nav></Col>\r\n                    </Row>\r\n                  \r\n                  <Accordion>\r\n                    {this.state.sections.map(item => (\r\n                      <Card key={item._id}>\r\n                        <Card.Header>\r\n                          <div className=\"row\"><div className=\"col ANewSec\">\r\n                        <Accordion.Toggle\r\n                            as={Button}\r\n                            variant='text'\r\n                            eventKey={item._id}\r\n                          >\r\n                            <h5>{item.name}</h5>\r\n                          </Accordion.Toggle>\r\n                          </div> \r\n                          <Col md=\"auto\">\r\n                          <div\r\n                            className='btn-group'\r\n                            role='group'\r\n                            aria-label='' \r\n                          >\r\n                            <button\r\n                              className='btn btn-primary pull-right'\r\n                              style={{ marginLeft: 'auto' }}\r\n                              onClick={e => {\r\n                                this.addSectionContent(item, e)\r\n                              }}\r\n                            >\r\n                              add Content\r\n                            </button>\r\n                            <button\r\n                              className=' btn btn-primary pull-right'\r\n                              style={{ marginLeft: 'auto' }}\r\n                              onClick={e => {\r\n                                this.EditSection(item, e)\r\n                              }}\r\n                            >\r\n                              Edit\r\n                            </button>\r\n                            <button\r\n                              className=' btn btn-danger pull-right'\r\n                              onClick={event => {\r\n                                this.DeleteSection(item._id, event)\r\n                              }}\r\n                            >\r\n                              delete\r\n                            </button>\r\n                          </div>\r\n                          </Col>\r\n                          </div>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey={item._id}>\r\n                          <Card.Body>\r\n                            {item.contents.map(c => {\r\n                              return (\r\n                                <div className='row' key={c._id} style={{ margin: '10px' }}>\r\n                                  <Col>{c.title}</Col>\r\n\r\n                                  <Col>{c.type}</Col>\r\n                                  <Col xs md=\"2\">\r\n                                    <div\r\n                                      className='btn-group'\r\n                                      role='group'\r\n                                      aria-label='' \r\n                                    >\r\n                                      <button\r\n                                        className='btn btn-primary pull-right'\r\n                                        onClick={event => {\r\n                                          this.EditSectionContent(\r\n                                            item,\r\n                                            c,\r\n                                            event\r\n                                          )\r\n                                        }}\r\n                                      >\r\n                                        Edit\r\n                                      </button>\r\n                                      <button\r\n                                        className='btn btn-danger pull-right'\r\n                                        onClick={event => {\r\n                                          this.DeleteSectionContent(\r\n                                            c._id                                           \r\n                                          )\r\n                                        }}\r\n                                      >\r\n                                        delete\r\n                                      </button>\r\n                                    </div>\r\n                                  </Col>\r\n                                </div>\r\n                              )\r\n                            })}\r\n                          </Card.Body>\r\n                        </Accordion.Collapse>\r\n                      </Card>\r\n                    ))}\r\n                  </Accordion>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  return { CourseID: state.course.CurrentCourseId }\r\n}\r\nexport default connect(mapStateToProps)(CourseContent)\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\cardSideStickey.js",["1067"],"import React from 'react'\r\nimport { Row, Col, Card } from 'react-bootstrap'\r\nexport default function cardSideStickey ({ data ,EditHandler }) {\r\n  \r\n  return (\r\n    <div\r\n      style={{\r\n        position: '-webkit-sticky',\r\n        position: 'sticky',\r\n        top: 120\r\n      }}\r\n    >\r\n      <Card>\r\n      <Card.Header as='h5'>{data[0].title}</Card.Header>\r\n        <Card.Body>\r\n          <Row><img src={`${window.$apihost }/uploads/CourseProfile/`+data[0].posterImageUrl} alt ={data[0].title} width={\"100%\"} className=\"p-5\"></img></Row>\r\n          <Row>\r\n            <Col>Test:&nbsp;{data[0].noOftests}</Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>Sections: &nbsp;{data.length}</Col>\r\n          </Row>\r\n          <Row>\r\n            <Col><button className=\"btn btn-danger\" onClick={ EditHandler}>Update Course</button></Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Announcement.js",["1068","1069"],"import React  , {useEffect,  useRef , useState} from 'react'\r\nimport { Row, Col,Card ,Button  , Form } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport JoditEditor from 'jodit-react'\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from 'react-router'\r\nexport default function Announcement({ id}){\r\nconst [announcement , setannouncement]  = useState({\r\n  title : \"\" , \r\n  Description : \"\"\r\n})\r\nconst [announcements , setannoucements] = useState()\r\n\r\n  const editor = useRef(null)\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const {courseId} = useParams()\r\n  useEffect(() => {\r\n    update()\r\n  }, [])\r\n  const update =() => {\r\n    axios.get('/api/course/getAnnouncement/' + courseId).then((res)=>{\r\n      setannoucements(res.data)\r\n    }).catch((res)=>{\r\n\r\n    })\r\n  }\r\n  const handleAnnouncement = e => {\r\n    setannouncement({...announcement,Description :  e.target.innerText })\r\n  }\r\n\r\n  const saveAnnouncement =  async event => {\r\n    event.preventDefault()\r\n    debugger;\r\n    await axios.post('/api/course/saveAnnouncement/' + courseId , announcement).then((res) => {\r\n    }).catch((error) => {\r\n\r\n    })\r\n    setannouncement({title : \"\" , Description : \"\"})\r\n    update()\r\n\r\n  }\r\n    return (\r\n        <Card classNameName='col-md-12'>\r\n          {/* { (id == )} */}\r\n          <Form onSubmit={saveAnnouncement} className='form'>\r\n\r\n            <Form.Group controlId='formTitle' className='row'>\r\n\r\n                  \r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test Name'\r\n                      value={announcement.title}\r\n                      onChange={event =>\r\n                        setannouncement({ ...announcement, title: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-12'>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <JoditEditor\r\n                        ref={editor}\r\n                        value={announcement.Description}\r\n                        config={config}\r\n                        tabIndex={1} // tabIndex of textarea\r\n                        onBlur={handleAnnouncement} // preferred to use only this option to update the content for performance reasons\r\n                      />\r\n                  </div>\r\n                  </Form.Group>\r\n\r\n                  <Button variant='primary' type='submit'>\r\n                    Submit\r\n                        </Button>\r\n          </Form>\r\n          \r\n            \r\n        <Card.Header as='h5'>Announcements</Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col>\r\n            {console.log(\"id\" , id)}\r\n            {announcements && announcements.length && announcements.map((element) => \r\n                \r\n              <div style={{ width: '80%' }} key={element.announcement._id}>\r\n                \r\n                <h3>{element.announcement.title}</h3>\r\n                <p>\r\n                  {element.announcement.Description}\r\n                </p>\r\n               \r\n                <p>\r\n                  Created at {element.announcement.createDate.slice(0, 10)}\r\n                </p>\r\n              </div>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\TestQuestionsActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\coursetestblocks.js",["1070","1071"],"import React from 'react'\r\nimport { Card, Row, Col, Button } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function TestBlocks({ test , classes ,course }) {\r\n  const history = useHistory()\r\n  return (\r\n    <>\r\n      <Col md={4} sm={12}>\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title>Test Name :  { test.name}   <span style={{ float: \"right\" }} className='badge badge-secondary'>{test.testLevel}</span></Card.Title>\r\n            <Card.Text>Class Name :{classes.name}</Card.Text>\r\n            <Card.Text>Course Name : {course.title}</Card.Text>\r\n            <Card.Text>Test Level : {test.testLevel}</Card.Text>\r\n\r\n            \r\n            <span className={\"badge badge-danger\"}>{test.isComplete == true ? \"Complete\" : \"Not Complete\"} </span>\r\n            <hr></hr>\r\n            <Card.Text> <div  dangerouslySetInnerHTML={{    __html: test.description }}></div></Card.Text>\r\n            <div>\r\n            <p >Total Time : {test.timeInHours} : {test.timeInMinutes} hr  </p>\r\n            <p style={{ float: \"right\" }}>passing Marks: {test.passingMarks}</p>\r\n            <p>Total Marks: {test.totalMarks}</p>\r\n            </div>\r\n  \r\n            {console.log(\"test\"  , test)}\r\n            <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push('/Test/CourseTest/' + test._id + '/Questions')\r\n              }}\r\n            >\r\n              Show Test\r\n            </Button>\r\n            {/* <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push('/' + test._id)\r\n              }}\r\n            >\r\n              start Course\r\n            </Button> */}\r\n            {/* <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push('Courses/Tests/' + course._id)\r\n              }}\r\n            >\r\n              Test\r\n            </Button> */}\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ScheduleExamActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget1.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget8.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\mixed\\MixedWidget1.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget4.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\stats\\StatsWidget12.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenuListControlPanel.js",["1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084"],"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useContext } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SVG from 'react-inlinesvg'\r\nimport { shallowEqual, useSelector } from 'react-redux'\r\nimport { toAbsoluteUrl, checkIsActive } from '../../../../_helpers'\r\nimport { permissionsContext } from '../../../../../app/modules/permissionManager/permissionContext'\r\n\r\nexport function AsideMenuListControlPanel ({ layoutProps }) {\r\n  const location = useLocation()\r\n  const getMenuItemActive = (url, hasSubmenu = false) => {\r\n    return checkIsActive(location, url)\r\n      ? ` ${!hasSubmenu && 'menu-item-active'} menu-item-open `\r\n      : ''\r\n  }\r\n  const  {auth}  = useSelector(\r\n    ({ auth }) => ({\r\n      auth: auth\r\n    }),\r\n    shallowEqual\r\n  )\r\n  const { isUserAuthenticate } = useContext(permissionsContext)\r\n\r\n  return (\r\n    <>\r\n      {/* begin::Menu Nav */}\r\n      <ul className={`menu-nav ${layoutProps.ulClasses}`}>\r\n        {/*begin::1 Level*/}\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/home', false)}`}\r\n          aria-haspopup='true'\r\n        >\r\n          \r\n          <div className='menu-link' onClick={() => window.location.href = \"http://localhost:3001/searchpage\"} >\r\n              <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Design/Layers.svg')} />\r\n            </span> \r\n            <span className='menu-text' >Home</span>\r\n          </div>\r\n           \r\n        </li>\r\n        <hr></hr>\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/dashboard', false)}`}\r\n          aria-haspopup='true'\r\n        >\r\n          <NavLink className='menu-link' to='/dashboard'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Design/Layers.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Dashboard</span>\r\n          </NavLink>\r\n        </li>\r\n        {/*end::1 Level*/}\r\n\r\n        {/*begin::1 Level*/}\r\n        {/*end::1 Level*/}\r\n        {/* <li\r\n          className={`menu-item ${getMenuItemActive('/setting', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Branch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>setting</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Branch</span>\r\n                </span>\r\n              </li>\r\n              <li\r\n                className={`menu-item ${getMenuItemActive('/setting/branch')}`}\r\n                aria-haspopup='true'\r\n              >\r\n                <NavLink className='menu-link' to='/setting/branch'>\r\n                  <i className='menu-bullet menu-bullet-dot'>\r\n                    <span />\r\n                  </i>\r\n                  <span className='menu-text'>Branch</span>\r\n                </NavLink>\r\n              </li>\r\n              <li\r\n                className={`menu-item ${getMenuItemActive('/setting/class')}`}\r\n                aria-haspopup='true'\r\n              >\r\n                <NavLink className='menu-link' to='/setting/class'>\r\n                  <i className='menu-bullet menu-bullet-dot'>\r\n                    <span />\r\n                  </i>\r\n                  <span className='menu-text'>Class</span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li> */}\r\n\r\n{(    auth.isInstituteUser || isUserAuthenticate('M1', 1))  && ( \r\n<li\r\n          className={`menu-item ${getMenuItemActive('/setting/Branch', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Branch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Branch</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n)}\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/setting/class', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/class'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Class</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M3', 1)) && (\r\n          <li className={`menu-item ${getMenuItemActive('/User', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/User'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Users</span>\r\n              {/* <i className='menu-arrow' /> */}\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n        {/* Components */}\r\n\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M6', 1)) && ( <li\r\n          className={`menu-item ${getMenuItemActive(\r\n            '/ecourse/Courses',\r\n            false\r\n          )}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/ecourse/Courses'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Courses</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n        )}\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M7', 1)) && ( <li\r\n          className={`menu-item ${getMenuItemActive('/Test/testlist', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Test/testlist'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Tests</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n        )}\r\n      {(    auth.isInstituteUser || isUserAuthenticate('M4', 1)) && (   <li\r\n          className={`menu-item ${getMenuItemActive('/Exams', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Exams'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Examination</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Schedule Exam</span>\r\n                </span>\r\n              </li>\r\n              <li\r\n                className={`menu-item ${getMenuItemActive('/Exams/Scheduled')}`}\r\n                aria-haspopup='true'\r\n              >\r\n                <NavLink className='menu-link' to='/Exams/Scheduled'>\r\n                  <i className='menu-bullet menu-bullet-dot'>\r\n                    <span />\r\n                  </i>\r\n                  <span className='menu-text'>Schedule Exam</span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      )}\r\n\r\n\r\n        \r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/Notifications', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Notifications'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Notifications</span>\r\n          </NavLink>\r\n        </li>\r\n\r\n        {    auth.isInstituteUser  && ( <li\r\n          className={`menu-item ${getMenuItemActive(\r\n            '/permission/Roles',\r\n            false\r\n          )}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/permission/Roles'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Permission</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Permission</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        )}\r\n\r\n        {/* begin::section */}\r\n        <li className='menu-section '>\r\n          <h4 className='menu-text'>Components</h4>\r\n          <i className='menu-icon flaticon-more-v2'></i>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\Userform.js",["1085","1086","1087"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams  } from 'react-router-dom'\r\nimport Select from 'react-select';\r\n// import { ToastContainer, toast } from 'react-toastify';\r\nimport { Button, Form, Card, Col, Row  } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport DropdownMultiselect from 'react-multiselect-dropdown-bootstrap'\r\n\r\nfunction Userform () {\r\n  const [User, setUser] = useState({\r\n    name: '',\r\n    // role: '',\r\n    password: '',\r\n    email: '',\r\n    mobile: '',\r\n    confirmPassword: '',\r\n    branch: '',\r\n    roles: []\r\n  })\r\n  const [MatchPassword , setMatchPassword] = useState([])\r\n  const [Roles, setRoles] = useState([])\r\n  const [RolesDdr, setRolesDdr] = useState([])\r\n  const [ShowBranch, setShowBranch] = useState(false)\r\n  const [Branches, setBranches] = useState([])\r\n\r\n  let { id } = useParams()\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    if (id) {\r\n      axios\r\n        .get('/api/staff/User/' + id)\r\n        .then(res => {\r\n          if (res.data.roles.length) {\r\n            setUser({ ...res.data, password: '', role: res.data.roles[0] })\r\n          } else {\r\n            setUser({ ...res.data, password: '' })\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n    axios\r\n      .get('/api/staff/UserRolesIstitute')\r\n      .then(res => {\r\n        setRoles(res.data)\r\n        var roles = res.data.map(item => {\r\n          return { key: item.id, label: item.name }\r\n        })\r\n        setRolesDdr(roles)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    axios\r\n      .get('/api/branch/Branch')\r\n      .then(res => {\r\n        setBranches(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id])\r\n  useEffect(() => {\r\n    \r\ndebugger;\r\n    var role = Roles.filter(m => User.roles.includes(m.id))\r\n    if (role.length) {\r\n    var adminRole= role.some(a=>a.type === 1) ;\r\n      setShowBranch(!adminRole);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [User])\r\n\r\n  const saveUser = event => {\r\n   \r\n    event.preventDefault()\r\n    if(MatchPassword){\r\n      return alert(MatchPassword)\r\n    }\r\n    \r\n    axios.post('/api/staff/UserFormInstitute', User)\r\n      .then(res => {\r\n        history.push('/user')\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form onSubmit={saveUser}>\r\n                <Form.Group className='row'>\r\n                  <Col>\r\n                    <Form.Label>User Name</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder=' Full  Name'\r\n                      value={User.name}\r\n                      required\r\n                      onChange={event =>\r\n                        setUser({ ...User, name: event.target.value })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <div className='app'>\r\n                      <div className='preview-values '>\r\n                        <Form.Label>User Role </Form.Label>\r\n                        {/* {User.roles} */}\r\n                      </div>\r\n                      {/* {User.roles} */}\r\n                      {RolesDdr.length && (\r\n                        // <Select\r\n                        // IsMulti\r\n                        // name='roles'\r\n                        // menuPosition='fixed'\r\n                        // options={RolesDdr}\r\n                        // value={User.roles}\r\n                        // placeholder='Select Roles'\r\n                        // onChange={selected => {\r\n                        //   console.log(\"selected\" , selected)\r\n                        //   // setUser({ ...User, roles: selected })\r\n                        //   // console.log(selected)\r\n                        // }} />\r\n                    \r\n                        <DropdownMultiselect\r\n                        isMultiSelectable\r\n                          options={RolesDdr}\r\n                          name='roles'\r\n                          selected={User.roles}\r\n                          required\r\n                          onChange={selected => {\r\n                            console.log(\"selected\" , selected)\r\n                            var newRoles = []\r\n                            selected.map((single) => {\r\n                              newRoles.push(single.key)\r\n                              setUser({ ...User, roles:  newRoles})\r\n                            })\r\n                            \r\n                            // console.log(selected)\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  \r\n                  </Col>\r\n                   <Col>\r\n\r\n                   { ShowBranch && \r\n                   <>\r\n                     <Form.Label>User Branch </Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      placeholder=''\r\n                      disabled={!ShowBranch}\r\n                      value={User.branch}\r\n                      onChange={event =>\r\n                        setUser({ ...User, branch: event.target.value })\r\n                      }\r\n                    >\r\n                      <option value=\"\">select Branch</option>\r\n                      {Branches.map(item => (\r\n                        <option value={item._id} key={item._id}>\r\n                          {item.name}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    </>\r\n                    }\r\n                   \r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='formEmail' className='row'>\r\n                  <Col>\r\n                    <Form.Label> Email </Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder='user email'\r\n                      value={User.email}\r\n                      required\r\n                      onChange={event =>\r\n                        setUser({ ...User, email: event.target.value })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    {' '}\r\n                    <Form.Label> Mobile </Form.Label>\r\n                    <Form.Control\r\n                      type='number'\r\n                      placeholder='user mobile'\r\n                      value={User.mobile}\r\n                      required\r\n                      onChange={event => {\r\n                        \r\n                        setUser({ ...User, mobile: event.target.value })\r\n                      }}\r\n                      onBlur = {event => {\r\n                        if( event.target.value.length < 10){\r\n                          return alert(\"Mobile number must be of 10 digit\")\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label> Password </Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='user pasword'\r\n                      value={User.pasword}\r\n                      required\r\n                      onChange={event =>\r\n                        setUser({ ...User, password: event.target.value })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label> Confirm Password </Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='Confirm  pasword'\r\n                      value={User.confirmPassword}\r\n                      required\r\n                      onChange={event =>\r\n                        setUser({\r\n                          ...User,\r\n                          confirmPassword: event.target.value\r\n                        })\r\n                      }\r\n                      onBlur={event => {\r\n                        if(User.password === event.target.value){\r\n                          setMatchPassword(\"\")\r\n                        }\r\n                        else{\r\n                          setMatchPassword(\"Password don't match.\")\r\n                        }\r\n                       \r\n                      }}\r\n                      \r\n                    />\r\n                    {MatchPassword && <div className=\"text-danger\">{MatchPassword}</div> }\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n                {/* <ToastContainer limit={5} style={{backgroundColor : \"red\"}}/> */}\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Userform\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\store.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicSubheader.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\privateRoute.js",["1088"],"import React from \"react\"\r\nimport {Redirect , Route} from \"react-router-dom\"\r\nimport { shallowEqual, useSelector    } from 'react-redux'\r\n\r\nexport default function  PrivateRoute ({component: Component  ,  ...rest}){\r\n    const { isAuthorized } = useSelector(\r\n        ({ auth }) => ({\r\n          isAuthorized: auth.user != null\r\n        }),\r\n        shallowEqual\r\n    )\r\n    console.log(\"isAuth\" , isAuthorized)\r\n    return (\r\n        \r\n        <Route {...rest} render={(props) => (\r\n                isAuthorized ? <Component {...props} /> : window.location.href = \"http://localhost:3001/auth/login\"\r\n        )} />\r\n    )\r\n}\r\n\r\n\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\_redux\\EcourseRedux.js",["1089","1090"],"import { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\n\r\nexport const actionTypes = {\r\n  ADD_SECTION: 'New Course Section',\r\n  SET_CURRENT_COURSE: 'Set Current Course',\r\n  SET_CURRENT_SECTION: 'Set Current Section',\r\n  SET_CURRENT_CONTENT:'Set Current Content'\r\n}\r\n\r\nconst initialCourseState = {\r\n  CurrentCourseId: null,\r\n  CurrentSection: null,\r\n  CurrentContent:null,\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v706-ecom' },\r\n  (state = initialCourseState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.SET_CURRENT_COURSE: {\r\n        const { id } = action.payload\r\n        return { ...state, CurrentCourseId: id }\r\n      }\r\n      case actionTypes.SET_CURRENT_SECTION: {\r\n        const { item } = action.payload\r\n        return { ...state, CurrentSection: item }\r\n      }\r\n      case actionTypes.SET_CURRENT_CONTENT: {\r\n        const { item } = action.payload\r\n        return { ...state, CurrentContent: item }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  SetCurrentCourse: id => ({\r\n    type: actionTypes.SET_CURRENT_COURSE,\r\n    payload: { id }\r\n  }),\r\n  SetCurrentSection: item => ({\r\n    type: actionTypes.SET_CURRENT_SECTION,\r\n    payload: { item }\r\n  }),\r\n  SetCurrentContent: item => ({\r\n    type: actionTypes.SET_CURRENT_CONTENT,\r\n    payload: { item }\r\n  })\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\_redux\\authRedux.js",["1091"],"import { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { put, takeLatest } from \"redux-saga/effects\";\r\nimport { getUserByToken,\r\n  // logoutUser\r\n } from \"./authCrud\";\r\n\r\nexport const actionTypes = {\r\n  getUserData : 'getUserData',\r\n  Login: \"[Login] Action\",\r\n  Logout: \"[Logout] Action\",\r\n  Register: \"[Register] Action\",\r\n  registerReducer: \"[registerReducer] Action\",\r\n  UserRequested: \"[Request User] Action\",\r\n  UserLoaded: \"[Load User] Auth API\",\r\n  LogoutRequested:\"[Logout User] Auth API\",\r\n  ChangeBranch:\"[Change Current Branch] Auth API\",\r\n  ChangeControlPanelStatus:\"[Change Control panel status]\"\r\n};\r\n\r\nconst initialAuthState = {\r\n  user: undefined,\r\n  isInstituteUser:false,\r\n  userPermission:[],\r\n  authToken: undefined,\r\n  currentBranch:null,\r\n  branches:[],\r\n  controlPanelStatus:false\r\n};\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: \"v706-demo1-auth\", whitelist: [\"user\", \"authToken\",\"currentBranch\",\"branches\",\"controlPanelStatus\",\"isInstituteUser\",\"userPermission\"] },\r\n  (state = initialAuthState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.Login: {\r\n        const { authToken } = action.payload;\r\n        return { ...state, authToken, user: undefined };\r\n      }\r\n\r\n      case actionTypes.registerReducer: {\r\n        const message = action.payload;\r\n        return {  ...state, user: undefined };\r\n      }\r\n\r\n      case actionTypes.Logout: {\r\n        // TODO: Change this code. Actions in reducer aren't allowed.\r\n        return initialAuthState;\r\n      }\r\n\r\n      case actionTypes.UserLoaded: {\r\n        const { user ,authToken} = action.payload;\r\n        debugger;\r\n        if(user && user.roles){\r\n          console.log(\"in reduceer\" , user)\r\n          var  instituteAdmin= user.roles.filter(u=> u.type===1)\r\n          console.log(\"in reduceer 1\" , instituteAdmin)\r\n          var isInstituteUser=instituteAdmin.length?true:false;\r\n        }\r\n      \r\n        return { ...state,authToken , user,userPermission:user.permission,branches:user.branches,currentBranch:user.branch,isInstituteUser};\r\n      }\r\n        case actionTypes.ChangeControlPanelStatus: {\r\n          debugger;\r\n          const { status } = action.payload;\r\n        return { ...state,controlPanelStatus:status};\r\n      }\r\n      // case actionTypes.ChangeBranch: {\r\n      //   const { branchId } = action.payload;\r\n      //   return { ...state,currentBranch:state.branches?state.branches.filter(m=>m._id===branchId)[0]:null};\r\n      // }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n);\r\n\r\nexport const actions = {\r\n  login: authToken => ({ type: actionTypes.Login, payload: { authToken } }),\r\n  register: message => ({\r\n    type: actionTypes.Register,\r\n    payload: { message }\r\n  }),\r\n  registerReducer: message => ({\r\n    type: actionTypes.Register1,\r\n    payload: { message }\r\n  }),\r\n  logout: () => ({ type: actionTypes.Logout }),\r\n  requestUser: user =>({ type: actionTypes.UserRequested, payload: { user } }),\r\n  fulfillUser:( user ,authToken) => ({ type: actionTypes.UserLoaded, payload: { user ,authToken } }),\r\n  requestLogout: user => ({ type: actionTypes.LogoutRequested}),\r\n  changeBranch: branchId=>({ type: actionTypes.ChangeBranch,payload:{branchId}}),\r\n  ChangeControlPanelStatus:status=>({type: actionTypes.ChangeControlPanelStatus,payload:{status}})\r\n\r\n};\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.Login, function* loginSaga() {\r\n    yield put(actions.requestUser());\r\n  });\r\n\r\n  yield takeLatest(actionTypes.Register, function* registerSaga(action) {\r\n    console.log(\"in the saga\" , action.payload.message)\r\n    yield put(actions.registerReducer(action.payload.message))\r\n  });\r\n\r\n  yield takeLatest(actionTypes.UserRequested, function* userRequested() {\r\n    const { data: user } = yield getUserByToken();\r\n    yield put(actions.fulfillUser(user));\r\n  });\r\n\r\n  // yield takeLatest(actionTypes.LogoutRequested, function*  UserLogout() {\r\n  //   debugger;\r\n  //   logoutUser();\r\n  //   yield put(actions.logout());\r\n  // });\r\n\r\n  yield takeLatest(actionTypes.getUserData, function* getUser(action) {\r\n    debugger\r\n    const {authToken }  = action.payload\r\n    console.log(\"auth here\" , authToken)\r\n    const { data: user } = yield getUserByToken(authToken);\r\n    debugger\r\n    yield put(actions.fulfillUser(user ,authToken));\r\n    console.log(\"auth\" , authToken , user)\r\n  });\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CoursePlayer.js",["1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113"],"import React, {\r\n  useEffect,\r\n  useState\r\n} from 'react'\r\nimport '../../../../../node_modules/video-react/dist/video-react.css'\r\nimport axios from 'axios'\r\nimport {\r\n  useLocation,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport PDF from 'react-pdf-js-infinite';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport ReactPlayer from 'react-player'\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Navbar,\r\n  Nav,\r\n  Accordion,\r\n  Tabs,\r\n  Tab,\r\n  Button,\r\n  Image,\r\n  Form\r\n} from 'react-bootstrap'\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from 'react-router'\r\nimport JoditEditor from 'jodit-react'\r\n\r\nexport default function CoursePlayer() {\r\n  const history = useHistory()\r\n  const [CourseData, setCourseData] = useState()\r\n  const [currentItem, setCurrentItem] = useState()\r\n  const [discussion  , setDiscussion] = useState()\r\n  const [answer , setAnswer] = useState()\r\n  const [videotime , setVideoTime] = useState(0)\r\n  const [updatetime , setUpdateTime] = useState()\r\n  const [nextPlayer , setNextPlayer] = useState(false)\r\n  const [answered , setAnswered] = useState(true)\r\n  const {\r\n    id,\r\n    contentId,\r\n    type,\r\n    sectionId,\r\n    time\r\n  } = useParams()\r\n  // const { id, topic, type} = useParams()\r\n\r\n  const player = React.createRef()\r\n  // const handleChangeTopic=(item)=>{\r\n  //   history.push(`/coursePlayer/${id}/${topic}/${type}`)\r\n  // }\r\n  const editor = React.useRef(null)\r\n  const config = {\r\n   defaultActionOnPaste: 'insert_as_html',\r\n   askBeforePasteFromWord: false,\r\n   askBeforePasteHTML: false,\r\n   readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n}\r\n  const getDiscussion = (contentid) => {\r\n        \r\n          axios.get(`/api/course/${id}/${sectionId}/${contentid}/getCourseDiscussion`).then((res) => {\r\n            \r\n            setDiscussion(res.data)\r\n          }).catch((error)=>{\r\n      \r\n          })\r\n        \r\n        \r\n    \r\n    }\r\n      var i = 0\r\n    \r\n      const giveAnswer = (courseId ,sectionId , contentId  , discussionId) => {\r\n        axios.post(`/api/course/${courseId}/addDiscussionAnswer/${sectionId}/${contentId}/${discussionId}` , answer).then((res) => {\r\n    \r\n        }).catch((error) => {\r\n    \r\n        })\r\n        getDiscussion(contentId)\r\n        setAnswered(true)\r\n      }\r\n      const gerCourse = () => {\r\n            axios\r\n              .get('/api/Course/getCourseContent/' + id)\r\n              .then( res => {\r\n                \r\n                setCourseData(res.data)        \r\n                if (!currentItem) {\r\n                  getDiscussion(res.data.sections[0].contents[0]._id)\r\n                  setCurrentItem(res.data.sections[0].contents[0])\r\n                  \r\n                  history.push(`/coursePlayer/${id}/${res.data.sections[0]._id}/${res.data.sections[0].contents[0]._id}/video`)\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                console.log(err)\r\n              })\r\n          }\r\n  \r\n  useEffect(() => {\r\n    setUpdateTime(time)\r\n    gerCourse()\r\n    debugger;\r\n    if (CourseData) {\r\n      var section = CourseData.sections.find(section => section._id == sectionId)\r\n      if (section) {\r\n        var content = section.contents.find(m => m._id == contentId)\r\n        // content.seen=true\r\n        setCurrentItem(content);\r\n        getDiscussion(content._id)\r\n      }\r\n  \r\n    }\r\n  }, [contentId  , time])\r\n\r\n  useEffect(() => {\r\n    setVideoTime(time)\r\n    changeVideoPlayer()\r\n    \r\n  } , [time ])\r\n \r\n  const changeContentClass = content => {\r\n    debugger;\r\n    var classname = \"\"\r\n    if (contentId == content._id) {\r\n      classname = classname + \"watched active\"\r\n    }\r\n    else\r\n      if ( content.seen) {\r\n        classname = \"watched\"\r\n      }\r\n    return classname\r\n  }\r\nvar i = 0\r\n const changeVideoPlayer =( ) => {\r\n   if(time !== \"undefiend\"){\r\n    return (currentItem && \r\n      <>\r\n     <ReactPlayer\r\n     url={`http://localhost:4000/api/stream/video/${currentItem.videoUrl}`}\r\n     playing={true}\r\n     className='react-player'\r\n     muted\r\n     \r\n     playsinline={true}\r\n     width='100%'\r\n     height='100%'\r\n     ref={player => (player = player)}\r\n     onReady={player => {\r\n       \r\n       if(videotime){\r\n         \r\n         player.seekTo(\r\n          videotime,\r\n           'seconds'\r\n         )\r\n         setVideoTime(0) \r\n       }\r\n       setVideoTime(0) \r\n         \r\n       \r\n     }}\r\n     playing={true}\r\n     onProgress={currentTime => {\r\n      \r\n      \r\n     }}\r\n     controls\r\n     config={{\r\n       file: {\r\n         attributes: { controlsList: 'nodownload' }\r\n       }\r\n     }}\r\n   ></ReactPlayer></>\r\n    )\r\n   }\r\n   \r\n }\r\n  // const GetClassForContent = contentsdata => {  \r\n  //   if (currentItem && currentItem._id === contentsdata._id && contentsdata.seen == true)return  'watched active'\r\n  //   if (contentsdata.seen === true) return 'watched'\r\n  // }\r\n  const location = useLocation();\r\n  return (\r\n    <>{console.log(\"location\" , location && location)}\r\n      <Navbar bg='dark'>\r\n        <Navbar.Brand\r\n          className='text-warning'\r\n          onClick={() => history.push('/')}\r\n        >\r\n          {' '}\r\n          &#8592; Back{' '}\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n      <Container fluid>\r\n        {CourseData && (\r\n          <Row className='mt-5'>\r\n            <Col md={3}>\r\n              <Accordion defaultActiveKey={0}>\r\n                {CourseData.sections.map((data, index) => {\r\n                  return (\r\n                    <Card key={data._id}>\r\n                      <Accordion.Toggle as={Card.Header} eventKey={index}>\r\n                        <div\r\n                          style={{ padding: '10px' }}\r\n                          className='course-player-section-list'\r\n                        >\r\n                          <h6>{data.name}</h6>\r\n                        </div>\r\n                      </Accordion.Toggle>\r\n\r\n                      <Accordion.Collapse eventKey={index}>\r\n                        <Card.Body>\r\n                          <ul className='course-player-content-list'>\r\n                            {data.contents.map(contentsdata => {\r\n                              return (\r\n                                <li\r\n                                  key={contentsdata._id}\r\n                                  className={changeContentClass(contentsdata)}\r\n                                 onClick={() => {setVideoTime(0) ; setNextPlayer(false)}}\r\n                                  \r\n                                  \r\n                                >\r\n                                  <Link\r\n                                    to={`/coursePlayer/${id}/${data._id}/${contentsdata._id\r\n                                      }/${contentsdata.videoUrl\r\n                                        ? 'video'\r\n                                        : contentsdata.audioUrl\r\n                                          ? 'audio'\r\n                                          : contentsdata.imageUrl\r\n                                            ? 'image'\r\n                                            : contentsdata.pdfUrl\r\n                                              ? 'pdf'\r\n                                              : 'text'\r\n                                      }`}\r\n                                  \r\n                                  >\r\n                                    {contentsdata.title}\r\n\r\n                                    <span >{contentsdata.videoLength ? contentsdata.videoLength : \"Video Time\" }</span>\r\n                                  </Link>\r\n                                </li>\r\n                              )\r\n                            })}\r\n                          </ul>\r\n                          <button\r\n                            className='btn btn-success btn-block course-player-test-btn'\r\n                            onClick={() => {\r\n                              history.push(`/test/sectionTests/${data._id}`)\r\n                            }}\r\n                          >\r\n                            Tests\r\n                          </button>\r\n                        </Card.Body>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  )\r\n                })}\r\n              </Accordion>\r\n            </Col>\r\n            <Col md={9}>\r\n              <Tabs\r\n                defaultActiveKey={type}\r\n                id='uncontrolled-tab-example'\r\n                onSelect={key => {\r\n                  history.push(`/coursePlayer/${id}/${contentId}/${key}`)\r\n                  \r\n                }}\r\n              >\r\n                {currentItem &&\r\n                  (currentItem.videoUrl || currentItem.videoDescription) && (\r\n                    <Tab eventKey='video' title='Video'>\r\n                      <Card>\r\n                        <Card.Body>\r\n                          \r\n                          <>\r\n                            {/* <Card.Title>Video</Card.Title> */}\r\n                            {currentItem && currentItem.videoUrl && nextPlayer && \r\n                              changeVideoPlayer()\r\n                          }\r\n                          {currentItem && currentItem.videoUrl && !nextPlayer && (\r\n                            <>\r\n                              <ReactPlayer\r\n                              url={`http://localhost:4000/api/stream/video/${currentItem.videoUrl}`}\r\n                              playing={true}\r\n                              className='react-player'\r\n                              muted\r\n                              \r\n                              playsinline={true}\r\n                              width='100%'\r\n                              height='100%'\r\n                              ref={player => (player = player)}\r\n                              onReady={player => {\r\n                                \r\n\r\n                              }}\r\n                              playing={true}\r\n                              onProgress={currentTime => {\r\n                               \r\n                               \r\n                              }}\r\n                              controls\r\n                              config={{\r\n                                file: {\r\n                                  attributes: { controlsList: 'nodownload' }\r\n                                }\r\n                              }}\r\n                            ></ReactPlayer>\r\n                            </>\r\n                          )}\r\n                        </>\r\n\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: currentItem\r\n                                ? currentItem.videoDescription\r\n                                : ''\r\n                            }}\r\n                          ></div>\r\n                          <hr></hr>\r\n                           Discussion \r\n                         <hr></hr>\r\n                            \r\n                          <ul className=\"list-group\">\r\n                         \r\n                            {discussion && discussion.length && discussion.map((singleDiscussion) => {\r\n                            \r\n                            i = i + 1\r\n                              return (\r\n                                \r\n                                  <li key={singleDiscussion.sections.contents.discussion._id} class=\"list-group-item\" style={{backgroundColor : \"#E4E6EF\"}}>\r\n                                     \r\n                                    <p\r\n                                   onClick={async () => {\r\n                                     \r\n                                   await setNextPlayer(false)\r\n                                    \r\n                                     setVideoTime(singleDiscussion.sections.contents.discussion.question.exactTime)\r\n                                     setNextPlayer(true)\r\n                                    history.push(`/coursePlayer/${id}/${sectionId}/${currentItem._id}/${singleDiscussion.sections.contents.discussion.question.exactTime}/video`)\r\n                                   }}\r\n                                     \r\n                                     >\r\n                                      VideoTime :  &nbsp;{singleDiscussion.sections.contents.discussion.question.videoTime} </p> \r\n                                  <p>Question At :  &nbsp; {singleDiscussion.sections.contents.discussion.question.createdDate.slice(0,10)}</p>\r\n                                  {singleDiscussion.sections.contents.discussion.answer.answerText && <p>Answered At :  &nbsp; {singleDiscussion.sections.contents.discussion.answer.createdDate.slice(0,10)}</p>}\r\n\r\n                                      {/* <button  onClick={() => setTime(singleDiscussion.sections.contents.discussion.question.exactTime)  }>video</button> */}\r\n\r\n                                      <p>Question . {i} :  &nbsp;{singleDiscussion.sections.contents.discussion.question.questionText}</p> \r\n                            \r\n                                    <hr></hr>\r\n                              {singleDiscussion.sections.contents.discussion.answer.answerText && answered  && <p>Answer :  &nbsp; { <div  dangerouslySetInnerHTML={{    __html: singleDiscussion.sections.contents.discussion.answer.answerText }}></div> }<button onClick={() => setAnswered(false)}>Edit</button></p> ||\r\n                              <div>\r\n                                 <JoditEditor\r\n                                      \r\n                                      ref={editor}\r\n                                       value={answer && answer.answerText && answer.answerText  || \"\"}\r\n                                      config={config}\r\n                                      tabIndex={1} // tabIndex of textarea\r\n                                      onBlur={(event) => setAnswer({...answer , answerText : event.target.innerText })} // preferred to use only this option to update the content for performance reasons\r\n                                    />\r\n                                {/* <input placeholder={\"Give answer\"} onChange={(event) => setAnswer({...answer , answerText : event.target.value})}></input> */}\r\n                                <button onClick={() => giveAnswer(singleDiscussion._id , singleDiscussion.sections._id , singleDiscussion.sections.contents._id , singleDiscussion.sections.contents.discussion._id)}>Submit</button>\r\n                              </div>  }\r\n                                    <br></br>\r\n                                    <hr></hr>\r\n                                    <hr></hr>\r\n                                    <hr></hr>\r\n                                    \r\n                                   </li>\r\n                                  \r\n                                   \r\n                            \r\n                            \r\n                              )\r\n                            }) || \"No Discussion Yet\"}\r\n                            \r\n                          \r\n                            \r\n                          </ul>\r\n                          {/* <Button variant='primary' onClick={player.pause()}>Go somewhere</Button> */}\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Tab>\r\n                  )}\r\n                {currentItem &&\r\n                  (currentItem.audioUrl || currentItem.audioDescription) && (\r\n                    <Tab eventKey='audio' title='Audio'>\r\n                      <Card>\r\n                        <Card.Body>\r\n                          <Card.Title>AUDIO</Card.Title>\r\n                          <Card.Text>\r\n                            <div\r\n                              dangerouslySetInnerHTML={{\r\n                                __html: currentItem\r\n                                  ? currentItem.audioDescription\r\n                                  : ''\r\n                              }}\r\n                            ></div>\r\n                          </Card.Text>\r\n                          {currentItem && currentItem.audioUrl && (\r\n                            <ReactAudioPlayer\r\n                              src={`${window.$apihost}uploads/CourseContent/${currentItem.audioUrl}`}\r\n                              autoPlay\r\n                              controls\r\n                              controlsList=\"nodownload\"\r\n                            />\r\n                          )}\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Tab>\r\n                  )}\r\n                {currentItem &&\r\n                  (currentItem.imageUrl || currentItem.imageDescription) && (\r\n                    <Tab eventKey='image' title='Media File'>\r\n                      <Card>\r\n                        <Card.Body>\r\n                          <>\r\n                            <Card.Title>Image</Card.Title>\r\n                            <Card.Text>\r\n                              <div\r\n                                dangerouslySetInnerHTML={{\r\n                                  __html: currentItem\r\n                                    ? currentItem.imageDescription\r\n                                    : ''\r\n                                }}\r\n                              ></div>\r\n                            </Card.Text>\r\n                            {currentItem && currentItem.imageUrl && (\r\n                              <Image\r\n                                src={\r\n                                  currentItem\r\n                                    ? `uploads/CourseContent/${currentItem.imageUrl}`\r\n                                    : ''\r\n                                }\r\n                                width='500px'\r\n                              ></Image>\r\n                            )}\r\n                            {/* <Button variant='primary'>Go somewhere</Button> */}\r\n                          </>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Tab>\r\n                  )}\r\n                {/* {currentItem && currentItem.pdfUrl  &&\r\n                  <Tab eventKey='pdf' title='pdf'>\r\n                    <Card>\r\n                      <Card.Body>\r\n                        <Card.Title>Pdf</Card.Title>\r\n                        <Card.Text>\r\n                        <div  dangerouslySetInnerHTML={{    __html: currentItem ? currentItem.pdfDescription : \"\"  }}></div>\r\n                        </Card.Text>\r\n                        {currentItem &&  currentItem.videoUrl && (\r\n                            <PDF \r\n                            file={`${window.$apihost}uploads/CourseContent/${currentItem.pdfUrl}`} \r\n                            width = '100%'\r\n                            controls\r\n                        />\r\n                        )}\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Tab>\r\n                  } */}\r\n                {currentItem && currentItem.textDescription && (\r\n                  <Tab eventKey='text' title='text'>\r\n                    <Card>\r\n                      <Card.Body>\r\n                        <Card.Title>TEXT</Card.Title>\r\n                        <Card.Text>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: currentItem\r\n                                ? currentItem.textDescription\r\n                                : ''\r\n                            }}\r\n                          ></div>\r\n                        </Card.Text>\r\n                        {/* <Button variant='primary'>Go somewhere</Button> */}\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Tab>\r\n                )}\r\n              </Tabs>\r\n            </Col>\r\n          </Row>\r\n        )}{' '}\r\n      </Container>\r\n    </>\r\n  )\r\n}","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\__mocks__\\userTableMock.js",["1114"],"import {toAbsoluteUrl} from \"../../../../_metronic/_helpers\";\r\n\r\nexport default [\r\n  {\r\n    id: 1,\r\n    username: \"admin\",\r\n    password: \"demo\",\r\n    email: \"admin@demo.com\",\r\n    accessToken: \"access-token-8f3ae836da744329a6f93bf20594b5cc\",\r\n    refreshToken: \"access-token-f8c137a2c98743f48b643e71161d90aa\",\r\n    roles: [1], // Administrator\r\n    pic: toAbsoluteUrl(\"/media/users/300_25.jpg\"),\r\n    fullname: \"Sean\",\r\n    occupation: \"CEO\",\r\n    companyName: \"Keenthemes\",\r\n    phone: \"456669067890\",\r\n    address: {\r\n      addressLine: \"L-12-20 Vertex, Cybersquare\",\r\n      city: \"San Francisco\",\r\n      state: \"California\",\r\n      postCode: \"45000\"\r\n    },\r\n    socialNetworks: {\r\n      linkedIn: \"https://linkedin.com/admin\",\r\n      facebook: \"https://facebook.com/admin\",\r\n      twitter: \"https://twitter.com/admin\",\r\n      instagram: \"https://instagram.com/admin\"\r\n    }\r\n  },\r\n  {\r\n    id: 2,\r\n    username: \"user\",\r\n    password: \"demo\",\r\n    email: \"user@demo.com\",\r\n    accessToken: \"access-token-6829bba69dd3421d8762-991e9e806dbf\",\r\n    refreshToken: \"access-token-f8e4c61a318e4d618b6c199ef96b9e55\",\r\n    roles: [2], // Manager\r\n    pic: toAbsoluteUrl(\"/media/users/100_2.jpg\"),\r\n    fullname: \"Megan\",\r\n    occupation: \"Deputy Head of Keenthemes in New York office\",\r\n    companyName: \"Keenthemes\",\r\n    phone: \"456669067891\",\r\n    address: {\r\n      addressLine: \"3487  Ingram Road\",\r\n      city: \"Greensboro\",\r\n      state: \"North Carolina\",\r\n      postCode: \"27409\"\r\n    },\r\n    socialNetworks: {\r\n      linkedIn: \"https://linkedin.com/user\",\r\n      facebook: \"https://facebook.com/user\",\r\n      twitter: \"https://twitter.com/user\",\r\n      instagram: \"https://instagram.com/user\"\r\n    }\r\n  },\r\n  {\r\n    id: 3,\r\n    username: \"guest\",\r\n    password: \"demo\",\r\n    email: \"guest@demo.com\",\r\n    accessToken: \"access-token-d2dff7b82f784de584b60964abbe45b9\",\r\n    refreshToken: \"access-token-c999ccfe74aa40d0aa1a64c5e620c1a5\",\r\n    roles: [3], // Guest\r\n    pic: toAbsoluteUrl(\"/media/users/default.jpg\"),\r\n    fullname: \"Ginobili Maccari\",\r\n    occupation: \"CFO\",\r\n    companyName: \"Keenthemes\",\r\n    phone: \"456669067892\",\r\n    address: {\r\n      addressLine: \"1467  Griffin Street\",\r\n      city: \"Phoenix\",\r\n      state: \"Arizona\",\r\n      postCode: \"85012\"\r\n    },\r\n    socialNetworks: {\r\n      linkedIn: \"https://linkedin.com/guest\",\r\n      facebook: \"https://facebook.com/guest\",\r\n      twitter: \"https://twitter.com/guest\",\r\n      instagram: \"https://instagram.com/guest\"\r\n    }\r\n  }\r\n];\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\index.js",["1115"],"import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport SectionsTest from './pages/SectionTestList'\r\nimport TestForm from './pages/TestForm'\r\nimport TestQuestion from './pages/testQuestion'\r\nimport QuestionForm from './pages/questionForm'\r\nimport Question from './pages/question'\r\nimport CourseTestForm from './pages/CourseTestForm'\r\nimport CourseTestList from './pages/CourseTestList'\r\nimport CourseTestQuestions from './pages/CourseTestQuestions'\r\nimport CourseTestQuestion from './pages/CourseTestQuestion'\r\nimport CourseQuestionForm from './pages/CourseQuestionForm'\r\nimport SectionTestList from './pages/SectionalTestList'\r\nimport SectionalTestForm from './pages/SectionalTestForm'\r\nimport TestList from './pages/testList'\r\n\r\nexport default function Student() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/Test/Course/:id/tests'>\r\n        <SectionsTest/>\r\n      </Route>\r\n      <Route exact path='/Test/Course/:id/TestForm'>\r\n        <TestForm/>\r\n      </Route>\r\n      <Route exact path='/Test/Course/:id/TestForm/:TId'>\r\n        <TestForm/>\r\n      </Route>\r\n      <Route exact path='/Test/:id/Questions'>\r\n        <TestQuestion />\r\n      </Route> \r\n      <Route exact path='/Test/:id/Question/:qid'>\r\n        <Question />\r\n      </Route>\r\n      <Route exact path='/Test/:id/QuestionForm'>\r\n        <QuestionForm />\r\n      </Route>\r\n      <Route exact path='/Test/:id/QuestionForm/:qid'>\r\n        <QuestionForm />\r\n      </Route>  \r\n\r\n      <Route exact path='/Test/CourseTest/:id?/TestForm'>\r\n        <CourseTestForm/>\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/TestForm/:TId'>\r\n        <CourseTestForm/>\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/tests'>\r\n        <CourseTestList/>\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/Questions'>\r\n        <CourseTestQuestions/>\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/Question/:qid'>\r\n        <CourseTestQuestion />\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/QuestionForm'>\r\n        <CourseQuestionForm />\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/QuestionForm/:qid'>\r\n        <CourseQuestionForm />\r\n      </Route>\r\n      \r\n\r\n      <Route exact path='/Test/:id/section/:sid/tests'>\r\n        < SectionTestList />\r\n      </Route>\r\n      <Route exact path='/Test/:id/section/:sid/sectionalTestForm'>\r\n        < SectionalTestForm />\r\n      </Route>\r\n      <Route exact path='/Test/:id/section/:sid/sectionalTestForm/:tid'>\r\n        < SectionalTestForm />\r\n      </Route>\r\n      <Route exact path='/Test/testlist'>\r\n        < TestList />\r\n      </Route>\r\n      \r\n      \r\n     \r\n      {/* <Route  exact path='/Student/testprofile' component={StudentProfile} /> */}\r\n\r\n     \r\n    </Switch>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage5.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage2.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\menus.js",["1116"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport MenuActionFormatter from '../components/MenuActionFormatter'\r\n\r\nexport default function Menus (props) {\r\n  const [menus, setMenus] = useState(null)\r\n\r\n  let history = useHistory()\r\n  const EditMenuHandler = (id) => {\r\n    history.push('' + id)\r\n  }\r\n  const DeleteMenuHandler = (id) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios\r\n        .delete('', { id })\r\n        .then(res => {})\r\n        .catch(() => {})\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Title',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'MenuCode',\r\n      text: 'Description',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },   \r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: MenuActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditMenuHandler,\r\n        DeleteAction: DeleteMenuHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\n\r\n  useEffect(() => {\r\n    debugger\r\n    // axios.get('')\r\n    //   .then(res => {\r\n    //   debugger;\r\n    //       // let ClassBatches= res.data.classes.reduce((batchlist,obj)=>\r\n    //       // {       debugger;\r\n    //       //      return batchlist.concat(obj.batches)\r\n    //       // },[])\r\n    //       if(res.data && res.data.length){\r\n    //         setMenus(res.data)\r\n    //       }\r\n      \r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err)\r\n    //   })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Menu list'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/permission/MenuForm')\r\n                  }}\r\n                >\r\n                  New Menu\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {menus && menus.length ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={menus}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\FeeManagement\\pages\\feeManagement.js",["1117","1118","1119","1120","1121"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\n\r\nexport default function FeeManagement (props) {\r\n  const [feeStructure , setFeeStructure] = useState()\r\n\r\n  const updateData=()=>{\r\n   axios\r\n     .get('/api/fee/GetStudentFeeDetail')\r\n     .then(res => {\r\n       console.log(\"data here \" , res.data)\r\n       setFeeStructure(res.data)\r\n     })\r\n     .catch(err => {\r\n       console.log(err)\r\n     })\r\n }\r\n \r\n useEffect(() => {\r\n   updateData()\r\n }, [])\r\n\r\nconst TotalFeeSubmittedFormatter = (cellContent ) => {\r\n  return cellContent && cellContent || 0\r\n}\r\nconst RemainingFeeSubmittedFormatter = (cellContent , row) => {\r\n  if(cellContent){\r\n    if(row.fees / 2 < cellContent){\r\n      return <div style={{color : \"red\"}}>{cellContent}</div>\r\n    }else{\r\n      return <div style={{color : \"green\"}}>{cellContent}</div>\r\n    }\r\n  }\r\n  return <div style={{color : \"red\"}}>{row.fees}</div>\r\n}\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Student Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'TotalFeeSubmitted',\r\n      text: 'Total Fee Submitted',\r\n      sort: true,\r\n      formatter :  TotalFeeSubmittedFormatter,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'fees',\r\n      text: 'Total Fees',\r\n      sort: true,\r\n      //cellClasses: 'bg-primary',\r\n      //headerClasses: 'bg-primary',\r\n      \r\n      sortCaret: sortCaret, \r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'Remaining',\r\n      text: 'Remaining Fees',\r\n      sort: true,\r\n      formatter :  RemainingFeeSubmittedFormatter,\r\n      //cellClasses: 'bg-primary',\r\n      //headerClasses: 'bg-primary',\r\n      \r\n      sortCaret: sortCaret, \r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      // formatter: BatchActionFormatter,\r\n      // formatExtraData: {\r\n      //   EditBatchAction: EditBranchHandler,\r\n      //   DeleteBatchAction: DeleteBranchHandler\r\n      // },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Batch list'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    props.history.push('/setting/BatchForm')\r\n                  }}\r\n                >\r\n                  New Batcch\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {feeStructure && feeStructure.length && (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={feeStructure}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) || (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n",["1122","1123"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\scheduleExam.js",["1124","1125","1126"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport ScheduleExamActionFormatter from '../components/ScheduleExamActionFormatter'\r\nimport DatePicker from 'react-datepicker'\r\nimport { registerLocale , setDefaultLocale } from \"react-datepicker\";\r\nimport { enUS } from 'date-fns/locale'\r\nregisterLocale(\"enUS\", enUS); // register it with the name you want\r\nsetDefaultLocale(\"enUS\");\r\nexport default function ScheduleExam (props) {\r\n  const [Exams, setExams] = useState([])\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [Exam , setExam] = useState()\r\n  const [ReExam , setReExam] = useState()\r\n  let history = useHistory()\r\n\r\n  const DeleteHandler = (isActive, _id , examId ,  startDate ,endDate , classID ) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      var data = {isActive, _id , examId ,  startDate ,endDate , classID }\r\n      axios\r\n        .post('/api/Examination/deleteScheduleExam/'  , data)\r\n        .then(res => {\r\n          alert('Exam Deleted')\r\n          updateData()\r\n        })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n  const ChangeDescription = (cellContent) => {\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent }}></div>\r\n  }\r\n  const ChangeStartDate = (cellContent) => {\r\n    setReExam({...ReExam , startDate :cellContent})\r\n    return cellContent ? cellContent.slice(0,10) : cellContent\r\n  }\r\n  const ChangeEndDate = (cellContent) => {\r\n    setReExam({...ReExam  , endDate : cellContent })\r\n    return cellContent ? cellContent.slice(0,10) : cellContent\r\n  }\r\n  const statusFormatter = (cellContent) => {\r\n    return cellContent == true ? \"Active\" : \"InActive\" \r\n  }\r\n  const editActive = (cellContent) => {\r\n    return \r\n  }\r\n  const ChangeState = (val , id , classID) => {\r\n\r\n    debugger;\r\n   var data = {isActive : val , id , classID}\r\n   console.log(data);\r\n\r\n    axios.post('/api/examination/updateActive' ,data ).then((res) => {\r\nconsole.log(res.data)\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    })\r\n    updateData()\r\n  }\r\n  \r\n  const editHandler = (id , className , examName , startDate , endDate , classID , examId) => {\r\n    console.log(id , className , examName, startDate, endDate)\r\n    setReExam({...ReExam , id : id , className : className , examName :examName ,classID : classID , examId : examId  })\r\n    setExam({ ...Exam , id : id , className : className , examName :examName ,endDate :endDate  , startDate :startDate })\r\n    setModalShow(true)\r\n }\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: 'classes.examSchedule._id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'classes.examSchedule.examId[0].name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'classes.name',\r\n      text: 'Class',\r\n      sort: true,\r\n      //cellClasses: 'bg-primary',\r\n      //headerClasses: 'bg-primary',\r\n\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n\r\n    {\r\n      dataField: 'classes.examSchedule.startDate',\r\n      text: 'StartDate',\r\n      sort: true,\r\n      formatter : ChangeStartDate,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'classes.examSchedule.endDate',\r\n      text: 'EndDate',\r\n      sort: true,\r\n      formatter :  ChangeEndDate ,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'classes.examSchedule.isActive',\r\n      text: 'Status',\r\n      sort: true,\r\n      formatter: statusFormatter,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'classes.examSchedule.examId[0].description',\r\n      text: 'Description',\r\n      sort: true,\r\n      formatter: ChangeDescription,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: ScheduleExamActionFormatter,\r\n      formatExtraData: {\r\n        ChangeState : ChangeState , \r\n        EditAction : editHandler , \r\n        DeleteAction: DeleteHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n  ]\r\n  const updateData = () => {\r\n    debugger\r\n    axios\r\n      .get('/api/examination/getExamSchedule')\r\n      .then(res => {\r\n        debugger\r\n        setExams(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n  const submitReSchedule =  (id) => {\r\n    \r\n    axios.post('/api/examination/reSchedule' ,ReExam ).then((res) => {\r\n      if(res.status === 200){\r\n        setModalShow(false)\r\n        updateData()\r\n      }\r\n    }).catch((error) => {\r\n\r\n    })\r\n    \r\n  }\r\n\r\n  function MyVerticallyCenteredModal (props) {\r\n    return (\r\n       \r\n      <Modal\r\n        {...props}\r\n        size='lg'\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n        key={props.data.id}\r\n      >\r\n        <Modal.Header >\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            ReSchedule Exam\r\n          </Modal.Title>\r\n          <button onClick={() => setModalShow(false)}>close</button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <h4>Class Name : &nbsp;{props.data.className}</h4><br></br>\r\n          <h4>Exam Name : &nbsp;{props.data.examName}</h4>\r\n          <br></br>\r\n          <br></br>\r\n          <p>\r\n            Start Date :     <DatePicker value={Exam.startDate ?  Exam.startDate.slice(0,10) : Exam.startDateNew }  selected={Exam.startDateNew }   onChange={newDate =>{ setReExam({...ReExam , startDate : newDate}) ; setExam({...Exam , startDateNew : newDate , startDate : \"\"})} } />\r\n\r\n          </p>\r\n          <p>\r\n            End Date :  <DatePicker  value={Exam.endDate ? Exam.endDate.slice(0,10) : Exam.endDateNew } selected={Exam.endDateNew }  onChange={newDate => { setReExam({...ReExam , endDate : newDate}) ; setExam({...Exam , endDateNew : newDate , endDate : \"\"})} }/>\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={() =>\r\n            submitReSchedule(props.data.id)\r\n            }>Submit</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        \r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Examinations'>\r\n              <CardHeaderToolbar>\r\n                {/* <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/Exams/ExamForm')\r\n                  }}\r\n                >\r\n                  Create Exam\r\n                </button> */}\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Exams ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Exams}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps}\r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n              {Exam && ReExam &&  <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                data= {Exam}\r\n              />}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\location.js",["1127"],"import React, { useState, useEffect } from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport axios from 'axios'\r\n\r\nexport default function ReactMap () {\r\nconst [location , setLocation] = useState({\r\n  center: {\r\n    lat: 23.290004,\r\n    lng: 77.437377\r\n    , \r\n  }\r\n})\r\n// const [myLocation , setMyLocation]\r\nconst [zoom , setZoom] = useState(20)\r\n\r\n  const AnyReactComponent = ({latitude  ,  longitude   }) => <div>lat : {latitude} , lng : {longitude}</div>;\r\n  const getLocation = () => {\r\n    debugger;\r\n    axios.get('/api/branch/getBranchLocation').then((res) => {\r\n      setLocation({\r\n        center: {\r\n          lat: res.data[0].location ? res.data[0].location.latitude : 23.290004,  \r\n          lng: res.data[0].location ? res.data[0].location.longitude : 77.437377\r\n        }\r\n      })\r\n    }).catch((error) => {\r\n\r\n    })\r\n  }\r\n  const saveLocation = () => {\r\n    var data = {lat : location.center.lat  ,lng : location.center.lng }\r\n    axios.post('/api/branch/saveBranchLocation' , data).then((res) => {\r\n\r\n    }).catch((error) => {\r\n\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getLocation()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return(\r\n<div>\r\n  { location && location.center && location.center.lat && location.center.lng && \r\n      <div style={{ height: '100vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyAmEXEE2SToTSNKMqoxl1w71nJ-q5zXPOE\" }}\r\n          defaultCenter={location.center}\r\n          defaultZoom={zoom}\r\n          fullscreenControl\r\n          onClick={(e) => setLocation({\r\n            center : {\r\n              lat : e.lat,\r\n              lng : e.lng\r\n            }\r\n          })}\r\n        >\r\n          <AnyReactComponent\r\n            lat={location.center.lat}\r\n            lng={location.center.lng}\r\n            latitude = {location.center.lat}\r\n            longitude={location.center.lng}\r\n            \r\n          /> \r\n        </GoogleMapReact>\r\n       \r\n          <p>latitude : {location.center.lat} , longitude : {location.center.lng} &nbsp; &nbsp; &nbsp; <button onClick={saveLocation}>Submit Your Location</button></p> \r\n         \r\n      </div>\r\n        }\r\n    \r\n    \r\n    </div>\r\n  )\r\n}","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentAudio.js",["1128"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\userProfile.js",["1129"],"import React from 'react'\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    CardHeaderToolbar\r\n  } from '../../../../_metronic/_partials/controls'\r\n  import { useParams } from 'react-router-dom'\r\n\r\nfunction UserProfile ({history}) {\r\n    let { id } = useParams()\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Profile'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/user/UserForm')\r\n                  }}\r\n                >\r\n                  New User\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody></CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentText.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\components\\userActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\classActionFormatterBranch.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Overview.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\SplashScreen.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\LoadingDialog.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\Pagination.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\HeaderCheckbox.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\stats\\StatsWidget11.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\mixed\\MixedWidget14.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget3.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\FormAlert.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\FieldFeedbackLabel.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeBlockToolbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeBlock.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\batches.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\branches.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\branchForm.js",["1130","1131","1132"],"import React, { useState ,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Form, Col ,ListGroup ,Dropdown } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function BranchForm () {\r\n  const [Branch, setBranch] = useState( { id:null,name: '',  address: { address: '',pincode : \"\" ,  city: '', state: '' } }\r\n  )\r\n  const [postal , setPostal] = useState()\r\n  const [postalError , setPostalError] = useState()\r\n  let { id } = useParams()\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n\r\n    debugger;\r\n    if(id){\r\n      axios\r\n      .get('/api/branch/branch/' + id)\r\n      .then(res => {\r\n        setBranch(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        return {}\r\n      })\r\n    }\r\n  }, [id , Branch.address.state])\r\n\r\n  const saveBranchData = event => {\r\n    event.preventDefault()\r\n    debugger\r\n    axios\r\n      .post('/api/branch/branch', Branch)\r\n      .then(res => {\r\n        history.push('/setting/Branch')\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const getAddress = (pincode) => {\r\n \r\n   \r\n    axios.get(`api/branch/getPostalAddress/${pincode}`).then((res)=>{\r\n     \r\n    if(res.data[0].Status == 'Error'){\r\n      setPostalError(`${res.data[0].Message} : Give Correct PinCode`)\r\n      setPostal(\"\") \r\n    }else{\r\n      setPostalError('')\r\n      setPostal(res.data[0].PostOffice)\r\n    }\r\n    }).catch((error) => {\r\n\r\n    })\r\n\r\n  }\r\n  \r\n  const selectPostalName = (name  , District , state) => {\r\n    setBranch({\r\n      ...Branch,\r\n      address: {...Branch.address, division : name ,  city: District  , state : state  }\r\n      \r\n    }) \r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n          <CardHeader title='Add Branch'>\r\n            \r\n         </CardHeader>\r\n            <CardBody>\r\n              <Form onSubmit={saveBranchData}>\r\n                <Form.Group controlId='formTitle' className=\"row\">\r\n                  <Col><Form.Label>Branch Name</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Branch Name'\r\n                    required\r\n                    value={Branch.name}\r\n                    onChange={event =>\r\n                      setBranch({ ...Branch, name: event.target.value })\r\n                    }\r\n                  /></Col>\r\n                  <Col><Form.Label>PinCode</Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    placeholder='Postal Code'\r\n                    required\r\n                    value={Branch.address.pincode}\r\n                    onChange={event =>{\r\n                      setBranch({ ...Branch,\r\n                        address: {\r\n                        ...Branch.address,\r\n                        pincode: event.target.value\r\n                      } })\r\n                      if(event.target.value.length >= 6){\r\n                        getAddress(event.target.value)\r\n                      }\r\n                    }}\r\n                  />\r\n                  {postalError && <Form.Text style={{color : 'red'}}>{postalError}</Form.Text>}\r\n                  \r\n                 {postal && postal.length  && \r\n                 <Dropdown>\r\n                 <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                   Select Division\r\n                 </Dropdown.Toggle>\r\n               \r\n                 <Dropdown.Menu>\r\n                  \r\n                 \r\n                 {postal && postal.length  && postal.map((single => {\r\n                   return <Dropdown.Item key={single.Name}  onClick ={() =>  selectPostalName(single.Name , single.District , single.State) }>{single.Name}</Dropdown.Item>\r\n                         \r\n                 })) \r\n                  } \r\n                   </Dropdown.Menu>\r\n               </Dropdown>}</Col>\r\n                  {postal && console.log(postal)}\r\n                  <Col><Form.Label>Address</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder=' street  address  / house number /shop number /'\r\n                    value={Branch.address.address}\r\n                    onChange={event =>\r\n                      setBranch({\r\n                        ...Branch,\r\n                        address: {\r\n                          ...Branch.address,\r\n                          address: event.target.value\r\n                        }\r\n                      })\r\n                    }\r\n                  /></Col>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='city' className=\"row\">\r\n                  <Col><Form.Label>Division </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='city'\r\n                    value={Branch.address.division}\r\n                  /></Col>\r\n                  </Form.Group>\r\n                <Form.Group controlId='city' className=\"row\">\r\n                  <Col><Form.Label>city </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='city'\r\n                    value={Branch.address.city}\r\n                   \r\n                  /></Col>\r\n                  <Col><Form.Label>state </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='state'\r\n                    value={Branch.address.state}\r\n                    \r\n                  /></Col>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseSections.js",["1133","1134","1135","1136","1137","1138","1139","1140"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownTopbarItemToggler.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu3.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu2.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\cookie.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\branchActionFormatter.js",[],["1141","1142"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classes.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentPasswordReset.js",["1143"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction PasswordReset () {\r\n  const [Student, setStudent] = useState({\r\n    password: '',\r\n    confirmPassword: ''\r\n  })\r\n\r\n  let { id } = useParams()\r\n  let history = useHistory()\r\n\r\n  const saveStudent = event => {\r\n    event.preventDefault()\r\n    debugger\r\n    axios\r\n      .post('/api/student/StudentPasswordReset/' + id, Student)\r\n      .then(res => {\r\n        alert('Password Changed')\r\n        history.push('/student')\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Form onSubmit={saveStudent} className='form'>\r\n              <Card.Body>\r\n                <Form.Group className='row'>\r\n                  <div className='col-md-4' controlId='form'>\r\n                    <Form.Label> Password </Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='user pasword'\r\n                      value={Student.pasword}\r\n                      onChange={event =>\r\n                        setStudent({\r\n                          ...Student,\r\n                          password: event.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4' controlId='form'>\r\n                    <Form.Label> Confirm Password </Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='Confirm  pasword'\r\n                      value={Student.confirmPassword}\r\n                      onChange={event =>\r\n                        setStudent({\r\n                          ...Student,\r\n                          confirmPassword: event.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Card.Body>\r\n            </Form>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default PasswordReset\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\classActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestQuestion.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\RouterHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionalTestList.js",["1144"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport TestActionFormatter from '../components/TestActionFormatter'\r\n\r\nexport default function SectionTest (props) {\r\n  const [Test, setTests] = useState([])\r\n\r\n  let history = useHistory()\r\n    const {id , sid} = useParams();\r\n  const EditHandler = (TId) => {\r\n    debugger;\r\n    history.push(`/Test/${id}/section/${sid}/sectionalTestForm/${TId}`)\r\n  }\r\n  const DeleteHandler = (TId) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios\r\n        .delete('/api/Test/' + sid + '/deleteTestById/' + TId )\r\n        .then(res => {alert(\"Test Deleted \");updateData() })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n  const GetQuestionHandler=(TId)=>{\r\n    history.push(`/Test/${TId}/Questions` )\r\n  }\r\n  const ChangeDescription = (cellContent) => {\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent }}></div>\r\n}\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },   \r\n    {\r\n      dataField: 'passingMarks',\r\n      text: 'passing',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'totalMarks',\r\n      text: 'Total',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'isComplete',\r\n      text: 'Status',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'description',\r\n      text: 'Description',\r\n      sort: true,\r\n      formatter : ChangeDescription ,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: TestActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestions:GetQuestionHandler,\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\nconst updateData=()=>{\r\n//   debugger\r\n  axios.get(`/api/Test/${sid}/getallTestBySectionIdAdmin`)\r\n    .then(res => {\r\n    debugger;\r\n    setTests(res.data[0].tests)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>{console.log('in the page')}\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title={`Test-`}>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push(`/Test/${id}/section/${sid}/sectionalTestForm`)\r\n                  }}\r\n                >\r\n                  Create Test\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Test ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Test}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TablePaginationHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\testQuestion.js",["1145"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport ActionFormatter from '../components/TestQuestionsActionFormatter'\r\n\r\n\r\nexport default function TestQuestions (props) {\r\n  const {id} = useParams();\r\n  const [questions, setQuestions] = useState([])\r\n\r\n  let history = useHistory()\r\n  const EditHandler = (qid) => {\r\n    debugger;\r\n    history.push('/Test/' + id + '/QuestionForm/' + qid)\r\n  }\r\n  const DeleteHandler = (QId) => {\r\n    if (window.confirm('do you really  want to delete11')) {\r\n      axios\r\n      .get(`/api/Test/getTestQuestionById/${QId}`)\r\n      .then(res => {\r\n        console.log(res)\r\n        axios\r\n        .post('/api/Test/' + id +  '/deleteQuestion/' ,res.data)\r\n        .then(res => {alert(\"Question Deleted \");updateData() })\r\n        .catch(() => {})\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      \r\n    }\r\n  }\r\n  const ShowHandler=(qid)=>{\r\n    history.push('/Test/' + id + '/Question/' + qid)\r\n\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'question',\r\n      text: 'question',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },    \r\n    {\r\n      dataField: 'marks',\r\n      text: 'Marks',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    }, \r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n       formatter: ActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestion:ShowHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\n  const updateData=()=>{\r\n    debugger\r\n    axios.get('/api/Test/'+id + '/getTestQuestions')\r\n      .then(res => {\r\n      debugger; \r\n      console.log(\"data here3 \" , res.data)        \r\n      setQuestions(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    }\r\n      useEffect(() => {\r\n        updateData()\r\n      }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Test Question'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push('/Test/'+id+'/QuestionForm')\r\n                  }}\r\n                >\r\n                  Add Question\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {questions ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={questions}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\content\\ContentRoute.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\TestActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\ScrollTop.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\footer\\Footer.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\components\\NotificationActionFormatter.js",["1146","1147","1148","1149"],"// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\nimport SVG from 'react-inlinesvg'\r\nimport { toAbsoluteUrl } from '../../../../_metronic/_helpers'\r\nimport { Button } from 'react-bootstrap'\r\nexport default function NotificationActionFormatter (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  {  ApproveClassAction , RejectClassAction}\r\n) {\r\n\r\n  return (\r\n    <>\r\n\r\n      { row.changeRequest.status == \"Pending\" && <a\r\n        title='ReSchedule'\r\n        // className='btn btn-icon btn-light btn-hover-primary btn-sm mx-3'\r\n        onClick={() => ApproveClassAction(row.changeRequest._id , row.changeRequest.entityId ,\r\n           row.changeRequest.requestedFees , row.changeRequest.requestType\r\n          )}\r\n      >\r\n        <span className='svg-icon svg-icon-md svg-icon-primary'>\r\n          {/* <SVG title=' ReSchedule'\r\n            src={toAbsoluteUrl('/media/svg/icons/Communication/Write.svg')}\r\n          /> */}\r\n          <Button>Approved</Button>\r\n        </span>\r\n      </a>\r\n}\r\n      { row.changeRequest.status == \"Pending\" &&  <a\r\n        title='Delete Question'\r\n        // className='btn btn-icon btn-light btn-hover-danger btn-sm'\r\n        onClick={() => RejectClassAction(row.changeRequest._id , row.changeRequest.entityId ,\r\n          row.changeRequest.requestedFees , row.changeRequest.requestType\r\n         )}\r\n      >\r\n        <span className='svg-icon svg-icon-md svg-icon-danger'>\r\n          {/* <SVG  src={toAbsoluteUrl('/media/svg/icons/General/Trash.svg')} title='Delete \r\n          Exam' /> */}\r\n          <Button>Reject</Button>\r\n        </span>\r\n      </a>\r\n}\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\offcanvas\\QuickPanel.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\scrolltop.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\footer.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\brand.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\Topbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\components\\BreadCrumbs.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\offcanvas.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\ControlPanelButton.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\LanguageSelectorDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\MyCartDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenuList.js",["1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178"],"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useContext } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SVG from 'react-inlinesvg'\r\nimport { shallowEqual, useSelector } from 'react-redux'\r\nimport { toAbsoluteUrl, checkIsActive } from '../../../../_helpers'\r\n// import { permissionsContext } from '../../permissionManager/permissionContext'\r\nimport { permissionsContext } from '../../../../../app/modules/permissionManager/permissionContext'\r\n\r\nexport function AsideMenuList ({ layoutProps }) {\r\n  const location = useLocation()\r\n  const getMenuItemActive = (url, hasSubmenu = false) => {\r\n    return checkIsActive(location, url)\r\n      ? ` ${!hasSubmenu && 'menu-item-active'} menu-item-open `\r\n      : ''\r\n  }\r\n  const  {auth}  = useSelector(\r\n    ({ auth }) => ({\r\n      auth: auth\r\n    }),\r\n    shallowEqual\r\n  )\r\n  const { isUserAuthenticate } = useContext(permissionsContext)\r\n\r\n  return (\r\n    <>\r\n      {/* begin::Menu Nav */}\r\n      <ul className={`menu-nav ${layoutProps.ulClasses}`}>\r\n        {/*begin::1 Level*/}\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/home', false)}`}\r\n          aria-haspopup='true'\r\n        >\r\n          \r\n          <div className='menu-link' onClick={() => window.location.href = \"http://localhost:3001/searchpage\"} >\r\n              <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Design/Layers.svg')} />\r\n            </span> \r\n            <span className='menu-text' >Home</span>\r\n          </div>\r\n           \r\n        </li>\r\n        \r\n        <hr></hr>\r\n        {/* <hr></hr>\r\n       \r\n        <hr></hr>{console.log(\"auth\" ,auth)} */}\r\n        {auth.isInstituteUser && ( \r\n        <li\r\n          className={`menu-item `}\r\n          aria-haspopup='true'\r\n        >\r\n          <NavLink className='menu-link' to='#'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Design/Layers.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Institute Controls</span>\r\n          </NavLink>\r\n        </li>\r\n        )}\r\n       {/* {auth.isInstituteUser && ( <hr></hr> )} */}\r\n       \r\n        {(    auth.isInstituteUser || isUserAuthenticate('M1', 1))  && ( \r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/setting/Branch', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Branch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Branch</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n        )}\r\n         {(    auth.isInstituteUser || isUserAuthenticate('M2', 1))  && ( <li\r\n          className={`menu-item ${getMenuItemActive('/setting/class', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/class'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Class</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n         )}\r\n\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M3', 1)) && (\r\n          <li className={`menu-item ${getMenuItemActive('/User', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/User'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Users</span>\r\n              {/* <i className='menu-arrow' /> */}\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n        {/* Components */}\r\n\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M6', 1)) && (\r\n           <li\r\n          className={`menu-item ${getMenuItemActive(\r\n            '/ecourse/Courses',\r\n            false\r\n          )}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/ecourse/Courses'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Courses</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n         )} \r\n        {(    auth.isInstituteUser || isUserAuthenticate('M7', 1)) && ( <li\r\n          className={`menu-item ${getMenuItemActive('/Test/testlist', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Test/testlist'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Tests</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n        )}\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M4', 1)) && (   <li\r\n          className={`menu-item ${getMenuItemActive('/Exams', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Exams'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Examination</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Schedule Exam</span>\r\n                </span>\r\n              </li>\r\n              <li\r\n                className={`menu-item ${getMenuItemActive('/Exams/Scheduled')}`}\r\n                aria-haspopup='true'\r\n              >\r\n                <NavLink className='menu-link' to='/Exams/Scheduled'>\r\n                  <i className='menu-bullet menu-bullet-dot'>\r\n                    <span />\r\n                  </i>\r\n                  <span className='menu-text'>Schedule Exam</span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n          )}\r\n\r\n\r\n        \r\n        {   auth.isInstituteUser &&  (<li\r\n          className={`menu-item ${getMenuItemActive('/Notifications', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Notifications'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Notifications</span>\r\n          </NavLink>\r\n        </li>)}\r\n\r\n        {    auth.isInstituteUser  && ( <li\r\n          className={`menu-item ${getMenuItemActive(\r\n            '/permission/Roles',\r\n            false\r\n          )}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/permission/Roles'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Permission</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Permission</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        )}\r\n\r\n        {auth.isInstituteUser && ( <hr></hr> )}\r\n        {auth.isInstituteUser && ( <hr></hr> )}\r\n        {auth.isInstituteUser && ( \r\n          <li\r\n            className={`menu-item `}\r\n            aria-haspopup='true'\r\n          >\r\n            <NavLink className='menu-link' to='#'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Design/Layers.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Branch Controls</span>\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n       {/* {auth.isInstituteUser && ( <hr></hr> )} */}\r\n        {/*end::1 Level*/}\r\n\r\n        {/*begin::1 Level*/}\r\n\r\n        {/* <li\r\n          className={`menu-item ${getMenuItemActive('/setting', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Batch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>setting</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className={`menu-item ${getMenuItemActive('/setting/Batch')}`}\r\n                  aria-haspopup='true'\r\n                >\r\n                  <NavLink className='menu-link' to='/setting/Batch'>\r\n                    <i className='menu-bullet menu-bullet-dot'>\r\n                      <span />\r\n                    </i>\r\n                    <span className='menu-text'>Batch</span>\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </ul>\r\n          </div>\r\n        </li> */}\r\n        {(auth.isInstituteUser || isUserAuthenticate('M8', 1))  && ( <li\r\n          className={`menu-item ${getMenuItemActive('/setting/Batch')}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Batch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Batch</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Batch</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        )}\r\n\r\n        {(auth.isInstituteUser || isUserAuthenticate('M9', 1))  && ( <li\r\n          className={`menu-item ${getMenuItemActive('/Student', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Student'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Student</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Students</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        )}\r\n        {/* {isUserAuthenticate('M3', 1) && ( */}\r\n          {(    auth.isInstituteUser || isUserAuthenticate('M3', 1))  && (  <li\r\n            className={`menu-item ${getMenuItemActive('/user', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/user/BranchUser'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>User</span>\r\n              <i className='menu-arrow' />\r\n            </NavLink>\r\n\r\n            <div className='menu-submenu '>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className='menu-item  menu-item-parent'\r\n                  aria-haspopup='true'\r\n                >\r\n                  <span className='menu-link'>\r\n                    <span className='menu-text'>User</span>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          )}\r\n        {/* ) */}\r\n        {/* } */}\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M2', 1)) && (\r\n          <li\r\n            className={`menu-item ${getMenuItemActive('/setting/classList', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/setting/classList'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Classes</span>\r\n              <i className='menu-arrow' />\r\n            </NavLink>\r\n\r\n            <div className='menu-submenu '>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className='menu-item  menu-item-parent'\r\n                  aria-haspopup='true'\r\n                >\r\n                  <span className='menu-link'>\r\n                    <span className='menu-text'>Classes</span>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n         )}\r\n         {(    auth.isInstituteUser || isUserAuthenticate('M10', 1) ) && (\r\n          <li\r\n            className={`menu-item ${getMenuItemActive('/fee', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/fee'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Fee Management</span>\r\n              <i className='menu-arrow' />\r\n            </NavLink>\r\n\r\n            <div className='menu-submenu '>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className='menu-item  menu-item-parent'\r\n                  aria-haspopup='true'\r\n                >\r\n                  <span className='menu-link'>\r\n                    <span className='menu-text'>Fee Management</span>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n         )} \r\n\r\n         {/* {auth && auth.user && auth.user.roles &&  auth.user.roles.includes(\"222Brach_admin\" ) && (  */}\r\n         <li\r\n            className={`menu-item ${getMenuItemActive('/setting/location', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/setting/location'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Location</span>\r\n              <i className='menu-arrow' />\r\n            </NavLink>\r\n\r\n            <div className='menu-submenu '>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className='menu-item  menu-item-parent'\r\n                  aria-haspopup='true'\r\n                >\r\n                  <span className='menu-link'>\r\n                    <span className='menu-text'>Location</span>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          {/* )} */}\r\n       \r\n          {    auth.isInstituteUser  && (\r\n          <li className={`menu-item ${getMenuItemActive('', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to=''>\r\n              {/* <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'></span> */}\r\n              {/* <i className='menu-arrow' /> */}\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n        \r\n        \r\n        \r\n        {(auth && auth.user && !auth.user.branch) && ( <li\r\n          className={`menu-item ${getMenuItemActive('/setting/UserCourses')}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/UserCourses'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>MyCourses</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>MyCourses</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        )}\r\n         \r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\search\\SearchResult.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\setupAxios.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\Metronici18n.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicSplashScreen.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\LayoutConfig.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorsPage.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\LayoutInit.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\StickyToolbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\Aside.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\SubHeader.js",["1179"],"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, {useMemo, useLayoutEffect, useEffect} from \"react\";\r\nimport objectPath from \"object-path\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {QuickActions} from \"./components/QuickActions\";\r\nimport {BreadCrumbs} from \"./components/BreadCrumbs\";\r\nimport {getBreadcrumbsAndTitle, useSubheader} from \"../../_core/MetronicSubheader\";\r\nimport {useHtmlClassService} from \"../../_core/MetronicLayout\"\r\n\r\nexport function SubHeader() {\r\n  const uiService = useHtmlClassService();\r\n  const location = useLocation();\r\n  const subheader = useSubheader();\r\n\r\n  const layoutProps = useMemo(() => {\r\n    return {\r\n      config: uiService.config,\r\n      subheaderMobileToggle: objectPath.get(\r\n          uiService.config,\r\n          \"subheader.mobile-toggle\"\r\n      ),\r\n      subheaderCssClasses: uiService.getClasses(\"subheader\", true),\r\n      subheaderContainerCssClasses: uiService.getClasses(\r\n          \"subheader_container\",\r\n          true\r\n      )\r\n    };\r\n  }, [uiService]);\r\n\r\n  useLayoutEffect(() => {\r\n    const aside = getBreadcrumbsAndTitle(\"kt_aside_menu\", location.pathname);\r\n    const header = getBreadcrumbsAndTitle(\"kt_header_menu\", location.pathname);\r\n    const breadcrumbs = (aside && aside.breadcrumbs.length > 0) ? aside.breadcrumbs : header.breadcrumbs;\r\n    subheader.setBreadcrumbs(breadcrumbs);\r\n    subheader.setTitle((aside && aside.title && aside.title.length > 0) ? aside.title : header.title);\r\n    // eslint-disable-next-line\r\n  }, [location.pathname]);\r\n\r\n  // Do not remove this useEffect, need from update title/breadcrumbs outside (from the page)\r\n  useEffect(() => {}, [subheader]);\r\n\r\n  return (\r\n      <div\r\n          id=\"kt_subheader\"\r\n          className={`subheader py-2 py-lg-4   ${layoutProps.subheaderCssClasses}`}\r\n      >\r\n        <div\r\n            className={`${layoutProps.subheaderContainerCssClasses} d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap`}\r\n        >\r\n          {/* Info */}\r\n          <div className=\"d-flex align-items-center flex-wrap mr-1\">\r\n            {layoutProps.subheaderMobileToggle && (\r\n                <button\r\n                    className=\"burger-icon burger-icon-left mr-4 d-inline-block d-lg-none\"\r\n                    id=\"kt_subheader_mobile_toggle\"\r\n                >\r\n                  <span/>\r\n                </button>\r\n            )}\r\n\r\n            <div className=\"d-flex align-items-baseline mr-5\">\r\n              <h5 className=\"text-dark font-weight-bold my-2 mr-5\">\r\n                <>\r\n                  {subheader.title}\r\n                </>\r\n                {/*<small></small>*/}\r\n              </h5>\r\n\r\n            </div>\r\n\r\n\r\n            <BreadCrumbs items={subheader.breadcrumbs} />\r\n          </div>\r\n\r\n          {/* Toolbar */}\r\n          {/* <div className=\"d-flex align-items-center\">\r\n            <a href=\"#\" className=\"btn btn-light btn-sm font-weight-bold\" id=\"kt_dashboard_daterangepicker\"\r\n               data-toggle=\"tooltip\" title=\"Select dashboard daterange\" data-placement=\"left\">\r\n              <span className=\"text-muted font-weight-bold mr-2\" id=\"kt_dashboard_daterangepicker_title\">Today</span>\r\n              <span className=\"text-primary font-weight-bold\" id=\"kt_dashboard_daterangepicker_date\">Aug 16</span>\r\n            </a>\r\n            <QuickActions/>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage6.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\_redux\\authCrud.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\header-menu\\HeaderMenuWrapper.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\components\\QuickActions.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\brand\\Brand.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\sticky-card.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside-toggle.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside-menu.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TableSortingHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\QuiclUserToggler.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\AssetsHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\menu.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\PaginationToolbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Checkbox.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\PaginationLinks.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples-kt\\KTCodeExample.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeExample.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\UserProfileDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\BranchesSelectorDropdown.js",["1180"],"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport { Dropdown } from 'react-bootstrap'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\n\r\nimport { DropdownTopbarItemToggler } from '../../../../_partials/dropdowns'\r\n\r\nimport { connect } from 'react-redux'\r\n// import {actions} from \"../../../../../app/modules/Auth/_redux/authRedux \"\r\nimport { actions } from '../../../../../app/modules/Auth/_redux/authRedux'\r\n\r\nfunction BranchSelectorDropdown ({ branches, currentBranch, changeBranch }) {\r\n  return (\r\n    <>\r\n      {branches ? (\r\n        <Dropdown drop='down' >\r\n          <Dropdown.Toggle\r\n            as={DropdownTopbarItemToggler}\r\n            id='dropdown-toggle-my-Branches'\r\n          >\r\n            <OverlayTrigger\r\n              placement='bottom'\r\n              overlay={\r\n                <Tooltip id='language-panel-tooltip'>Select Branch</Tooltip>\r\n              }\r\n            >\r\n                            <div className='btn btn-dropdown  btn-lg mr-2'>\r\n\r\n              {/* <div className='btn btn-icon btn-clean btn-dropdown btn-lg mr-1'> */}\r\n                {currentBranch ? currentBranch.name : ''}\r\n                {/* <img\r\n              className=\"h-25px w-25px rounded\"\r\n              src={currentLanguage.flag}\r\n              alt={currentLanguage.name}\r\n            /> */}\r\n              </div>\r\n            </OverlayTrigger>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu className='p-0 m-0 dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround'>\r\n            <ul className='navi navi-hover py-4'>\r\n              {branches.filter(m=>m._id !== currentBranch._id).map(branch => (\r\n                <li\r\n                  key={branch._id}\r\n                  className={clsx('navi-item', {\r\n                    active: branch._id === currentBranch._id\r\n                  })}\r\n                >\r\n                  <a\r\n                    href='javscript:void()'\r\n                    onClick={() =>{alert(\"chamngeld\");changeBranch(branch._id)}}\r\n                    className='navi-link'\r\n                  >\r\n                    {/* <span className=\"symbol symbol-20 mr-3\">\r\n                  <img src={language.flag} alt={language.name} />\r\n                </span> */}\r\n                    <span className='navi-text'>{branch.name}</span>\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  console.log(state);\r\n  const { currentBranch, branches } = state.auth;\r\n  return { currentBranch, branches }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(BranchSelectorDropdown)\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\QuickActionsDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage3.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\DashboardPage.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\index.js",["1181"],"import React, { useContext } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport users from './pages/UserList'\r\nimport UserProfile from './pages/userProfile'\r\nimport BranchuserForm from './pages/branchuserForm'\r\nimport UserForm from './pages/Userform'\r\nimport BranchUserList from './pages/branchUserList'\r\nimport { permissionsContext } from '../permissionManager/permissionContext'\r\n\r\nexport default function UserManagement () {\r\n  const { isUserAuthenticate } = useContext(permissionsContext)\r\n\r\n  return (\r\n    <Switch>\r\n      {/* Redirect from root URL to /dashboard. */}\r\n      <Route path='/User/UserForm/:id'>\r\n        <UserForm />\r\n      </Route>\r\n      {isUserAuthenticate('M3', 1) && (<Route exact path='/User' component={users} />)}\r\n      <Route exact path='/User/BranchUser' component={BranchUserList} />\r\n      <Route exact path='/User/UserForm' component={UserForm} />\r\n      <Route exact path='/User/BranchUserForm' component={BranchuserForm} />\r\n      <Route path='/User/UserForm/:id'>\r\n        <UserProfile />\r\n      </Route>\r\n      <Route path='/User/BranchuserForm/:id'>\r\n        <BranchuserForm />\r\n      </Route>\r\n      <Route path='/User/testProfile/'>\r\n        <UserProfile />\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentVideo.js",["1182"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Button, Form, Col } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport JoditEditor from 'jodit-react'\r\n\r\nexport default function VideoContent () {\r\n  const [Content, setContent] = useState({\r\n    description: '',\r\n    title: '',\r\n    contentUrl: '',\r\n    type: 'video'\r\n  })\r\n  const { id, cid } = useParams()\r\n  const history = useHistory()\r\n\r\n  const saveData = async event => {\r\n    event.preventDefault()\r\n    debugger\r\n    let data = Content\r\n    let formData = new FormData()\r\n    for (var key in data) {\r\n      formData.append(key, data[key])\r\n    }\r\n    debugger\r\n    await axios\r\n      .post('api/course/SectionContent/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then(res => {\r\n        history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n  }\r\n\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  useEffect(() => {\r\n\r\n    if (cid) {\r\n      axios\r\n        .get('/api/course/sectionContent/' + cid)\r\n        .then(res => {\r\n          setContent(res.data)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [cid, id])\r\n  const editor = useRef(null)\r\n  const handleChangeDesripiton = e => {\r\n    debugger\r\n    // console.log(this.editor.current)\r\n    setContent({\r\n      ...Content,\r\n      description: e.target.innerHTML\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Add Content'></CardHeader>\r\n            <CardBody>\r\n              <Form onSubmit={saveData}>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>Tittle</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Content Name'\r\n                      value={Content.title}\r\n                      onChange={event =>\r\n                        setContent({ ...Content, title: event.target.value })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>Dscription</Form.Label>\r\n                    <div className='col-md-12'>\r\n                      <JoditEditor\r\n                        ref={editor}\r\n                        value={Content.description}\r\n                        config={config}\r\n                        tabIndex={1} // tabIndex of textarea\r\n                        onBlur={handleChangeDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>File upload </Form.Label>\r\n                    <Form.Control\r\n                      type='file'\r\n                      //   value={Content.file}\r\n                      onChange={event =>\r\n                        setContent({\r\n                          ...Content,\r\n                          file: event.target.files[0]\r\n                        })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                \r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  variant='secondary' className='ml-3'\r\n                  type='button'\r\n                  onClick={() => {\r\n                    if (history.length > 1) {\r\n                      // this will take you back if there is history\r\n                      history.goBack()\r\n                    }\r\n                  }}\r\n                >\r\n                  cancel\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\testList.js",["1183","1184","1185","1186"],"import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport TestBlocks from \"../components/coursetestblocks\"\r\n\r\nexport default function TestList() {\r\n  debugger;\r\n  const [Test, setTest] = useState([])\r\n  const { id } = useParams();\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    debugger;\r\n    axios\r\n      .get('/api/course/getAllTestListToAdmin')\r\n      .then(res => {\r\n        console.log(\"here in coursetestlist\" , res.data)\r\n        setTest(res.data)\r\n      })\r\n      .catch(() => { })\r\n    //   axios\r\n    //   .get('/api/course/getLastResults')\r\n    //   .then(res => {\r\n    //     setResults(res.data)\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err)\r\n    //   })\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <Row>{console.log(\"in the page\")}\r\n        <Card className='col-md-12'>\r\n          <Card.Header as='h5'>Tests\r\n          \r\n          <button\r\n              type='button'\r\n              className='btn btn-primary pull-left'\r\n              style={{ float: 'right' }}\r\n              onClick={() => {\r\n                history.push('/Test/CourseTest/TestForm')\r\n              }}\r\n            >\r\n              New Test\r\n            </button>\r\n</Card.Header>\r\n          <Card.Body>\r\n            <Row>{console.log(\"testdata\" ,Test.length)}\r\n              {Test && Test.length != 0 \r\n              &&\r\n                Test.map(item => (\r\n\r\n                  <TestBlocks test={item.test} classes={item.classes} course={item.courses} key={item.test._id} />\r\n                ))\r\n              }\r\n                {Test && Test.length == 0 && (\r\n                     <p>NO TEST IS AVAILABLE </p>\r\n                    )}\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n      {/* <Row>\r\n        <Card className='col-md-12'>\r\n          <Card.Header as='h5'>Exam Results</Card.Header>\r\n          <Card.Body>\r\n            <Row>\r\n              {results && results.length &&\r\n                results.map(item => (\r\n                  <ResultBlock result={item}  />\r\n                ))}\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row> */}\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentAll.js",["1187","1188","1189"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Button, Form, Col , Row } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\n\r\nimport { Tabs, Tab , ProgressBar } from 'react-bootstrap'\r\nimport JoditEditor from 'jodit-react'\r\nimport Progress from '../components/progressbar';\r\nimport { colors } from \"@material-ui/core\";\r\n\r\nexport default function VideoContent () {\r\n  const [Content, setContent] = useState({\r\n    title: '',\r\n    videoUrl : '' ,\r\n    videoLength : \"\",\r\n    videoDescription : '', \r\n    imageUrl : '' , \r\n    imageDescription : '',\r\n    pdfDescription : '',\r\n    pdfUrl : '',\r\n    textDescription : '',\r\n    audioUrl : '',\r\n    audioDescription : '',\r\n    isChecked  : false\r\n\r\n  })\r\n\r\n  const [videoUploadPercentage, setVideoUploadPercentage] = useState(0);\r\n  const [pdfUploadPercentage, setPdfUploadPercentage] = useState(0);\r\n\r\n\r\n  const { id, cid } = useParams()\r\n  const history = useHistory()\r\n var  toggleChange = () => {\r\n  setContent({\r\n    ...Content,\r\n      isChecked: !Content.isChecked,\r\n    });\r\n  }\r\n  const saveData = async event => {\r\n    event.preventDefault()\r\n\r\n    // debugger\r\n    // let data = Content\r\n    // let formData = new FormData()\r\n    // for (var key in data) {\r\n    //   formData.append(key, data[key])\r\n    // }\r\n    debugger\r\n    await axios\r\n      .post('api/course/SectionContent/' + id, Content)\r\n      .then(res => {\r\n        history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n  }\r\n  const editor = useRef(null)\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const uploadVideo = async (file) => {\r\n    let formData = new FormData()\r\n    formData.append(\"file\"  , file)\r\n    \r\n    await axios\r\n      .post('api/course/savefile/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: progressEvent => {\r\n          setVideoUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n        }\r\n      })\r\n      .then(res => {\r\n        setContent({\r\n          ...Content,\r\n          videoUrl : res.data.filepath,\r\n          videoLength : res.data.duration\r\n        })\r\n        // history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n\r\n  }\r\n  const uploadImage = async (file) => {\r\n    let formData = new FormData()\r\n    formData.append(\"file\"  , file)\r\n    \r\n    await axios\r\n      .post('api/course/savefile/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then(res => {\r\n        setContent({\r\n          ...Content,\r\n          imageUrl : res.data.filepath\r\n        })\r\n        \r\n        // history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n\r\n  }\r\n  const uploadpdf = async (file) => {\r\n    let formData = new FormData()\r\n    formData.append(\"file\"  , file)\r\n    \r\n    await axios\r\n      .post('api/course/savefile/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: progressEvent => {\r\n          setPdfUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n        }\r\n      })\r\n      .then(res => {\r\n        setContent({\r\n          ...Content,\r\n          pdfUrl : res.data.filepath\r\n        })\r\n        \r\n        // history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n\r\n  }\r\n  const uploadAudio = async (file) => {\r\n    let formData = new FormData()\r\n    formData.append(\"file\"  , file)\r\n    \r\n    await axios\r\n      .post('api/course/savefile/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then(res => {\r\n        setContent({\r\n          ...Content,\r\n          audioUrl : res.data.filepath\r\n        })\r\n        \r\n        // history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n\r\n  }\r\n  useEffect(() => {\r\n    if (cid) {\r\n      axios\r\n        .get('/api/course/sectionContent/' + cid)\r\n        .then(res => {\r\n          console.log(\"here in update\" , res.data)\r\n          setContent(res.data)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [cid, id])\r\n  const handlePdfDesripiton = e => {\r\n    setContent({\r\n      ...Content,\r\n      pdfDescription : e.target.innerHTML\r\n    })\r\n  }\r\n  const handleVideoDesripiton = e => {\r\n    setContent({\r\n      ...Content,\r\n      videoDescription: e.target.innerHTML\r\n    })\r\n  }\r\n  const handleImageDesripiton = e => {\r\n    setContent({\r\n      ...Content,\r\n      imageDescription : e.target.innerHTML\r\n    })\r\n  }\r\n  const handleTextDesripiton = e => {\r\n    setContent({\r\n      ...Content,\r\n      textDescription : e.target.innerHTML\r\n    })\r\n  }\r\n  const handleAudioDesripiton = e => {\r\n    setContent({\r\n      ...Content,\r\n      audioDescription : e.target.innerHTML\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Add Content'></CardHeader>\r\n            <CardBody>\r\n              <Form onSubmit={saveData}>\r\n                <Form.Group>\r\n                  <Col>\r\n                    <Form.Label>Tittle</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Content Name'\r\n                      required\r\n                      value={Content.title}\r\n                      onChange={event =>\r\n                        setContent({\r\n                          ...Content,\r\n                          title: event.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Tabs defaultActiveKey='video' id='uncontrolled-tab-example'>\r\n                  <Tab eventKey='video' title='video'>\r\n                    <Form.Group>\r\n                    <Row>\r\n                      <Col  >\r\n                      \r\n                        <Form.Label>File upload </Form.Label>\r\n                        <Form.Control\r\n                          type='file'\r\n                          //   value={Content.file}\r\n                          onChange={event =>\r\n                            uploadVideo(event.target.files[0])\r\n                            // setContent({\r\n                            //   ...Content,\r\n                            //   file: event.target.files[0]\r\n                            // })\r\n                          }\r\n                        />\r\n                        </Col>\r\n                     <Col className='mt-10'>\r\n                        {Content.videoUrl.length > 0 ? \r\n                        <Row><input type=\"checkbox\" checked={Content.isChecked}   onChange={toggleChange} /> <div> \r\n                          You Want Audio File From This Video</div> </Row> : \r\n                          <Row></Row>}\r\n                        \r\n                     </Col>\r\n                        </Row>\r\n\r\n\r\n                          <hr></hr>\r\n\r\n\r\n                        <Row>\r\n                          <Col>\r\n                        <ProgressBar now={videoUploadPercentage} label={`${videoUploadPercentage}%`} />\r\n                        </Col>\r\n                        </Row>\r\n                        \r\n                        \r\n                      \r\n                      \r\n                      \r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group>\r\n                      <Col className=''>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <div>\r\n                          <JoditEditor\r\n                            ref={editor}\r\n                            value={Content.videoDescription}\r\n                            config={config}\r\n                            tabIndex={1} // tabIndex of textarea\r\n                            onBlur={handleVideoDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Tab>\r\n                  <Tab eventKey='text' title='Text'>\r\n                    <Form.Group>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>Text</Form.Label>\r\n                        <div className=''>\r\n                          <JoditEditor\r\n                            ref={editor}\r\n                            value={Content.textDescription}\r\n                            config={config}\r\n                            tabIndex={1} // tabIndex of textarea\r\n                            onBlur={handleTextDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Tab>\r\n                  <Tab eventKey='Image' title='Image'>\r\n                    <Form.Group>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>File upload </Form.Label>\r\n                        <Form.Control\r\n                          type='file'\r\n                          //   value={Content.file}\r\n                          onChange={event =>\r\n                            uploadImage(event.target.files[0])\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <div className=''>\r\n                          <JoditEditor\r\n                            ref={editor}\r\n                            value={Content.imageDescription}\r\n                            config={config}\r\n                            tabIndex={1} // tabIndex of textarea\r\n                            onBlur={handleImageDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Tab>\r\n                  <Tab eventKey='Audio' title='Audio'>\r\n                    <Form.Group>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>Audio Upload </Form.Label>\r\n                        <Form.Control\r\n                          type='file'\r\n                          //   value={Content.file}\r\n                          onChange={event =>\r\n                            uploadAudio(event.target.files[0])\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <div className=''>\r\n                          <JoditEditor\r\n                            ref={editor}\r\n                            value={Content.audioDescription}\r\n                            config={config}\r\n                            tabIndex={1} // tabIndex of textarea\r\n                            onBlur={handleAudioDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Tab>\r\n                  <Tab eventKey='PDF' title='PDF'>\r\n                    <Form.Group>\r\n                    <Row>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>File upload </Form.Label>\r\n                        <Form.Control\r\n                          type='file'\r\n                          //   value={Content.file}\r\n                          onChange={event =>\r\n                            uploadpdf(event.target.files[0])\r\n                          }\r\n                        />\r\n                      </Col>\r\n                      </Row>\r\n                      <hr></hr>\r\n\r\n\r\n                        <Row>\r\n                          <Col>\r\n                        <ProgressBar now={pdfUploadPercentage} label={`${pdfUploadPercentage}%`} />\r\n                        </Col>\r\n                        </Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <div className=''>\r\n                          <JoditEditor\r\n                            ref={editor}\r\n                            value={Content.pdfDescription}\r\n                            config={config}\r\n                            tabIndex={1} // tabIndex of textarea\r\n                            onBlur={handlePdfDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Tab>\r\n                </Tabs>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  variant='secondary'\r\n                  className='ml-3'\r\n                  type='button'\r\n                  onClick={() => {\r\n                    if (history.length > 1) {\r\n                      // this will take you back if there is history\r\n                      history.goBack()\r\n                    }\r\n                  }}\r\n                >\r\n                  cancel\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\batchForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestForm.js",["1190","1191","1192","1193","1194","1195","1196"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Form, Card , Col } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport JoditEditor from 'jodit-react'\r\n\r\nexport default function TestForm () {\r\n  const [Test, setTest] = useState({\r\n    name: '',\r\n    description: '',\r\n    class: '',\r\n    testLevel : '',\r\n    totalMarks: '',\r\n    timeInHours: '',\r\n    timeInMinutes: '',\r\n    passingMarks: ''\r\n  })\r\n  const [CourseId , setCourseId] = useState()\r\n  const [CourseList , setCourseList] = useState()\r\n  const [Class, setClasses] = useState([])\r\n  // const [Years, setYears] = useState([])\r\n  const editor = React.useRef(null)\r\n  const config = {\r\n   defaultActionOnPaste: 'insert_as_html',\r\n   askBeforePasteFromWord: false,\r\n   askBeforePasteHTML: false,\r\n   readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n}\r\nconst handleDescripiton = e => {\r\n  debugger;\r\n  console.log(e.target.innerHTML)\r\n  setTest({\r\n    ...Test,\r\n    description : e.target.innerHTML\r\n  })\r\n}\r\n  let { id ,  TId } = useParams()\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    setCourseId(id)\r\n    if(id == undefined){\r\n      axios.get('/api/course/getAllClassCoursesNameForTestadd').then(res => {\r\n        setCourseList(res.data)\r\n      })\r\n    }\r\n    debugger\r\n    if (id) {\r\n      axios.get(`/api/Test/getTestById/${TId}`)\r\n    .then(res => {\r\n    debugger;\r\n    console.log(res.data)\r\n    setTest(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n    }\r\n  }, [TId, id])\r\n\r\n  const saveTest = event => {\r\n    event.preventDefault()\r\n    axios\r\n      .post(`/api/Course/${CourseId}/saveTestDetails`, Test)\r\n      .then(res => {\r\n        if(id == undefined){\r\n          history.push(`/Test/testlist`)\r\n\r\n        }\r\n        else{\r\n        history.push(`/Test/CourseTest/${id}/tests`)\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form onSubmit={saveTest} className='form'>\r\n\r\n                <Form.Group controlId='formTitle' className='row'>\r\n\r\n                {id == undefined && <div className='col-md-4'>\r\n                    <Form.Label>Select Class </Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      as='select'\r\n                      placeholder=''\r\n                      // disabled={Exam._id?\"true\":\"false\"}\r\n                      // value={Exam.class}\r\n                      onChange={event =>\r\n                        setCourseId(event.target.value)\r\n                      }\r\n                    >\r\n                      <option value=\"\" >select class</option>\r\n                      {CourseList && CourseList.length && CourseList.map(item => (\r\n                        <option value={item.courses._id} key={item.courses._id}>\r\n                          {item.courses.title}\r\n                        </option>\r\n                      ))\r\n                      }\r\n                    </Form.Control>\r\n                  </div>\r\n                }\r\n\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Test Name</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test Name'\r\n                      value={Test.name}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, name: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Total Marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='Total Marks'\r\n                      value={Test.totalMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, totalMarks: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>passing  marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='passing Marks'\r\n                      value={Test.passingMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, passingMarks: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                 \r\n\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Hours</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='time in  hours'\r\n                      value={Test.timeInHours}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInHours: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Minutes</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='time in  minutes'\r\n                      value={Test.timeInMinutes}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInMinutes: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Test Level</Form.Label>\r\n                      \r\n                      <Form.Control as=\"select\" defaultValue=\"Choose...\" required={true} onChange={(event) =>\r\n                        setTest({ ...Test, testLevel: event.target.value})}>\r\n                          <option value=\"\">Test Level</option>\r\n                        <option>Easy</option>\r\n                        <option>Intermediate</option>\r\n                        <option>Hard</option>\r\n                      </Form.Control>\r\n                  </div>\r\n                  \r\n                  <div className='col-md-12'>\r\n                    <Form.Label>Test description</Form.Label>\r\n                    < JoditEditor\r\n                        ref={editor}\r\n                        value={Test.description}\r\n                        config={config}\r\n                        tabIndex={1} // tabIndex of textarea\r\n                        onBlur={event =>\r\n                          setTest({ ...Test, description : event.target.innerHTML})\r\n                        }\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classForm.js",["1197","1198","1199"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Button, Form, Card, Col } from 'react-bootstrap'\r\nimport JoditEditor from 'jodit-react'\r\n\r\n\r\nexport default function ClassForm() {\r\n  let { id, cid } = useParams()\r\n  const [ClassVar, setClass] = useState({ name: '', description: '',fees:\"\"})\r\n  let history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      debugger;\r\n      axios.get('/api/branch/class/' + id).then(res => {\r\n        if (res.data) {\r\n          setClass({\r\n            id: res.data._id,\r\n            name: res.data.name,\r\n            description: res.data.description,\r\n            fees: res.data.fees,\r\n          })\r\n          // initial._id = id\r\n          // initial.name = res.data.name\r\n          // initial.description = res.data.description\r\n        }\r\n      })\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  const saveClassFormData = async event => {\r\n    event.preventDefault()\r\n    debugger\r\n    await axios\r\n      .post('/api/branch/class', ClassVar)\r\n      .then(res => {\r\n        debugger;\r\n        history.push('/setting/class');\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const getData = () => {\r\n    debugger\r\n  }\r\n  const editor = React.useRef(null)\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const handleDescripiton = e => {\r\n    debugger;\r\n    setClass({\r\n      ...ClassVar , \r\n      description : e.target.innerHTML\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form onSubmit={saveClassFormData}>\r\n                <Form.Group controlId='formTitle' className=\"row\">\r\n                  <Form.Label>Class</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Class Title'\r\n                    required\r\n                    value={ClassVar.name}\r\n                    onChange={event =>\r\n                      setClass({ ...ClassVar, name: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='formTitle' className=\"row\">\r\n                  <Form.Label>Fees</Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    placeholder='amount'\r\n                    value={ClassVar.fees}\r\n                    onChange={event =>\r\n                      setClass({ ...ClassVar, fees: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='formTitle' className=\"row\">\r\n                  {/* <Col>\r\n                  \r\n                  <Form.Label>description</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Class description'\r\n                      value={ClassVar.description}\r\n                      onChange={event =>\r\n                        setClass({ ...ClassVar, description: event.target.value })\r\n                      }\r\n                    />\r\n                    </Col> */}\r\n\r\n\r\n\r\n                  <Form.Label>Description</Form.Label>\r\n                  < JoditEditor\r\n                    ref={editor}\r\n                    value={ClassVar.description}\r\n                    config={config}\r\n                    tabIndex={1} // tabIndex of textarea\r\n                    onBlur={handleDescripiton} // preferred to use only this option to update the content for performance reasons\r\n                  />\r\n\r\n\r\n                </Form.Group>\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\question.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\exam.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\FAQs.js",["1200","1201","1202"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\batchActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\QuestionOptionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\advance-tables\\AdvanceTablesWidget2.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\index.js",["1203","1204"],"import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport Classes from './pages/classes'\r\nimport ClassForm from './pages/classForm'\r\nimport Branches from './pages/branches'\r\nimport BranchForm from './pages/branchForm'\r\nimport Batches from './pages/batches'\r\nimport BatchForm from './pages/batchForm'\r\nimport Courses from './pages/Courses'\r\nimport CourseForm from './pages/CourseForm'\r\nimport CourseSections from './pages/CourseSections'\r\nimport CourseSectionform from './pages/CourseSectionform'\r\nimport ContentText from './pages/ContentText'\r\nimport ContentPdf from './pages/ContentPdf'\r\nimport ContentVideo from './pages/ContentVideo'\r\nimport ContentAudio from './pages/ContentAudio'\r\nimport ContentAll from './pages/ContentAll'\r\nimport CoursePlayer from './pages/CoursePlayer'\r\nimport ClassesForBranch from './pages/classesForBranch'\r\nimport ReactMap from './pages/location'\r\nimport FeeManagement from './pages/FeeManagement'\r\n\r\n//user\r\nimport UserCourses from './pages/UserCourses'\r\nimport UserCourseForm from './pages/UserCourseForm'\r\nimport UserCourseSections from './pages/UserCourseSections'\r\nimport UserCourseSectionForm from './pages/UserCourseSectionform'\r\nimport UserVideoContent from './pages/UserContentAll'\r\n\r\n\r\n\r\nexport default function ECourse () {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/setting/class' component={Classes} />\r\n      <Route exact path='/setting/Branch' component={Branches} />\r\n      <Route exact path='/setting/Batch' component={Batches} />\r\n\r\n      <Route exact path='/setting/classForm' component={ClassForm} />\r\n      <Route exact path='/setting/branchForm' component={BranchForm} />\r\n      <Route exact path='/setting/BatchForm/' component={BatchForm} />\r\n\r\n      <Route path='/setting/branchForm/:id'>\r\n        <BranchForm />\r\n      </Route>\r\n      <Route exact path='/setting/CourseForm/:id?'>\r\n        <CourseForm />\r\n      </Route>\r\n      <Route path='/setting/classForm/:id'>\r\n        <ClassForm />\r\n      </Route>\r\n      <Route exact path='/setting/BatchForm/:id'>\r\n        <BatchForm />\r\n      </Route>\r\n\r\n      <Route exact path='/setting/CourseForm/:id/:cid'>\r\n        <CourseForm />\r\n      </Route>\r\n      <Route exact path='/setting/Courses/:id'>\r\n        <Courses />\r\n      </Route>\r\n      <Route exact path='/setting/course/:id/sections'>\r\n        < CourseSections />\r\n      </Route>\r\n      <Route exact path='/setting/course/:id/showCourse'>\r\n        < CoursePlayer />\r\n      </Route>\r\n      \r\n      <Route exact path='/setting/course/:cid/sectionForm'>\r\n        < CourseSectionform />\r\n      </Route>\r\n      <Route exact path='/setting/course/:cid/sectionForm/:id'>\r\n        < CourseSectionform />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content'>\r\n        < ContentAll />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/text'>\r\n        < ContentText />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/video'>\r\n        < ContentVideo />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/audio'>\r\n        < ContentAudio />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/pdf'>\r\n        < ContentPdf />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/:cid'>\r\n        <ContentAll/>\r\n      </Route>\r\n      <Route exact path='/setting/classList'>\r\n        <ClassesForBranch/>\r\n      </Route>\r\n      <Route exact path='/setting/location'>\r\n        <ReactMap/>\r\n      </Route>\r\n\r\n\r\n       {/* User */}\r\n      <Route exact path='/setting/UserCourses'>\r\n        <UserCourses/>\r\n      </Route>\r\n      <Route exact path='/setting/UserCourseForm/:cid?'>\r\n        <UserCourseForm/>\r\n      </Route>\r\n      <Route exact path='/setting/Usercourse/:id/sections'>\r\n        < UserCourseSections />\r\n      </Route>\r\n      <Route exact path='/setting/Usercourse/:cid/sectionForm/:id?'>\r\n        < UserCourseSectionForm />\r\n      </Route>\r\n      <Route exact path='/setting/Usercourse/section/:id/content'>\r\n        < UserVideoContent />\r\n      </Route>\r\n      \r\n{/* \r\n      <Redirect to='/error/error-v1' /> */}\r\n    </Switch>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\CourseActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourses.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\feesChangeFormatterBranch.js",["1205","1206"],"// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useState , useEffect } from 'react' \r\nimport SVG from 'react-inlinesvg'\r\n\r\nimport { toAbsoluteUrl } from '../../../../_metronic/_helpers'\r\n\r\nexport default function FeesChangeActionFormatter ({\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  updateFees\r\n}) {\r\n  const [IsInput, setIsInput] = useState(false)\r\n  const [feesValue, setFeesValue] = useState(cellContent)\r\n  const Edit = () => {\r\n    setIsInput(true)\r\n  }\r\n  const save = () => {\r\n    updateFees(row._id, feesValue , row.name , row.fees)\r\n    setIsInput(false)\r\n  }\r\n  \r\n    useEffect(() => {\r\n      debugger;\r\n    }, [feesValue])\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n      {IsInput && (\r\n        <>\r\n           <button onClick={save} className={'btn btn-success'} style={{\"display\":\"inline\"}}>\r\n            save\r\n          </button>\r\n          <input\r\n            // value= {feesValue}\r\n            placeholder={`${row.fees} Give New Amount`}\r\n            onChange={event => {\r\n              setFeesValue(event.target.value)\r\n              \r\n            }}\r\n          />\r\n       \r\n        </>\r\n      )}\r\n      {!IsInput && (\r\n        <>\r\n          <div>\r\n          <button onClick={Edit} className={'btn btn-primary '} style={{\"display\":\"inline\"}}>\r\n              edit\r\n            </button>\r\n            {row.fees}\r\n            \r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\UserCourseActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourseForm.js",["1207","1208","1209"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport JoditEditor from 'jodit-react'\r\nimport axios from 'axios'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nexport default function UserCourseForm () {\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const editor = useRef(null)\r\n  const [Course, setCourse] = useState({\r\n    rating: 0,\r\n    numberOfRatings: 0,\r\n    numberOfStudent: 0,\r\n    title: '',\r\n    Description: '',\r\n    overview: '',\r\n    posterImageUrl: '',\r\n    file: '',\r\n    price : 0,\r\n    error : \"\",\r\n    courseLanguage : \"\"\r\n  })\r\n  const { cid } = useParams()\r\n  const history = useHistory()\r\n  const onChangeOverView = e => {\r\n    debugger\r\n    // console.log(this.editor.current)\r\n    setCourse({\r\n      ...Course,\r\n      overview: e.target.innerHTML\r\n    })\r\n  }\r\n  // const uploadFile = async () => {}\r\n  const SaveCourse = async event => {\r\n    event.preventDefault()\r\n    debugger\r\n    var ImageUrl = ''\r\n    let courseObject =Course;\r\n    if (Course.file) {\r\n      let formData = new FormData()\r\n      formData.append('file', Course.file)\r\n      debugger\r\n      await axios\r\n        .post('api/course/UseruploadCourseProfile/', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        })\r\n        .then(res => {\r\n          debugger\r\n          ImageUrl = res.data.name\r\n          // setCourse({ ...Course, posterImageUrl: res.data.name })\r\n        })\r\n        .catch(() => {\r\n          console.log('error in file upload')\r\n        })\r\n    }\r\n\r\n    if (ImageUrl) {\r\n      courseObject.posterImageUrl=ImageUrl\r\n    }\r\n    console.log(\":in here\" , courseObject.price.toString().substring(0,1) == 0)\r\n    if(courseObject.price.toString().length > 1){\r\n      if(courseObject.price.toString().substring(0,1) == 0){\r\n        setCourse({\r\n          ...Course,\r\n          error: \"Please Give Correct Price\"\r\n        })\r\n        return ;\r\n      }\r\n    }\r\n    \r\n    await axios\r\n      .post('/api/course/UsersaveCourse/', courseObject)\r\n      .then(result => {\r\n        debugger\r\n        history.goBack()\r\n        history.push('/setting/UserCourses')\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    debugger\r\n  }\r\n  useEffect(() => {\r\n    debugger\r\n    if (cid) {\r\n      axios\r\n        .get('/api/course/UsercourseList/' + cid)\r\n        .then(res => {\r\n          setCourse(res.data)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [cid])\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Form onSubmit={SaveCourse} className='form'>\r\n              <Card.Body>\r\n                <Form.Group className='row'>\r\n                  <div className='col-md-6' controlId='formTitle'>\r\n                    <Form.Label>Course Title</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Course Title'\r\n                      value={Course.title}\r\n                      required\r\n                      onChange={event =>\r\n                        setCourse({ ...Course, title: event.target.value })\r\n                      }\r\n                    />\r\n                    <Form.Text className='text-muted'>\r\n                      new course title.\r\n                    </Form.Text>\r\n                  </div>\r\n                  <div controlId='formDesc' className='col-md-6'>\r\n                    <Form.Label>Course Description</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Course Description'\r\n                      value={Course.Description}\r\n                      onChange={event =>\r\n                        setCourse({\r\n                          ...Course,\r\n                          Description: event.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n                <Form.Group className='row'>\r\n                <div controlId='formDesc' className='col-md-6'>\r\n                    <Form.Label>Course Price</Form.Label>\r\n                    <Form.Control\r\n                      type='number'\r\n                      placeholder='Course Price'\r\n                      value={Course.price}\r\n                      onChange={event =>\r\n                        setCourse({\r\n                          ...Course,\r\n                          price: event.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                   {Course.error && Course.error.length > 0 &&  <Form.Text className='text-muted'>\r\n                   {Course.error}\r\n                    </Form.Text> }\r\n                  </div>\r\n                   <div className='col-md-4'>\r\n                    <Form.Label>Select Language </Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      as='select'\r\n                      placeholder=''\r\n                      // disabled={Exam._id?\"true\":\"false\"}\r\n                      value={Course.courseLanguage}\r\n                      onChange={event =>\r\n                        setCourse({\r\n                          ...Course,\r\n                          courseLanguage: event.target.value\r\n                        })\r\n                      }\r\n                    >\r\n                      <option value=\"\">select class</option>\r\n                      \r\n                        <option value={\"English\"} key={\"English\"}>\r\n                          English\r\n                        </option>\r\n                        <option value={\"Hindi\"} key={\"Hindi\"}>\r\n                          Hindi\r\n                        </option>\r\n                    \r\n                      \r\n                    </Form.Control>\r\n                  </div>\r\n                \r\n                </Form.Group>\r\n                <Form.Group controlId='formOverview' className='row'>\r\n                  <Form.Label className='col-md-12 text-left mb-5'>\r\n                    Course Overview\r\n                  </Form.Label>\r\n                  {/* <Form.Control type='text' placeholder='Course Overview' /> */}\r\n                  <div className='col-md-12 mb-5'>\r\n                    <JoditEditor\r\n                      ref={editor}\r\n                      value={Course.overview}\r\n                      config={config}\r\n                      tabIndex={1} // tabIndex of textarea\r\n                      onBlur={onChangeOverView} // preferred to use only this option to update the content for performance reasons\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='Image'>\r\n                  <Form.Label>Course Picture</Form.Label>\r\n                  <Form.Control\r\n                    type='file'\r\n                    //   value={Course.Description}\r\n                    onChange={event =>\r\n                      setCourse({ ...Course, file: event.target.files[0] })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                {Course.posterImageUrl && (\r\n                  <img                     src={\r\n                      'http://localhost:4000/uploads/CourseProfile/' +\r\n                      Course.posterImageUrl\r\n                    }\r\n                    width='200px'\r\n                  />\r\n                )}\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Card.Footer>\r\n            </Form>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseSectionform.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\UserCourseProfileFormater.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourseSections.js",["1210","1211","1212","1213","1214","1215","1216","1217"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Accordion, Card, Col, Nav, Row } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport SVG from 'react-inlinesvg'\r\nimport { toAbsoluteUrl } from '../../../../_metronic/_helpers'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\nimport AddContentButton from '../components/ContentAddButton'\r\n\r\nexport default function UserCourseSections () {\r\n  //id of Course\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n  const [sections, setSections] = useState([])\r\n  const [expanded, setExpanded] = useState('panel1')\r\n  const [course, setCourse] = useState(null)\r\n\r\n  const handleChange = panel => () => {\r\n    if (expanded != panel) setExpanded(panel)\r\n  }\r\n  const CreateSection = () => {\r\n    history.push('/setting/Usercourse/' + id + '/sectionForm')\r\n  }\r\n\r\n  const EditSection = secId => {\r\n    history.push('/Setting/Usercourse/' + id + '/sectionForm/' + secId)\r\n  }\r\n  const DeleteSection = id => {\r\n    debugger\r\n    if (window.confirm('Do you realy Want to delete Compelete Section ?')) {\r\n      debugger\r\n      axios\r\n        .delete('/api/course/deleteUserCourseSection/' + id)\r\n        .then(response => {\r\n          loaddata()\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n  const loaddata = () => {\r\n    axios\r\n      .get('/api/course/getUserCourse/' + id)\r\n      .then(res => {\r\n        debugger\r\n        console.log('res' , res.data)\r\n        setCourse(res.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n  const editContent = (id, sectionId) => {\r\n    history.push('/setting/course/section/' + sectionId + '/content/' + id)\r\n  }\r\n  const showContent = ( sectionId) => {\r\n    console.log(id , sectionId)\r\n    history.push(`/setting/course/${id}/showCourse`)\r\n  }\r\n\r\n  const deleteContent = id => {\r\n    debugger\r\n    if (window.confirm('Do you realy Want to delete Compelete Section ?')) {\r\n      axios\r\n        .delete('/api/Course/sectionContent/' + id)\r\n        .then(res => {\r\n          loaddata()\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    loaddata()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className='row'>\r\n          <div className='col-md-12'>\r\n            <Card>\r\n              <Card.Header as='h5'>\r\n                {course && course.class ? course.class.name + '->' : ''}\r\n                {course ? course.title : ''}\r\n                <Button\r\n                  variant='primary'\r\n                  className='btn btn-outline-primary ml-2 float-right'\r\n                  type='button'\r\n                  onClick={() => {\r\n                    if (history.length > 1) {\r\n                      // this will take you back if there is history\r\n                      history.goBack()\r\n                    }\r\n                  }}\r\n                >\r\n                  back\r\n                </Button>\r\n                <button\r\n                  className='btn btn-primary float-right'\r\n                  onClick={CreateSection}\r\n                >\r\n                  Add New Section\r\n                </button>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Accordion>\r\n                  {course &&\r\n                    course.sections.sort((a, b) => a.order - b.order).map(item => (\r\n                      \r\n                      <Card key={item._id}>\r\n                        <Card.Header>\r\n                          <div className='row'>\r\n                            <div className='col ANewSec'>\r\n                              <Accordion.Toggle\r\n                                as={Button}\r\n                                variant='text'\r\n                                eventKey={item._id}\r\n                              >{console.log(\"item\" , item)}\r\n                                <h5>{item.name}</h5>\r\n                              </Accordion.Toggle>\r\n                            </div>\r\n                            <Col md='auto'>\r\n                              <div\r\n                                className='btn-group'\r\n                                role='group'\r\n                                aria-label=''\r\n                              >\r\n                                {/* <AddContentButton\r\n                                  sectionId={item._id}\r\n                                  courseId={id}\r\n                                /> */}\r\n                                <button\r\n                                className=\"btn btn-primary\"\r\n                                  onClick={() => {\r\n                                    history.push(`/test/${id}/section/${item._id}/tests`)\r\n                                  }}\r\n                                >\r\n                                  Tests\r\n                                </button>\r\n                                <button\r\n                                 className=\"btn btn-primary\"\r\n                                  onClick={() => {\r\n                                    history.push(`/setting/Usercourse/section/${item._id}/content/`)\r\n                                  }}\r\n                                >\r\n                                  Add Content\r\n                                </button>\r\n\r\n                                <button\r\n                                  className=' btn btn-primary pull-right'\r\n                                  style={{ marginLeft: 'auto' }}\r\n                                  onClick={e => {\r\n                                    EditSection(item._id)\r\n                                  }}\r\n                                >\r\n                                  <span className='svg-icon svg-icon-md'>\r\n                                    <SVG\r\n                                      title='Edit Content'\r\n                                      src={toAbsoluteUrl(\r\n                                        '/media/svg/icons/Communication/Write.svg'\r\n                                      )}\r\n                                    />\r\n                                  </span>\r\n                                </button>\r\n                                <button\r\n                                  className=' btn btn-danger pull-right'\r\n                                  onClick={event => {\r\n                                    DeleteSection(item._id)\r\n                                  }}\r\n                                >\r\n                                  <span className='svg-icon svg-icon-md'>\r\n                                    <SVG\r\n                                      src={toAbsoluteUrl(\r\n                                        '/media/svg/icons/General/Trash.svg'\r\n                                      )}\r\n                                      title='Delete Content'\r\n                                    />\r\n                                  </span>\r\n                                </button>\r\n                              </div>\r\n                            </Col>\r\n                          </div>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey={item._id}>\r\n                          <Card.Body>\r\n                            {item.contents.map(c => {\r\n                              return (\r\n                                <div\r\n                                  className='row mb-5 brd_b'\r\n                                  key={c._id}\r\n                                  // style={{ margin: '10px' }}\r\n                                >\r\n                                  <Col className='secTitle'>{c.title}</Col>\r\n\r\n                                  <Col className='secType'>{`${c.videoUrl || c.videoDescription ? \"Video\" : \"\"}  ${c.pdfUrl || c.pdfDescription? \"| Pdf\" : \"\"} ${c.imageUrl || c.imageDescription? \"| Image\" : \"\"} ${c.audioUrl ? \"| Audio\" : \"\"} ${c.textDescription ? \"Text\" : \"\"} `}</Col>\r\n                                  {/* <Col className='secUrl'>\r\n                                    {c.contentUrl ? 'true' : 'false'}\r\n                                  </Col> */}\r\n                                  <Col xs md='2' className='secAction'>\r\n                                    <div\r\n                                      className='btn-group float-right'\r\n                                      role='group'\r\n                                      aria-label=''\r\n                                    >\r\n                                      <button\r\n                                        className='btn btn-outline-primary pull-right'\r\n                                        onClick={event => {\r\n                                          showContent( item._id)\r\n                                        }}\r\n                                      >\r\n                                        Show\r\n                                      </button>\r\n                                      <button\r\n                                        className='btn btn-outline-primary pull-right'\r\n                                        onClick={event => {\r\n                                          editContent(c._id, item._id)\r\n                                        }}\r\n                                      >\r\n                                        Edit\r\n                                      </button>\r\n                                      <button\r\n                                        className='btn btn-outline-danger pull-right'\r\n                                        onClick={event => {\r\n                                          deleteContent(c._id)\r\n                                        }}\r\n                                      >\r\n                                        Delete\r\n                                      </button>\r\n                                    </div>\r\n                                  </Col>\r\n                                </div>\r\n                              )\r\n                            })}\r\n                          </Card.Body>\r\n                        </Accordion.Collapse>\r\n                      </Card>\r\n                    ))}\r\n                </Accordion>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourseSectionform.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserContentAll.js",["1218","1219","1220"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\App.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\__mocks__\\mockAxios.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\content\\Content.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\I18nProvider.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage1.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\permissionContext.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\stretched-card.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\ContentEditDilogue.js",["1221","1222","1223","1224","1225","1226"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\n// import { useParams } from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Modal, Card, Select } from 'react-bootstrap'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Input } from '../../../../_metronic/_partials/controls'\r\nimport { actions } from './../_redux/EcourseRedux'\r\n\r\nconst ContentEdit = Yup.object().shape({\r\n  _id: Yup.string().nullable(true),\r\n  courseId: Yup.string().required('Course ID is required'),\r\n  sectionId: Yup.string().required('section is required'),\r\n  title: Yup.string().required('title is required'),\r\n  type: Yup.string().required('type is required'),\r\n  // file: Yup.mixed().required('file is required')\r\n  // contentUrl: Yup.string().required('Name is required')\r\n})\r\n\r\nfunction ContentEditDilogue ({ CourseID, dispatch, Content, Section }) {\r\n  const [content, setContent] = useState(\r\n    Content != null\r\n      ? { ...Content, courseId: CourseID, sectionId: Section._id }\r\n      : {\r\n          _id: null,\r\n          courseId: CourseID,\r\n          sectionId: Section._id,\r\n          title: '',\r\n          type: '',\r\n          contentUrl: '',\r\n          file: null\r\n        }\r\n  )\r\n  const [ContenTypeDDr, setContenTypeDDr] = useState([])\r\n  let history = useHistory()\r\n  const onHide = () => {\r\n    // console.log(CourseID)\r\n    // var CourseID\r\n   \r\n\r\n    history.push('/Ecourse/CourseContent/?id=' + CourseID)\r\n  }\r\n  useEffect(() => {\r\n    axios('/api/Course/getContentType')\r\n      .then(response => {\r\n        debugger\r\n        return response.data\r\n      })\r\n      .then(data => {\r\n        // let typesFromApi = data.map(team => {\r\n        //   return {value: team, display: team}\r\n        // });\r\n        let ddr = [{ value: '', text: 'select your ContentType' }].concat(data)\r\n        console.log(ddr)\r\n        setContenTypeDDr(ddr)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n  return (\r\n    <Card>\r\n      <Card.Header>Section Content</Card.Header>\r\n\r\n      <Formik\r\n        // enableReinitialize={true}\r\n        initialValues={content}\r\n        validationSchema={ContentEdit}\r\n        onSubmit={values => {\r\n          debugger\r\n          console.log(values)\r\n          let sec = {\r\n            _id: values._id,\r\n            courseId: content.courseId,\r\n            title: values.title,\r\n            sectionId: content.sectionId,\r\n            type: values.type,\r\n            contentUrl: values.contentUrl\r\n          }\r\n         \r\n         if(sec._id&&!values.file){\r\n          axios\r\n          .post('/api/course/courseSectionContent', sec)\r\n          .then(response => {\r\n            onHide()\r\n          })\r\n          .catch(err => {\r\n            console.log(err)\r\n          })\r\n\r\n         }\r\n         else{\r\n          var formData = new FormData()\r\n          formData.append('file', values.file[0])\r\n          formData.append('courseId',content.courseId)\r\n          axios\r\n            .post('/api/course/courseSectionContentFile',formData, {\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n            })\r\n            .then(response => {\r\n              debugger\r\n              sec.contentUrl = response.data.name\r\n              if (sec.contentUrl) {\r\n                axios\r\n                  .post('/api/course/courseSectionContent', sec)\r\n                  .then(response => {\r\n                    onHide()\r\n                  })\r\n                  .catch(err => {\r\n                    console.log(err)\r\n                  })\r\n              } else {\r\n                alert('error in file upload')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err)\r\n            })\r\n\r\n         }\r\n          \r\n        }}\r\n      >\r\n        {formik => {\r\n          console.log(formik)\r\n\r\n          return (\r\n            <>\r\n              <Form\r\n                className='form form-label-right'\r\n                onSubmit={formik.handleSubmit}\r\n              >\r\n                <Card.Body>\r\n                  <div className='row'>\r\n                    <div className='col-lg-6'>\r\n                      <div className='form-group'>\r\n                        <label for='title'>Title</label>\r\n                        <Field\r\n                          name='title'\r\n                          placeholder='title'\r\n                          label='section title'\r\n                          className='form-control'\r\n                        />\r\n                        <ErrorMessage name='title' />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-lg-3'>\r\n                      <div className='form-group'>\r\n                        <label for='type'>Type</label>\r\n\r\n                        <Field\r\n                          as='select'\r\n                          name='type'\r\n                          label='Content Type'\r\n                          className='form-control'\r\n                        >\r\n                          {ContenTypeDDr.map(item => (\r\n                            <option value={item.value} key={item.value}>\r\n                              {item.text}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        <ErrorMessage name='type' />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-lg-3'>\r\n                      <div className='form-group'>\r\n                        <label for='file'>File</label>\r\n                        <input\r\n                          id='file' \r\n                          name='file'\r\n                          type='file'\r\n                          onChange={event => {\r\n                            formik.setFieldValue(\r\n                              'file',\r\n                              event.currentTarget.files\r\n                            )\r\n                          }}\r\n                        />\r\n                        <ErrorMessage name='file' />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-12'></div>\r\n                  </div>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                  <button\r\n                    type='button'\r\n                    onClick={onHide}\r\n                    className='btn btn-light btn-elevate mr-2'\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <></>\r\n                  <button type='submit' className='btn btn-primary btn-elevate' disabled={formik.isSubmitting || !formik.dirty}>\r\n                    Save\r\n                  </button>\r\n                </Card.Footer>\r\n              </Form>\r\n            </>\r\n          )\r\n        }}\r\n      </Formik>\r\n    </Card>\r\n  )\r\n}\r\nfunction mapStateToProps (state) {\r\n  debugger\r\n  console.log(state.course.CurrentCourseId)\r\n  return {\r\n    CourseID: state.course.CurrentCourseId,\r\n    Section: state.course.CurrentSection,\r\n    Content: state.course.CurrentContent\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(ContentEditDilogue)\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\header-menu\\HeaderMenu.js",["1227","1228"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\branchuserForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\SVGIcon.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\DatePickerField.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples-kt\\KTCodeBlock.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Curriculam.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\builder\\Builder.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\examForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseForm.js",["1229","1230","1231","1232","1233","1234","1235"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport JoditEditor from 'jodit-react'\r\nimport axios from 'axios'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nexport default function CourseForm () {\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const editor = useRef(null)\r\n  const [Course, setCourse] = useState({\r\n    rating: 0,\r\n    numberOfRatings: 0,\r\n    numberOfStudent: 0,\r\n    title: '',\r\n    Description: '',\r\n    overview: '',\r\n    posterImageUrl: '',\r\n    file: ''\r\n  })\r\n  const [ClassList , setClassList] = useState()\r\n  const [ClassId , setClassId] = useState()\r\n  const [ClassSelected , setClassSelected] = useState()\r\n  const { id } = useParams()\r\n  const { cid } = useParams()\r\n  const history = useHistory()\r\n  const onChangeOverView = e => {\r\n    debugger\r\n    // console.log(this.editor.current)\r\n    setCourse({\r\n      ...Course,\r\n      overview: e.target.innerHTML\r\n    })\r\n  }\r\n  // const uploadFile = async () => {}\r\n  const SaveCourse = async event => {\r\n    event.preventDefault()\r\n    debugger\r\n    var ImageUrl = ''\r\n    let courseObject =Course;\r\n    if (Course.file) {\r\n      let formData = new FormData()\r\n      formData.append('file', Course.file)\r\n      debugger\r\n      await axios\r\n        .post('api/course/uploadCourseProfile/', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        })\r\n        .then(res => {\r\n          debugger\r\n          ImageUrl = res.data.name\r\n          // setCourse({ ...Course, posterImageUrl: res.data.name })\r\n        })\r\n        .catch(() => {\r\n          console.log('error in file upload')\r\n        })\r\n    }\r\n\r\n    if (ImageUrl) {\r\n      courseObject.posterImageUrl=ImageUrl\r\n    }\r\n    // console.log(ImageUrl)\r\n    debugger\r\n    if(ClassId == undefined){\r\n      return alert(\"Please Select Class\")\r\n    }\r\n    await axios\r\n      .post('/api/course/course/' + ClassId, courseObject)\r\n      .then(result => {\r\n        debugger\r\n        history.goBack()\r\n        if(id == undefined){\r\n\r\n          history.push('/ecourse/Courses')\r\n        }\r\n        else{\r\n          \r\n          history.push('/setting/courses/' + id)\r\n        }\r\n        \r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    debugger\r\n  }\r\n  useEffect(() => {\r\n    debugger\r\n    setClassId(id)\r\n    axios.get('/api/course/getAllClassNameForCourseAdd')\r\n          .then(res => {\r\n            setClassList(res.data[0].classes)\r\n          }).catch(err => {\r\n            console.log(err)\r\n          })\r\n\r\n    if (cid) {\r\n      axios\r\n        .get('/api/course/course/' + cid)\r\n        .then(res => {\r\n          setCourse(res.data.course)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [cid])\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Form onSubmit={SaveCourse} className='form'>\r\n              <Card.Body>\r\n                <Form.Group className='row'>\r\n                  \r\n               {id == undefined && <div className='col-md-4'>\r\n                    <Form.Label>Select Class </Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      as='select'\r\n                      placeholder=''\r\n                      // disabled={Exam._id?\"true\":\"false\"}\r\n                      // value={Exam.class}\r\n                      onChange={event =>\r\n                        setClassId(event.target.value)\r\n                      }\r\n                    >\r\n                      <option value=\"\">select class</option>\r\n                      {ClassList && ClassList.length && ClassList.map(item => (\r\n                        <option value={item._id} key={item._id}>\r\n                          {item.name}\r\n                        </option>\r\n                      ))\r\n                      }\r\n                    </Form.Control>\r\n                  </div>\r\n                }\r\n                  <div className='col-md-6' controlId='formTitle'>\r\n                    <Form.Label>Course Title</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Course Title'\r\n                      value={Course.title}\r\n                      required\r\n                      onChange={event =>\r\n                        setCourse({ ...Course, title: event.target.value })\r\n                      }\r\n                    />\r\n                    <Form.Text className='text-muted'>\r\n                      new course title.\r\n                    </Form.Text>\r\n                  </div>\r\n                  <div controlId='formDesc' className='col-md-6'>\r\n                    <Form.Label>Course Description</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Course Description'\r\n                      value={Course.Description}\r\n                      onChange={event =>\r\n                        setCourse({\r\n                          ...Course,\r\n                          Description: event.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='formOverview' className='row'>\r\n                  <Form.Label className='col-md-12 text-left mb-5'>\r\n                    Course Overview\r\n                  </Form.Label>\r\n                  {/* <Form.Control type='text' placeholder='Course Overview' /> */}\r\n                  <div className='col-md-12 mb-5'>\r\n                    <JoditEditor\r\n                      ref={editor}\r\n                      value={Course.overview}\r\n                      config={config}\r\n                      tabIndex={1} // tabIndex of textarea\r\n                      onBlur={onChangeOverView} // preferred to use only this option to update the content for performance reasons\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='Image'>\r\n                  <Form.Label>Course Picture</Form.Label>\r\n                  <Form.Control\r\n                    type='file'\r\n                    //   value={Course.Description}\r\n                    onChange={event =>\r\n                      setCourse({ ...Course, file: event.target.files[0] })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                {Course.posterImageUrl && (\r\n                  <img                     src={\r\n                      'http://localhost:4000/uploads/CourseProfile/' +\r\n                      Course.posterImageUrl\r\n                    }\r\n                    width='200px'\r\n                  />\r\n                )}\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Card.Footer>\r\n            </Form>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\permissions.js",["1236","1237"],"import React, { useEffect, useState } from 'react'\r\nimport { Card, Table } from 'react-bootstrap'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nexport default function Permissions () {\r\n  const history = useHistory()\r\n  const { id } = useParams()\r\n  const [Modules, setModules] = useState([])\r\n  const [Permissions, setPermission] = useState([])\r\n  const [Role, setRole] = useState()\r\n  useEffect(() => {\r\n    axios\r\n      .get('/api/permission/getModules')\r\n      .then(res => {\r\n        setModules(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      getRolePermissions()\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id])\r\n\r\n  const getRolePermissions=()=>{\r\n    axios\r\n    .get(`/api/permission/getRolesPermission/${id}`)\r\n    .then(res => {\r\n      debugger;\r\n      if(res.data.length>0){\r\n        setPermission(res.data[0].permissions)\r\n        setRole(res.data[0])\r\n      }\r\n      console.log(res.data)\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n  const postPermission = (module, permission, Checked) => {\r\n    debugger\r\n    console.log(module, permission, Checked)\r\n    if (Checked) {\r\n      axios\r\n        .post('/api/permission/setPermission', { module, permission, id })\r\n        .then(res => {\r\n          // setModules(res.data)\r\n          getRolePermissions();\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n    if (!Checked) {\r\n      axios\r\n        .post('/api/permission/unsetPermission', { module, permission,id })\r\n        .then(res => {\r\n          // setModules(res.data)\r\n          getRolePermissions();\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n\r\n  const CheckPermissionInputCheck = (module, permission) => {\r\n    console.log(module, permission)\r\n    if (Permissions)\r\n      return Permissions.some(\r\n        m => m.module === module && m.permission === permission\r\n      )\r\n    else return false\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Header title='Examinations'>\r\n              <Card.Title>Roles Permissions</Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Table>\r\n                <tbody>\r\n                <tr>\r\n                  <th>Modules</th>\r\n                  <th>READ(1)</th>\r\n                  <th>WRITE(2)</th>\r\n                  <th>EXECUTE(4)</th>\r\n                </tr>\r\n                {Modules &&\r\n                  Modules.length > 0 &&\r\n                  Modules.map(item => (\r\n                    <tr key={item.key}>\r\n                      <td>{item.module} {`(${item.id})`}</td>\r\n                      <td>\r\n                        <input\r\n                          type='checkbox'\r\n                          checked={CheckPermissionInputCheck(item.id, 1)}\r\n                          onClick={event => {\r\n                            postPermission(item.id, 1, event.target.checked)\r\n                          }}\r\n                        ></input>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type='checkbox'\r\n                          checked={CheckPermissionInputCheck(item.id, 2)}\r\n                          onClick={event =>\r\n                            postPermission(item.id, 2, event.target.checked)\r\n                          }\r\n                        ></input>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type='checkbox'\r\n                          checked={CheckPermissionInputCheck(item.id, 4)}\r\n                          onClick={event =>\r\n                            postPermission(item.id, 4, event.target.checked)\r\n                          }\r\n                        ></input>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                  </tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header-topbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header-menu.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\components\\StudentActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\rootReducer.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicLayout.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\connectPage.js",["1238","1239","1240","1241","1242","1243"],"import React, { useEffect, useState } from 'react'\r\nimport {  useDispatch} from \"react-redux\";\r\nimport * as auth from \"../../Auth/_redux/authRedux\";\r\nimport { actionTypes } from \"../../Auth/_redux/authRedux\";\r\nimport { Redirect, Switch, Route ,useHistory } from 'react-router-dom'\r\nimport {\r\n  useParams,\r\n} from 'react-router'\r\n\r\n\r\nexport default function ConnectPage () {\r\n    const dispatch = useDispatch()\r\nconst {authToken} = useParams()\r\nconst history = useHistory()\r\nif(authToken){\r\n    // debugger;\r\n    dispatch({ type: actionTypes.getUserData , payload : { authToken } } )\r\n    history.push('/')\r\n}\r\n\r\n \r\n\r\n\r\n \r\n  return (\r\n      <>you are here </>\r\n  )\r\n  \r\n   \r\n}\r\n\r\n \r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\MyPage.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\LocalStorageHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\CourseDetails.js",["1244"],"import React, { useEffect, useState } from 'react'\r\nimport { Card, Row, Col, Badge, Tabs, Tab } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n// import CourseBlock from '../Components/CourseBlock'\r\nimport Announcement from '../components/Announcement'\r\nimport Curriculam from '../components/Curriculam'\r\nimport Faqs from '../components/FAQs'\r\nimport Overview from '../components/Overview'\r\nimport Reviews from '../components/Reviews'\r\nimport CardSideStickey from '../components/cardSideStickey'\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from 'react-router'\r\nexport default function CoursesDetails () {\r\n  const [coursedetails, setCoursesdetails] = useState(null)\r\n  const [averageRating , setAverageRating] = useState()\r\n  const [noOfStudent , setnoOfStudent] = useState()\r\n\r\n  const {courseId} = useParams()\r\n  const history = useHistory()\r\n  const EditHandler = () => {\r\n    history.push('/setting/CourseForm/' + coursedetails[0].class + '/' + courseId)\r\n  }\r\n  useEffect(() => {\r\n    debugger\r\n    axios.get('/api/course/courseDetailByCourseId/' + courseId).then((res)=>{\r\n      console.log(\"data here\" , res.data)\r\n      setCoursesdetails(res.data)\r\n    }).catch((res)=>{\r\n\r\n    })\r\n    axios.get('/api/course/getAverageRatings/' + courseId).then((res)=>{\r\n      setAverageRating(res.data[0])\r\n    }).catch((res)=>{\r\n\r\n    })\r\n    axios.get('/api/course/noOfStudentInCourse/' + courseId).then((res)=>{\r\n      setnoOfStudent(res.data)\r\n    }).catch((res)=>{\r\n\r\n    })\r\n    \r\n  }, [])\r\n  return (\r\n    <div>\r\n      {coursedetails && coursedetails.length && (\r\n      <Row>\r\n        <Col md={9}>\r\n          <Row>\r\n            <Col>\r\n              <Card classNameName='col-md-12'>\r\n                <Card.Header as='h5'>Course</Card.Header>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col>\r\n                      <div style={{ width: '80%' }}>\r\n                        <h3>{coursedetails &&  coursedetails[0].title}</h3>\r\n                        <p>{coursedetails &&  coursedetails[0].Description}\r\n                        </p>\r\n                        <div>\r\n                          <Badge variant='secondary'>{averageRating && averageRating.averageRating.toFixed(2)}</Badge>\r\n                          <span classNameName='fa fa-star checked'></span>\r\n                          <span classNameName='fa fa-star checked'></span>\r\n                          <span classNameName='fa fa-star checked'></span>\r\n                          <span classNameName='fa fa-star'></span>\r\n                          <span classNameName='fa fa-star'></span>\r\n                          <span classNameName='fa fa-child ml-15 mr-2'>\r\n                            {' '}\r\n                          </span>{' '}\r\n                          {noOfStudent && noOfStudent.noOfStudent} Student Enrolled\r\n                        </div>\r\n                        <p>\r\n                        Created by <b>{coursedetails.length && coursedetails[0].createdBy[0].name}</b> Last updated &nbsp;\r\n                          {coursedetails && coursedetails[0].modifiedDate.slice(0, 10)}\r\n                        </p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <div>\r\n                <Tabs defaultActiveKey='overview' id='uncontrolled-tab-example'>\r\n                  <Tab eventKey='overview' title='Overview'>\r\n                    <Overview overview={coursedetails[0].overview}/>\r\n                  </Tab>\r\n                  <Tab eventKey='curriculam' title='Curriculam'>\r\n                    <Curriculam data={coursedetails}/>\r\n                  </Tab>\r\n                  <Tab eventKey='Faq' title='Faq'>\r\n                    <Faqs />\r\n                  </Tab>\r\n                  <Tab eventKey='reviews' title='Reviews'>\r\n                    <Reviews id={courseId} />\r\n                  </Tab>\r\n                  <Tab eventKey='Announcement' title='Announcement'>\r\n                    <Announcement  id={coursedetails[0].createdBy[0]._id}/>\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n\r\n\r\n        <CardSideStickey EditHandler={EditHandler} data={coursedetails}/>\r\n\r\n        \r\n        </Col>\r\n      </Row>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionalTestForm.js",["1245","1246"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Form, Card ,Col} from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport JoditEditor from 'jodit-react'\r\n\r\nexport default function SectionalTestForm () {\r\n  const [Test, setTest] = useState({\r\n    name: '',\r\n    description: '',\r\n    class: '',\r\n    totalMarks: '',\r\n    timeInHours: '',\r\n    timeInMinutes: '',\r\n    passingMarks: '',\r\n    testLevel:\"\"    \r\n\r\n  })\r\n  const [Class, setClasses] = useState([])\r\n  // const [Years, setYears] = useState([])\r\n\r\n  let { id ,  tid ,sid } = useParams()\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    \r\n    debugger\r\n    if (tid) {\r\n      axios.get(`/api/Test/getTestById/${tid}`)\r\n    .then(res => {\r\n    debugger;\r\n    console.log(\"res\" , res)\r\n    setTest(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n    }\r\n  }, [tid, id])\r\n\r\n  const saveTest = event => {\r\n    event.preventDefault()\r\n    debugger;\r\n    console.log(Test);\r\n    axios\r\n      .post(`/api/Test/${sid}/saveTestDetails`, Test)\r\n      .then(res => {\r\n        history.push(`/Test/${id}/section/${sid}/tests`)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const editor = React.useRef(null)\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const handleDescripiton = e => {\r\n    debugger;\r\n    setTest({\r\n      ...Test , \r\n      description : e.target.innerHTML\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form onSubmit={saveTest} className='form'>\r\n                <Form.Group controlId='formTitle' className='row'>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Test Name</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test Name'\r\n                      value={Test.name}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, name: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Total Marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='Total Marks'\r\n                      value={Test.totalMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, totalMarks: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>passing  marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='passing Marks'\r\n                      value={Test.passingMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, passingMarks: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                 \r\n\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Hours</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='time in  hours'\r\n                      value={Test.timeInHours}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInHours: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Minutes</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='time in  minutes'\r\n                      value={Test.timeInMinutes}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInMinutes: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                  \r\n                    <Form.Group as={Col} >\r\n                    <Form.Label>Level Of Test</Form.Label>\r\n                      <Form.Control as=\"select\" defaultValue=\"Choose...\" onChange={(event) =>\r\n                        setTest({ ...Test, testLevel: event.target.value})}>\r\n                        <option>Easy</option>\r\n                        <option>Intermediate</option>\r\n                        <option>Hard</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    {/* <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='level of test'\r\n                      value={Test.testLevel}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, testLevel: event.target.value})\r\n                      }\r\n                    /> */}\r\n                  </div>\r\n\r\n                  <div className='col-md-12'>\r\n                    <Form.Label>Test description</Form.Label>\r\n                    < JoditEditor\r\n                    ref={editor}\r\n                    value={Test.description}\r\n                    config={config}\r\n                    tabIndex={1} // tabIndex of textarea\r\n                    onBlur={handleDescripiton} // preferred to use only this option to update the content for performance reasons\r\n                  />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dashboards\\Dashboard.js",["1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257"],"import React from \"react\";\r\nimport {\r\n    MixedWidget1,\r\n    MixedWidget14,\r\n    ListsWidget9,\r\n    StatsWidget11,\r\n    StatsWidget12,\r\n    ListsWidget1,\r\n    AdvanceTablesWidget2,\r\n    AdvanceTablesWidget4,\r\n    ListsWidget3,\r\n    ListsWidget4,\r\n    ListsWidget8\r\n} from \"../widgets\";\r\nexport function Dashboard() {\r\n    return (<>\r\n            {/* <div className=\"row\">\r\n                <div className=\"col-lg-6 col-xxl-4\">\r\n                    <MixedWidget1 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n                <div className=\"col-lg-6 col-xxl-4\">\r\n                    <ListsWidget9 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n\r\n                <div className=\"col-lg-6 col-xxl-4\">\r\n                    <StatsWidget11 className=\"card-stretch card-stretch-half gutter-b\"/>\r\n                    <StatsWidget12 className=\"card-stretch card-stretch-half gutter-b\"/>\r\n                </div>\r\n\r\n                <div className=\"col-lg-6 col-xxl-4 order-1 order-xxl-1\">\r\n                    <ListsWidget1 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n                <div className=\"col-xxl-8 order-2 order-xxl-1\">\r\n                    <AdvanceTablesWidget2 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n                <div className=\"col-lg-6 col-xxl-4 order-1 order-xxl-2\">\r\n                    <ListsWidget3 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n                <div className=\"col-lg-6 col-xxl-4 order-1 order-xxl-2\">\r\n                    <ListsWidget4 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n                <div className=\"col-lg-12 col-xxl-4 order-1 order-xxl-2\">\r\n                    <ListsWidget8 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n            </div> */}\r\n            {/* <div className=\"row\">\r\n                <div className=\"col-lg-4\">\r\n                    <MixedWidget14 className=\"card-stretch gutter-b\" />\r\n                </div>\r\n                <div className=\"col-lg-8\">\r\n                    <AdvanceTablesWidget4 className=\"card-stretch gutter-b\" />\r\n                </div>\r\n            </div> */}\r\n    </>);\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Reviews.js",["1258","1259"],"import React , {useEffect ,useState } from 'react'\r\nimport { Row, Col,Card } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from 'react-router'\r\nexport default function Reviews(){\r\n  const [reviews , setReviews]  = useState()\r\n\r\n  const {courseId} = useParams()\r\n  useEffect(() => {\r\n    update()\r\n  }, [])\r\n  const update =() => {\r\n    axios.get('/api/course/getReviews/' + courseId).then((res)=>{\r\n      setReviews(res.data)\r\n    }).catch((res)=>{\r\n\r\n    })\r\n  }\r\n  \r\n   \r\n    return (\r\n        <Card classNameName='col-md-12'>\r\n        <Card.Header as='h5'>Student Reviews</Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col>\r\n            {reviews && reviews.length && reviews.map((element) => \r\n              <div style={{ width: '80%' }} key={element._id} >\r\n                <b><h3>{element.reviews.reviewBy[0].name}</h3></b>\r\n                <p>\r\n                  {element.reviews.review}\r\n                </p>\r\n               \r\n                <p>\r\n                  Created At : {element.reviews.createdAt.slice(0, 10)}\r\n                </p>\r\n              </div>\r\n            )\r\n            }\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\Notice.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\Card.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeExampleSimple.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classesForBranch.js",["1260","1261","1262","1263","1264","1265"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport input from 'util'\r\nimport { Button, Form  } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport ClassActionFormatter from '../components/classActionFormatterBranch'\r\nimport FeesChangeFormatter from '../components/feesChangeFormatterBranch'\r\n\r\nexport default function ClassesForBranch (props) {\r\n  const [Classes, setClasses] = useState(null)\r\n  //  const [singleClass, setSingleClass] = useState()\r\n\r\n  // const EditClassHandler = (id, name, ClassFees) => {\r\n  // }\r\n\r\n  // const DeleteClassHandler = id => {\r\n  //   if (window.confirm('do you really  want to delete')) {\r\n  //     axios\r\n  //       .delete('/api/branch/class/' + id)\r\n  //       .then(res => {\r\n  //         updateData()\r\n  //       })\r\n  //       .catch(() => {})\r\n  //   }\r\n  // }\r\n  \r\n  // const getCoursesHandler = id => {\r\n  //   props.history.push('/setting/Courses/' + id)\r\n  // }\r\n  const FormatDescription = cellContent => {\r\n    return <div dangerouslySetInnerHTML={{ __html: cellContent }}></div>\r\n  }\r\n\r\n  const feesFormatter = (cellContent, row, rowIndex) => {\r\n    return (\r\n      <>\r\n        {/* {cellContent} */}\r\n        <FeesChangeFormatter cellContent={cellContent} row={row} rowIndex={rowIndex}  updateFees={updateFees}/>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Class',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'description',\r\n      text: 'Description',\r\n      sort: true,\r\n      formatter: FormatDescription,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'fees',\r\n      text: 'fees',\r\n      sort: true,\r\n      formatter: feesFormatter\r\n      // formatExtraData: {\r\n      // },\r\n    },\r\n    // {\r\n    //   dataField: 'action',\r\n    //   text: 'Actions',\r\n    //   formatter: ClassActionFormatter,\r\n    //   formatExtraData: {\r\n    //     EditClassAction: EditClassHandler,\r\n    //     DeleteClassAction: DeleteClassHandler,\r\n    //     getCoursesAction: getCoursesHandler\r\n    //   },\r\n    //   classes: 'text-right pr-0',\r\n    //   headerClasses: 'text-right pr-3',\r\n    //   style: {\r\n    //     minWidth: '250px'\r\n    //   }\r\n    // }\r\n  ]\r\n  const updateData = () => {\r\n    debugger\r\n    axios\r\n      .get('/api/Branch/getBranchClasses')\r\n      .then(res => {\r\n        console.log('data here', res.data)\r\n        setClasses(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  const updateFees = (classId,requestedFees ,className , fees) => {\r\n    var data = {entityId : classId , requestedFees : requestedFees , requestType : \"ClassFee\",\r\n    entityName : className , fees : fees}\r\n    if(requestedFees == fees){\r\n        return \r\n    }\r\n    axios\r\n      .post('/api/Branch/setFees/',data )\r\n      .then(res => {})\r\n      .catch(error => {})\r\n    updateData()\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='All Class'>\r\n              {/* <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    props.history.push('/setting/classForm')\r\n                  }}\r\n                >\r\n                  New Class\r\n                </button>\r\n              </CardHeaderToolbar> */}\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Classes ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Classes}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps}\r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ExamQuestionsActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\components\\MenuActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\Header.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\quick-user.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\subheader.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\search\\SearchDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MaterialThemeProvider.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\QuestionOptionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu1.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Select.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\UserList.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentPdf.js",["1266"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Button, Form, Col } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport JoditEditor from 'jodit-react'\r\n\r\nexport default function ContentPdf() {\r\n  const [Content, setContent] = useState({\r\n    description: '',\r\n    title: '',\r\n    contentUrl: '',\r\n    type: 'pdf'\r\n  })\r\n  const { id, cid } = useParams()\r\n  const history = useHistory()\r\n\r\n  const saveData = async event => {\r\n    event.preventDefault()\r\n    debugger\r\n    let data = Content\r\n    let formData = new FormData()\r\n    for (var key in data) {\r\n      formData.append(key, data[key])\r\n    }\r\n    debugger\r\n    await axios\r\n      .post('api/course/SectionContent/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then(res => {\r\n        history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n  }\r\n\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  useEffect(() => {\r\n\r\n    if (cid) {\r\n      axios\r\n        .get('/api/course/sectionContent/' + cid)\r\n        .then(res => {\r\n          setContent(res.data)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [cid, id])\r\n  const editor = useRef(null)\r\n  const handleChangeDesripiton = e => {\r\n    debugger\r\n    // console.log(this.editor.current)\r\n    setContent({\r\n      ...Content,\r\n      description: e.target.innerHTML\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Add Content'></CardHeader>\r\n            <CardBody>\r\n              <Form onSubmit={saveData}>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>Tittle</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Content Name'\r\n                      value={Content.title}\r\n                      onChange={event =>\r\n                        setContent({ ...Content, title: event.target.value })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>Dscription</Form.Label>\r\n                    <div className='col-md-12'>\r\n                      <JoditEditor\r\n                        ref={editor}\r\n                        value={Content.description}\r\n                        config={config}\r\n                        tabIndex={1} // tabIndex of textarea\r\n                        onBlur={handleChangeDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>File upload </Form.Label>\r\n                    <Form.Control\r\n                      type='file'\r\n                      //   value={Content.file}\r\n                      onChange={event =>\r\n                        setContent({\r\n                          ...Content,\r\n                          file: event.target.files[0]\r\n                        })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Button\r\n                  variant='primary'\r\n                  type='button'\r\n                  onClick={() => {\r\n                    if (history.length > 1) {\r\n                      // this will take you back if there is history\r\n                      history.goBack()\r\n                    }\r\n                  }}\r\n                >\r\n                  cancel\r\n                </Button>\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\question.js",["1267"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\Layout.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\HTMLClassService.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\toggle.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\UserNotificationsDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\Courses.js",["1268"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport CourseActionFormatter from '../components/CourseActionFormatter'\r\nimport CourseProfileFormater from '../components/CourseProfileFormater'\r\n\r\n\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport default function Courses (props) {\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n  const EditHandler = cid => {\r\n    history.push('/setting/CourseForm/' + id + '/' + cid)\r\n  }\r\n\r\n  const DeleteHandler = id => {\r\n    debugger;\r\n    if (window.confirm('do you really  want to delete')) {\r\n        axios.delete('/api/course/course/'+ id).then(res => {}).catch(() => {})\r\n        updateData()\r\n    }\r\n  }\r\n\r\n  const CourseContenHandler = id =>{\r\n    debugger;\r\n    history.push(\"/setting/course/\"+id+\"/sections\")\r\n\r\n  }\r\n  const AddCourseTestHandler = id =>{\r\n    history.push(\"/Test/CourseTest/\" + id + \"/tests\")\r\n  }\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: 'courses._id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'courses.title',\r\n      text: 'Course',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'courses.Description',\r\n      text: 'Description',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'courses.posterImageUrl',\r\n      text: 'Image',\r\n      formatter: CourseProfileFormater,     \r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: CourseActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        GetSectionsAction:CourseContenHandler,\r\n        AddCourseTestAction : AddCourseTestHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '220px'\r\n      }\r\n    }\r\n  ]\r\n\r\n  // const [Courses, setCourse] = useState([])\r\n  const [Class, setClass] = useState([])\r\n  const updateData = () => {\r\n    debugger\r\n    axios\r\n      .get('/api/course/courseList/' + id)\r\n      .then(res => {\r\n        debugger\r\n        console.log('data here 1' , res.data)\r\n        setClass(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [id])\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title={`Course list -> ${Class && Class.length > 0 && Class[0].name}`}>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/setting/CourseForm/' + id)\r\n                  }}\r\n                >\r\n                  New course\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n            {Class && Class.length ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Class}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps}\r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\courseblocks.js",["1269"],"import React from 'react'\r\nimport { Card, Row, Col, Button } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function CourseBlocks ({ item }) {\r\n  const history = useHistory()\r\n  return (\r\n    <>\r\n      <Col md={4} sm={12}>\r\n        <Card>\r\n          {console.log(item)}\r\n          <Card.Body>\r\n            <Card.Title>\r\n              Class Name :{item.classes.name}{' '}\r\n              <span\r\n                style={{ float: 'right' }}\r\n                className='badge badge-secondary'\r\n              >\r\n                {}\r\n              </span>\r\n            </Card.Title>\r\n            <Card.Text></Card.Text>\r\n            <Card.Text>Course Name : {item.courses.title}</Card.Text>\r\n            <Card.Text>\r\n              Description :{' '}\r\n              <div\r\n                dangerouslySetInnerHTML={{ __html: item.courses.Description }}\r\n              ></div>\r\n            </Card.Text>\r\n            <div>\r\n              <Card.Text>Ratings : {item.courses.numberOfRatings}</Card.Text>\r\n              <Card.Text>\r\n                Student Enrolled : {item.courses.numberOfStudent}\r\n              </Card.Text>\r\n              <Card.Text>\r\n\r\n                {/* Overview : <div  dangerouslySetInnerHTML={{    __html: item.courses.overview }}></div> */}\r\n              </Card.Text>\r\n              <Card.Text>Sections : {item.count}</Card.Text>\r\n            </div>\r\n            <img src={`${window.$apihost }/uploads/CourseProfile/`+item.courses.posterImageUrl} alt ={item.courses.title} width={\"100%\"} className=\"p-5\"></img>\r\n\r\n            <Button\r\n              variant='primary'\r\n              className=\"mr-10\"\r\n              onClick={() => {\r\n                history.push(`/ecourse/courseOverview/${item.courses._id}`)\r\n              }}\r\n            >\r\n              Details\r\n            </Button>\r\n            <Button\r\n              variant='primary'\r\n              className=\"mr-10\"\r\n\r\n              onClick={() => {\r\n                history.push(`/setting/course/${item.courses._id}/sections`)\r\n              }}\r\n            >\r\n              Content\r\n            </Button>\r\n            <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push(`/Test/CourseTest/${item.courses._id}/tests`)\r\n              }}\r\n            >\r\n              Tests\r\n            </Button>\r\n            <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push(`/setting/course/${item.courses._id}/showCourse`)\r\n              }}\r\n            >\r\n              Show\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget9.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Input.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownCustomToggler.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\questionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenu.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ExamActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage4.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\FeeManagement\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\content.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\FeeManagement.js",["1270","1271","1272","1273","1274","1275","1276","1277","1278"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nexport default function feeManagement () {\r\n  \r\n\r\n \r\n  return (\r\n    <div>\r\n    Fee Management dsfadafa\r\n      \r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu4.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\student.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\offcanvas\\QuickUser.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestQuestions.js",["1279"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\card.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\AnimateLoading.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header-mobile\\HeaderMobile.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\quick-panel.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\scrolltop.js",[],{"ruleId":"1280","severity":1,"message":"1281","line":2,"column":10,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":18},{"ruleId":"1284","replacedBy":"1285"},{"ruleId":"1286","replacedBy":"1287"},{"ruleId":"1280","severity":1,"message":"1288","line":2,"column":27,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":32},{"ruleId":"1280","severity":1,"message":"1289","line":8,"column":3,"nodeType":"1282","messageId":"1283","endLine":8,"endColumn":21},{"ruleId":"1284","replacedBy":"1290"},{"ruleId":"1286","replacedBy":"1291"},{"ruleId":"1284","replacedBy":"1292"},{"ruleId":"1286","replacedBy":"1293"},{"ruleId":"1284","replacedBy":"1294"},{"ruleId":"1286","replacedBy":"1295"},{"ruleId":"1296","severity":1,"message":"1297","line":46,"column":32,"nodeType":"1298","messageId":"1299","endLine":46,"endColumn":34},{"ruleId":"1284","replacedBy":"1300"},{"ruleId":"1286","replacedBy":"1301"},{"ruleId":"1280","severity":1,"message":"1302","line":13,"column":9,"nodeType":"1282","messageId":"1283","endLine":13,"endColumn":28},{"ruleId":"1296","severity":1,"message":"1297","line":61,"column":36,"nodeType":"1298","messageId":"1299","endLine":61,"endColumn":38},{"ruleId":"1296","severity":1,"message":"1303","line":66,"column":44,"nodeType":"1298","messageId":"1299","endLine":66,"endColumn":46},{"ruleId":"1280","severity":1,"message":"1304","line":48,"column":9,"nodeType":"1282","messageId":"1283","endLine":48,"endColumn":23},{"ruleId":"1305","severity":1,"message":"1306","line":117,"column":4,"nodeType":"1307","endLine":117,"endColumn":8,"suggestions":"1308"},{"ruleId":"1280","severity":1,"message":"1309","line":1,"column":17,"nodeType":"1282","messageId":"1283","endLine":1,"endColumn":26},{"ruleId":"1280","severity":1,"message":"1310","line":2,"column":10,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":19},{"ruleId":"1280","severity":1,"message":"1311","line":34,"column":19,"nodeType":"1282","messageId":"1283","endLine":34,"endColumn":29},{"ruleId":"1284","replacedBy":"1312"},{"ruleId":"1286","replacedBy":"1313"},{"ruleId":"1280","severity":1,"message":"1314","line":27,"column":12,"nodeType":"1282","messageId":"1283","endLine":27,"endColumn":14},{"ruleId":"1284","replacedBy":"1315"},{"ruleId":"1286","replacedBy":"1316"},{"ruleId":"1305","severity":1,"message":"1306","line":124,"column":6,"nodeType":"1307","endLine":124,"endColumn":8,"suggestions":"1317"},{"ruleId":"1280","severity":1,"message":"1318","line":17,"column":10,"nodeType":"1282","messageId":"1283","endLine":17,"endColumn":15},{"ruleId":"1280","severity":1,"message":"1319","line":17,"column":17,"nodeType":"1282","messageId":"1283","endLine":17,"endColumn":27},{"ruleId":"1305","severity":1,"message":"1306","line":128,"column":6,"nodeType":"1307","endLine":128,"endColumn":8,"suggestions":"1320"},{"ruleId":"1296","severity":1,"message":"1303","line":33,"column":20,"nodeType":"1298","messageId":"1299","endLine":33,"endColumn":22},{"ruleId":"1296","severity":1,"message":"1303","line":36,"column":20,"nodeType":"1298","messageId":"1299","endLine":36,"endColumn":22},{"ruleId":"1296","severity":1,"message":"1303","line":43,"column":21,"nodeType":"1298","messageId":"1299","endLine":43,"endColumn":23},{"ruleId":"1296","severity":1,"message":"1303","line":46,"column":22,"nodeType":"1298","messageId":"1299","endLine":46,"endColumn":24},{"ruleId":"1280","severity":1,"message":"1321","line":2,"column":18,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":22},{"ruleId":"1280","severity":1,"message":"1322","line":4,"column":10,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":20},{"ruleId":"1280","severity":1,"message":"1323","line":4,"column":22,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":26},{"ruleId":"1280","severity":1,"message":"1324","line":4,"column":28,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":33},{"ruleId":"1280","severity":1,"message":"1325","line":5,"column":10,"nodeType":"1282","messageId":"1283","endLine":5,"endColumn":24},{"ruleId":"1280","severity":1,"message":"1326","line":6,"column":10,"nodeType":"1282","messageId":"1283","endLine":6,"endColumn":31},{"ruleId":"1280","severity":1,"message":"1327","line":7,"column":10,"nodeType":"1282","messageId":"1283","endLine":7,"endColumn":31},{"ruleId":"1296","severity":1,"message":"1297","line":44,"column":31,"nodeType":"1298","messageId":"1299","endLine":44,"endColumn":33},{"ruleId":"1328","severity":1,"message":"1329","line":9,"column":9,"nodeType":"1330","messageId":"1299","endLine":9,"endColumn":17},{"ruleId":"1280","severity":1,"message":"1331","line":7,"column":3,"nodeType":"1282","messageId":"1283","endLine":7,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1332","line":26,"column":6,"nodeType":"1307","endLine":26,"endColumn":8,"suggestions":"1333"},{"ruleId":"1280","severity":1,"message":"1334","line":2,"column":16,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":19},{"ruleId":"1296","severity":1,"message":"1303","line":18,"column":69,"nodeType":"1298","messageId":"1299","endLine":18,"endColumn":71},{"ruleId":"1335","severity":1,"message":"1336","line":30,"column":9,"nodeType":"1337","endLine":33,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":44,"column":9,"nodeType":"1337","endLine":47,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":105,"column":1,"nodeType":"1337","endLine":109,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":119,"column":9,"nodeType":"1337","endLine":123,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":134,"column":11,"nodeType":"1337","endLine":137,"endColumn":12},{"ruleId":"1335","severity":1,"message":"1336","line":149,"column":73,"nodeType":"1337","endLine":156,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":166,"column":73,"nodeType":"1337","endLine":170,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":180,"column":73,"nodeType":"1337","endLine":184,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":195,"column":15,"nodeType":"1337","endLine":195,"endColumn":80},{"ruleId":"1335","severity":1,"message":"1336","line":200,"column":15,"nodeType":"1337","endLine":203,"endColumn":16},{"ruleId":"1335","severity":1,"message":"1336","line":218,"column":9,"nodeType":"1337","endLine":222,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":231,"column":41,"nodeType":"1337","endLine":238,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":249,"column":15,"nodeType":"1337","endLine":249,"endColumn":80},{"ruleId":"1280","severity":1,"message":"1338","line":4,"column":8,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":14},{"ruleId":"1280","severity":1,"message":"1334","line":6,"column":35,"nodeType":"1282","messageId":"1283","endLine":6,"endColumn":38},{"ruleId":"1339","severity":1,"message":"1340","line":143,"column":51,"nodeType":"1341","messageId":"1342","endLine":143,"endColumn":53},{"ruleId":"1280","severity":1,"message":"1281","line":2,"column":9,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":17},{"ruleId":"1280","severity":1,"message":"1343","line":3,"column":10,"nodeType":"1282","messageId":"1283","endLine":3,"endColumn":13},{"ruleId":"1280","severity":1,"message":"1344","line":3,"column":15,"nodeType":"1282","messageId":"1283","endLine":3,"endColumn":25},{"ruleId":"1280","severity":1,"message":"1345","line":41,"column":15,"nodeType":"1282","messageId":"1283","endLine":41,"endColumn":22},{"ruleId":"1280","severity":1,"message":"1346","line":11,"column":8,"nodeType":"1282","messageId":"1283","endLine":11,"endColumn":11},{"ruleId":"1280","severity":1,"message":"1347","line":21,"column":3,"nodeType":"1282","messageId":"1283","endLine":21,"endColumn":6},{"ruleId":"1280","severity":1,"message":"1348","line":25,"column":3,"nodeType":"1282","messageId":"1283","endLine":25,"endColumn":9},{"ruleId":"1280","severity":1,"message":"1321","line":27,"column":3,"nodeType":"1282","messageId":"1283","endLine":27,"endColumn":7},{"ruleId":"1280","severity":1,"message":"1349","line":42,"column":10,"nodeType":"1282","messageId":"1283","endLine":42,"endColumn":20},{"ruleId":"1280","severity":1,"message":"1350","line":54,"column":9,"nodeType":"1282","messageId":"1283","endLine":54,"endColumn":15},{"ruleId":"1296","severity":1,"message":"1303","line":111,"column":69,"nodeType":"1298","messageId":"1299","endLine":111,"endColumn":71},{"ruleId":"1296","severity":1,"message":"1303","line":113,"column":56,"nodeType":"1298","messageId":"1299","endLine":113,"endColumn":58},{"ruleId":"1305","severity":1,"message":"1351","line":120,"column":6,"nodeType":"1307","endLine":120,"endColumn":25,"suggestions":"1352"},{"ruleId":"1305","severity":1,"message":"1353","line":126,"column":7,"nodeType":"1307","endLine":126,"endColumn":14,"suggestions":"1354"},{"ruleId":"1296","severity":1,"message":"1303","line":131,"column":19,"nodeType":"1298","messageId":"1299","endLine":131,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1356","line":140,"column":5,"nodeType":"1282","messageId":"1357","endLine":140,"endColumn":6},{"ruleId":"1358","severity":1,"message":"1359","line":154,"column":31,"nodeType":"1282","messageId":"1360","endLine":154,"endColumn":37},{"ruleId":"1361","severity":1,"message":"1362","line":169,"column":6,"nodeType":"1363","endLine":169,"endColumn":20},{"ruleId":"1358","severity":1,"message":"1359","line":298,"column":56,"nodeType":"1282","messageId":"1360","endLine":298,"endColumn":62},{"ruleId":"1361","severity":1,"message":"1362","line":303,"column":31,"nodeType":"1363","endLine":303,"endColumn":45},{"ruleId":"1364","severity":1,"message":"1365","line":332,"column":62,"nodeType":"1366","messageId":"1367","endLine":332,"endColumn":64},{"ruleId":"1364","severity":1,"message":"1365","line":359,"column":109,"nodeType":"1366","messageId":"1367","endLine":359,"endColumn":111},{"ruleId":"1364","severity":1,"message":"1365","line":359,"column":314,"nodeType":"1366","messageId":"1367","endLine":359,"endColumn":316},{"ruleId":"1364","severity":1,"message":"1365","line":364,"column":75,"nodeType":"1366","messageId":"1367","endLine":364,"endColumn":77},{"ruleId":"1364","severity":1,"message":"1365","line":364,"column":97,"nodeType":"1366","messageId":"1367","endLine":364,"endColumn":99},{"ruleId":"1364","severity":1,"message":"1365","line":383,"column":32,"nodeType":"1366","messageId":"1367","endLine":383,"endColumn":34},{"ruleId":"1368","severity":1,"message":"1369","line":3,"column":1,"nodeType":"1370","endLine":82,"endColumn":3},{"ruleId":"1280","severity":1,"message":"1281","line":2,"column":10,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1371","line":21,"column":17,"nodeType":"1282","messageId":"1283","endLine":21,"endColumn":25},{"ruleId":"1280","severity":1,"message":"1331","line":3,"column":10,"nodeType":"1282","messageId":"1283","endLine":3,"endColumn":20},{"ruleId":"1364","severity":1,"message":"1365","line":39,"column":22,"nodeType":"1366","messageId":"1367","endLine":39,"endColumn":24},{"ruleId":"1364","severity":1,"message":"1365","line":39,"column":37,"nodeType":"1366","messageId":"1367","endLine":39,"endColumn":39},{"ruleId":"1364","severity":1,"message":"1365","line":142,"column":52,"nodeType":"1366","messageId":"1367","endLine":142,"endColumn":54},{"ruleId":"1364","severity":1,"message":"1365","line":161,"column":17,"nodeType":"1366","messageId":"1367","endLine":161,"endColumn":19},{"ruleId":"1284","replacedBy":"1372"},{"ruleId":"1286","replacedBy":"1373"},{"ruleId":"1280","severity":1,"message":"1374","line":30,"column":7,"nodeType":"1282","messageId":"1283","endLine":30,"endColumn":14},{"ruleId":"1296","severity":1,"message":"1303","line":56,"column":24,"nodeType":"1298","messageId":"1299","endLine":56,"endColumn":26},{"ruleId":"1280","severity":1,"message":"1375","line":58,"column":9,"nodeType":"1282","messageId":"1283","endLine":58,"endColumn":19},{"ruleId":"1280","severity":1,"message":"1376","line":14,"column":15,"nodeType":"1282","messageId":"1283","endLine":14,"endColumn":22},{"ruleId":"1280","severity":1,"message":"1377","line":9,"column":3,"nodeType":"1282","messageId":"1283","endLine":9,"endColumn":20},{"ruleId":"1280","severity":1,"message":"1314","line":11,"column":11,"nodeType":"1282","messageId":"1283","endLine":11,"endColumn":13},{"ruleId":"1280","severity":1,"message":"1378","line":4,"column":29,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":38},{"ruleId":"1280","severity":1,"message":"1377","line":9,"column":3,"nodeType":"1282","messageId":"1283","endLine":9,"endColumn":20},{"ruleId":"1296","severity":1,"message":"1303","line":53,"column":27,"nodeType":"1298","messageId":"1299","endLine":53,"endColumn":29},{"ruleId":"1280","severity":1,"message":"1321","line":2,"column":18,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":22},{"ruleId":"1280","severity":1,"message":"1347","line":2,"column":46,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":49},{"ruleId":"1280","severity":1,"message":"1334","line":2,"column":51,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":54},{"ruleId":"1280","severity":1,"message":"1379","line":8,"column":8,"nodeType":"1282","messageId":"1283","endLine":8,"endColumn":24},{"ruleId":"1280","severity":1,"message":"1380","line":14,"column":10,"nodeType":"1282","messageId":"1283","endLine":14,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1381","line":14,"column":20,"nodeType":"1282","messageId":"1283","endLine":14,"endColumn":31},{"ruleId":"1280","severity":1,"message":"1382","line":18,"column":9,"nodeType":"1282","messageId":"1283","endLine":18,"endColumn":21},{"ruleId":"1296","severity":1,"message":"1297","line":19,"column":18,"nodeType":"1298","messageId":"1299","endLine":19,"endColumn":20},{"ruleId":"1284","replacedBy":"1383"},{"ruleId":"1286","replacedBy":"1384"},{"ruleId":"1280","severity":1,"message":"1309","line":1,"column":27,"nodeType":"1282","messageId":"1283","endLine":1,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1306","line":128,"column":6,"nodeType":"1307","endLine":128,"endColumn":8,"suggestions":"1385"},{"ruleId":"1305","severity":1,"message":"1306","line":116,"column":10,"nodeType":"1307","endLine":116,"endColumn":12,"suggestions":"1386"},{"ruleId":"1280","severity":1,"message":"1387","line":5,"column":8,"nodeType":"1282","messageId":"1283","endLine":5,"endColumn":11},{"ruleId":"1280","severity":1,"message":"1388","line":6,"column":10,"nodeType":"1282","messageId":"1283","endLine":6,"endColumn":23},{"ruleId":"1296","severity":1,"message":"1303","line":18,"column":34,"nodeType":"1298","messageId":"1299","endLine":18,"endColumn":36},{"ruleId":"1296","severity":1,"message":"1303","line":33,"column":34,"nodeType":"1298","messageId":"1299","endLine":33,"endColumn":36},{"ruleId":"1335","severity":1,"message":"1336","line":31,"column":9,"nodeType":"1337","endLine":34,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":50,"column":9,"nodeType":"1337","endLine":53,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":65,"column":9,"nodeType":"1337","endLine":69,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":79,"column":75,"nodeType":"1337","endLine":83,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":95,"column":11,"nodeType":"1337","endLine":98,"endColumn":12},{"ruleId":"1335","severity":1,"message":"1336","line":111,"column":12,"nodeType":"1337","endLine":118,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":128,"column":73,"nodeType":"1337","endLine":132,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":142,"column":75,"nodeType":"1337","endLine":146,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":157,"column":15,"nodeType":"1337","endLine":157,"endColumn":80},{"ruleId":"1335","severity":1,"message":"1336","line":162,"column":15,"nodeType":"1337","endLine":165,"endColumn":16},{"ruleId":"1335","severity":1,"message":"1336","line":180,"column":39,"nodeType":"1337","endLine":184,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":193,"column":41,"nodeType":"1337","endLine":200,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":211,"column":15,"nodeType":"1337","endLine":211,"endColumn":80},{"ruleId":"1335","severity":1,"message":"1336","line":224,"column":11,"nodeType":"1337","endLine":227,"endColumn":12},{"ruleId":"1335","severity":1,"message":"1336","line":271,"column":70,"nodeType":"1337","endLine":275,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":286,"column":15,"nodeType":"1337","endLine":286,"endColumn":80},{"ruleId":"1335","severity":1,"message":"1336","line":296,"column":70,"nodeType":"1337","endLine":300,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":311,"column":15,"nodeType":"1337","endLine":311,"endColumn":80},{"ruleId":"1335","severity":1,"message":"1336","line":321,"column":77,"nodeType":"1337","endLine":325,"endColumn":12},{"ruleId":"1335","severity":1,"message":"1336","line":336,"column":17,"nodeType":"1337","endLine":339,"endColumn":18},{"ruleId":"1335","severity":1,"message":"1336","line":351,"column":11,"nodeType":"1337","endLine":355,"endColumn":12},{"ruleId":"1335","severity":1,"message":"1336","line":366,"column":17,"nodeType":"1337","endLine":369,"endColumn":18},{"ruleId":"1335","severity":1,"message":"1336","line":379,"column":11,"nodeType":"1337","endLine":383,"endColumn":12},{"ruleId":"1335","severity":1,"message":"1336","line":394,"column":17,"nodeType":"1337","endLine":397,"endColumn":18},{"ruleId":"1335","severity":1,"message":"1336","line":408,"column":10,"nodeType":"1337","endLine":412,"endColumn":12},{"ruleId":"1335","severity":1,"message":"1336","line":423,"column":17,"nodeType":"1337","endLine":426,"endColumn":18},{"ruleId":"1335","severity":1,"message":"1336","line":437,"column":11,"nodeType":"1337","endLine":440,"endColumn":12},{"ruleId":"1335","severity":1,"message":"1336","line":453,"column":56,"nodeType":"1337","endLine":457,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":468,"column":15,"nodeType":"1337","endLine":468,"endColumn":80},{"ruleId":"1280","severity":1,"message":"1389","line":5,"column":9,"nodeType":"1282","messageId":"1283","endLine":5,"endColumn":21},{"ruleId":"1280","severity":1,"message":"1390","line":2,"column":17,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":25},{"ruleId":"1280","severity":1,"message":"1281","line":2,"column":10,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1377","line":9,"column":3,"nodeType":"1282","messageId":"1283","endLine":9,"endColumn":20},{"ruleId":"1280","severity":1,"message":"1391","line":4,"column":15,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1314","line":12,"column":11,"nodeType":"1282","messageId":"1283","endLine":12,"endColumn":13},{"ruleId":"1296","severity":1,"message":"1297","line":51,"column":36,"nodeType":"1298","messageId":"1299","endLine":51,"endColumn":38},{"ruleId":"1296","severity":1,"message":"1303","line":58,"column":38,"nodeType":"1298","messageId":"1299","endLine":58,"endColumn":40},{"ruleId":"1280","severity":1,"message":"1377","line":9,"column":3,"nodeType":"1282","messageId":"1283","endLine":9,"endColumn":20},{"ruleId":"1280","severity":1,"message":"1392","line":14,"column":8,"nodeType":"1282","messageId":"1283","endLine":14,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1393","line":15,"column":10,"nodeType":"1282","messageId":"1283","endLine":15,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1391","line":4,"column":31,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":34},{"ruleId":"1280","severity":1,"message":"1318","line":21,"column":10,"nodeType":"1282","messageId":"1283","endLine":21,"endColumn":15},{"ruleId":"1280","severity":1,"message":"1319","line":21,"column":17,"nodeType":"1282","messageId":"1283","endLine":21,"endColumn":27},{"ruleId":"1280","severity":1,"message":"1394","line":30,"column":7,"nodeType":"1282","messageId":"1283","endLine":30,"endColumn":24},{"ruleId":"1296","severity":1,"message":"1303","line":42,"column":11,"nodeType":"1298","messageId":"1299","endLine":42,"endColumn":13},{"ruleId":"1296","severity":1,"message":"1303","line":66,"column":15,"nodeType":"1298","messageId":"1299","endLine":66,"endColumn":17},{"ruleId":"1296","severity":1,"message":"1303","line":90,"column":21,"nodeType":"1298","messageId":"1299","endLine":90,"endColumn":23},{"ruleId":"1280","severity":1,"message":"1391","line":4,"column":30,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":33},{"ruleId":"1280","severity":1,"message":"1395","line":9,"column":13,"nodeType":"1282","messageId":"1283","endLine":9,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1396","line":45,"column":9,"nodeType":"1282","messageId":"1283","endLine":45,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1331","line":7,"column":3,"nodeType":"1282","messageId":"1283","endLine":7,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1332","line":27,"column":6,"nodeType":"1307","endLine":27,"endColumn":8,"suggestions":"1397"},{"ruleId":"1296","severity":1,"message":"1303","line":51,"column":53,"nodeType":"1298","messageId":"1299","endLine":51,"endColumn":55},{"ruleId":"1280","severity":1,"message":"1281","line":2,"column":10,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1398","line":21,"column":8,"nodeType":"1282","messageId":"1283","endLine":21,"endColumn":21},{"ruleId":"1280","severity":1,"message":"1387","line":5,"column":8,"nodeType":"1282","messageId":"1283","endLine":5,"endColumn":11},{"ruleId":"1280","severity":1,"message":"1388","line":7,"column":10,"nodeType":"1282","messageId":"1283","endLine":7,"endColumn":23},{"ruleId":"1296","severity":1,"message":"1303","line":67,"column":75,"nodeType":"1298","messageId":"1299","endLine":67,"endColumn":77},{"ruleId":"1296","severity":1,"message":"1303","line":69,"column":55,"nodeType":"1298","messageId":"1299","endLine":69,"endColumn":57},{"ruleId":"1399","severity":1,"message":"1400","line":216,"column":19,"nodeType":"1337","endLine":221,"endColumn":21},{"ruleId":"1280","severity":1,"message":"1321","line":2,"column":18,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":22},{"ruleId":"1280","severity":1,"message":"1347","line":2,"column":46,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":49},{"ruleId":"1280","severity":1,"message":"1334","line":2,"column":51,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":54},{"ruleId":"1280","severity":1,"message":"1379","line":8,"column":8,"nodeType":"1282","messageId":"1283","endLine":8,"endColumn":24},{"ruleId":"1280","severity":1,"message":"1380","line":14,"column":10,"nodeType":"1282","messageId":"1283","endLine":14,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1381","line":14,"column":20,"nodeType":"1282","messageId":"1283","endLine":14,"endColumn":31},{"ruleId":"1280","severity":1,"message":"1382","line":18,"column":9,"nodeType":"1282","messageId":"1283","endLine":18,"endColumn":21},{"ruleId":"1296","severity":1,"message":"1297","line":19,"column":18,"nodeType":"1298","messageId":"1299","endLine":19,"endColumn":20},{"ruleId":"1280","severity":1,"message":"1377","line":9,"column":3,"nodeType":"1282","messageId":"1283","endLine":9,"endColumn":20},{"ruleId":"1280","severity":1,"message":"1392","line":14,"column":8,"nodeType":"1282","messageId":"1283","endLine":14,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1393","line":15,"column":10,"nodeType":"1282","messageId":"1283","endLine":15,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1310","line":2,"column":10,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":19},{"ruleId":"1280","severity":1,"message":"1401","line":7,"column":10,"nodeType":"1282","messageId":"1283","endLine":7,"endColumn":15},{"ruleId":"1280","severity":1,"message":"1338","line":7,"column":23,"nodeType":"1282","messageId":"1283","endLine":7,"endColumn":29},{"ruleId":"1280","severity":1,"message":"1402","line":10,"column":10,"nodeType":"1282","messageId":"1283","endLine":10,"endColumn":15},{"ruleId":"1280","severity":1,"message":"1403","line":11,"column":10,"nodeType":"1282","messageId":"1283","endLine":11,"endColumn":17},{"ruleId":"1280","severity":1,"message":"1404","line":24,"column":19,"nodeType":"1282","messageId":"1283","endLine":24,"endColumn":29},{"ruleId":"1280","severity":1,"message":"1387","line":5,"column":8,"nodeType":"1282","messageId":"1283","endLine":5,"endColumn":11},{"ruleId":"1280","severity":1,"message":"1388","line":6,"column":10,"nodeType":"1282","messageId":"1283","endLine":6,"endColumn":23},{"ruleId":"1280","severity":1,"message":"1405","line":27,"column":10,"nodeType":"1282","messageId":"1283","endLine":27,"endColumn":23},{"ruleId":"1280","severity":1,"message":"1406","line":27,"column":26,"nodeType":"1282","messageId":"1283","endLine":27,"endColumn":42},{"ruleId":"1296","severity":1,"message":"1303","line":70,"column":16,"nodeType":"1298","messageId":"1299","endLine":70,"endColumn":18},{"ruleId":"1296","severity":1,"message":"1303","line":78,"column":15,"nodeType":"1298","messageId":"1299","endLine":78,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1407","line":113,"column":6,"nodeType":"1307","endLine":113,"endColumn":11,"suggestions":"1408"},{"ruleId":"1296","severity":1,"message":"1303","line":123,"column":20,"nodeType":"1298","messageId":"1299","endLine":123,"endColumn":22},{"ruleId":"1399","severity":1,"message":"1400","line":203,"column":19,"nodeType":"1337","endLine":208,"endColumn":21},{"ruleId":"1280","severity":1,"message":"1374","line":6,"column":9,"nodeType":"1282","messageId":"1283","endLine":6,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1409","line":10,"column":10,"nodeType":"1282","messageId":"1283","endLine":10,"endColumn":14},{"ruleId":"1280","severity":1,"message":"1309","line":1,"column":17,"nodeType":"1282","messageId":"1283","endLine":1,"endColumn":26},{"ruleId":"1280","severity":1,"message":"1390","line":1,"column":28,"nodeType":"1282","messageId":"1283","endLine":1,"endColumn":36},{"ruleId":"1280","severity":1,"message":"1410","line":3,"column":13,"nodeType":"1282","messageId":"1283","endLine":3,"endColumn":17},{"ruleId":"1280","severity":1,"message":"1281","line":5,"column":10,"nodeType":"1282","messageId":"1283","endLine":5,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1411","line":5,"column":20,"nodeType":"1282","messageId":"1283","endLine":5,"endColumn":26},{"ruleId":"1280","severity":1,"message":"1288","line":5,"column":28,"nodeType":"1282","messageId":"1283","endLine":5,"endColumn":33},{"ruleId":"1305","severity":1,"message":"1412","line":44,"column":6,"nodeType":"1307","endLine":44,"endColumn":8,"suggestions":"1413"},{"ruleId":"1280","severity":1,"message":"1318","line":20,"column":10,"nodeType":"1282","messageId":"1283","endLine":20,"endColumn":15},{"ruleId":"1280","severity":1,"message":"1319","line":20,"column":17,"nodeType":"1282","messageId":"1283","endLine":20,"endColumn":27},{"ruleId":"1280","severity":1,"message":"1414","line":3,"column":5,"nodeType":"1282","messageId":"1283","endLine":3,"endColumn":17},{"ruleId":"1280","severity":1,"message":"1415","line":4,"column":5,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1416","line":5,"column":5,"nodeType":"1282","messageId":"1283","endLine":5,"endColumn":17},{"ruleId":"1280","severity":1,"message":"1417","line":6,"column":5,"nodeType":"1282","messageId":"1283","endLine":6,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1418","line":7,"column":5,"nodeType":"1282","messageId":"1283","endLine":7,"endColumn":18},{"ruleId":"1280","severity":1,"message":"1419","line":8,"column":5,"nodeType":"1282","messageId":"1283","endLine":8,"endColumn":17},{"ruleId":"1280","severity":1,"message":"1420","line":9,"column":5,"nodeType":"1282","messageId":"1283","endLine":9,"endColumn":25},{"ruleId":"1280","severity":1,"message":"1421","line":10,"column":5,"nodeType":"1282","messageId":"1283","endLine":10,"endColumn":25},{"ruleId":"1280","severity":1,"message":"1422","line":11,"column":5,"nodeType":"1282","messageId":"1283","endLine":11,"endColumn":17},{"ruleId":"1280","severity":1,"message":"1423","line":12,"column":5,"nodeType":"1282","messageId":"1283","endLine":12,"endColumn":17},{"ruleId":"1280","severity":1,"message":"1424","line":13,"column":5,"nodeType":"1282","messageId":"1283","endLine":13,"endColumn":17},{"ruleId":"1280","severity":1,"message":"1331","line":6,"column":3,"nodeType":"1282","messageId":"1283","endLine":6,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1332","line":14,"column":6,"nodeType":"1307","endLine":14,"endColumn":8,"suggestions":"1425"},{"ruleId":"1280","severity":1,"message":"1426","line":3,"column":8,"nodeType":"1282","messageId":"1283","endLine":3,"endColumn":13},{"ruleId":"1280","severity":1,"message":"1348","line":4,"column":10,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1321","line":4,"column":18,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":22},{"ruleId":"1280","severity":1,"message":"1377","line":9,"column":3,"nodeType":"1282","messageId":"1283","endLine":9,"endColumn":20},{"ruleId":"1280","severity":1,"message":"1427","line":18,"column":8,"nodeType":"1282","messageId":"1283","endLine":18,"endColumn":28},{"ruleId":"1296","severity":1,"message":"1303","line":132,"column":22,"nodeType":"1298","messageId":"1299","endLine":132,"endColumn":24},{"ruleId":"1280","severity":1,"message":"1377","line":9,"column":3,"nodeType":"1282","messageId":"1283","endLine":9,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1428","line":26,"column":6,"nodeType":"1307","endLine":26,"endColumn":10,"suggestions":"1429"},{"ruleId":"1305","severity":1,"message":"1306","line":124,"column":6,"nodeType":"1307","endLine":124,"endColumn":10,"suggestions":"1430"},{"ruleId":"1280","severity":1,"message":"1334","line":2,"column":16,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":19},{"ruleId":"1280","severity":1,"message":"1390","line":1,"column":17,"nodeType":"1282","messageId":"1283","endLine":1,"endColumn":25},{"ruleId":"1280","severity":1,"message":"1431","line":1,"column":27,"nodeType":"1282","messageId":"1283","endLine":1,"endColumn":33},{"ruleId":"1280","severity":1,"message":"1309","line":1,"column":35,"nodeType":"1282","messageId":"1283","endLine":1,"endColumn":44},{"ruleId":"1280","severity":1,"message":"1348","line":2,"column":10,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":16},{"ruleId":"1280","severity":1,"message":"1321","line":2,"column":18,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":22},{"ruleId":"1280","severity":1,"message":"1432","line":2,"column":24,"nodeType":"1282","messageId":"1283","endLine":2,"endColumn":28},{"ruleId":"1280","severity":1,"message":"1433","line":3,"column":8,"nodeType":"1282","messageId":"1283","endLine":3,"endColumn":13},{"ruleId":"1280","severity":1,"message":"1331","line":4,"column":10,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":20},{"ruleId":"1280","severity":1,"message":"1310","line":4,"column":22,"nodeType":"1282","messageId":"1283","endLine":4,"endColumn":31},{"ruleId":"1305","severity":1,"message":"1306","line":115,"column":10,"nodeType":"1307","endLine":115,"endColumn":12,"suggestions":"1434"},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1435"],"no-negated-in-lhs",["1436"],"'Route' is defined but never used.","'PermissionContenxt' is defined but never used.",["1435"],["1436"],["1435"],["1436"],["1435"],["1436"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["1435"],["1436"],"'CourseContenHandler' is assigned a value but never used.","Expected '===' and instead saw '=='.","'InactiveteUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.","ArrayExpression",["1437"],"'useEffect' is defined but never used.","'useParams' is defined but never used.","'setsection' is assigned a value but never used.",["1435"],["1436"],"'id' is assigned a value but never used.",["1435"],["1436"],["1438"],"'Class' is assigned a value but never used.","'setClasses' is assigned a value but never used.",["1439"],"'Form' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'ExpansionPanel' is defined but never used.","'ExpansionPanelSummary' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'update'. Either include it or remove the dependency array.",["1440"],"'Row' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","JSXOpeningElement","'Select' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'put' is defined but never used.","'takeLatest' is defined but never used.","'message' is assigned a value but never used.","'PDF' is defined but never used.","'Nav' is defined but never used.","'Button' is defined but never used.","'updatetime' is assigned a value but never used.","'player' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CourseData', 'gerCourse', 'getDiscussion', and 'sectionId'. Either include them or remove the dependency array.",["1441"],"React Hook useEffect has a missing dependency: 'changeVideoPlayer'. Either include it or remove the dependency array.",["1442"],"no-redeclare","'i' is already defined.","redeclared","no-self-assign","'player' is assigned to itself.","selfAssignment","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'setMenus' is assigned a value but never used.",["1435"],["1436"],"'history' is assigned a value but never used.","'editActive' is assigned a value but never used.","'setZoom' is assigned a value but never used.","'CardHeaderToolbar' is defined but never used.","'ListGroup' is defined but never used.","'AddContentButton' is defined but never used.","'sections' is assigned a value but never used.","'setSections' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["1435"],["1436"],["1443"],["1444"],"'SVG' is defined but never used.","'toAbsoluteUrl' is defined but never used.","'QuickActions' is defined but never used.","'useState' is defined but never used.","'Col' is defined but never used.","'Progress' is defined but never used.","'colors' is defined but never used.","'handleDescripiton' is assigned a value but never used.","'cid' is assigned a value but never used.","'getData' is assigned a value but never used.",["1445"],"'FeeManagement' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Modal' is defined but never used.","'Input' is defined but never used.","'actions' is defined but never used.","'setContent' is assigned a value but never used.","'ClassSelected' is assigned a value but never used.","'setClassSelected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1446"],"'Role' is assigned a value but never used.","'auth' is defined but never used.","'Switch' is defined but never used.","React Hook useEffect has a missing dependency: 'courseId'. Either include it or remove the dependency array.",["1447"],"'MixedWidget1' is defined but never used.","'MixedWidget14' is defined but never used.","'ListsWidget9' is defined but never used.","'StatsWidget11' is defined but never used.","'StatsWidget12' is defined but never used.","'ListsWidget1' is defined but never used.","'AdvanceTablesWidget2' is defined but never used.","'AdvanceTablesWidget4' is defined but never used.","'ListsWidget3' is defined but never used.","'ListsWidget4' is defined but never used.","'ListsWidget8' is defined but never used.",["1448"],"'input' is defined but never used.","'ClassActionFormatter' is defined but never used.","React Hook useEffect has a missing dependency: 'qid'. Either include it or remove the dependency array.",["1449"],["1450"],"'useRef' is defined but never used.","'Card' is defined but never used.","'axios' is defined but never used.",["1451"],"no-global-assign","no-unsafe-negation",{"desc":"1452","fix":"1453"},{"desc":"1454","fix":"1455"},{"desc":"1454","fix":"1456"},{"desc":"1457","fix":"1458"},{"desc":"1459","fix":"1460"},{"desc":"1461","fix":"1462"},{"desc":"1454","fix":"1463"},{"desc":"1454","fix":"1464"},{"desc":"1457","fix":"1465"},{"desc":"1466","fix":"1467"},{"desc":"1468","fix":"1469"},{"desc":"1457","fix":"1470"},{"desc":"1471","fix":"1472"},{"desc":"1452","fix":"1473"},{"desc":"1454","fix":"1474"},"Update the dependencies array to be: [id, updateData]",{"range":"1475","text":"1476"},"Update the dependencies array to be: [updateData]",{"range":"1477","text":"1478"},{"range":"1479","text":"1478"},"Update the dependencies array to be: [update]",{"range":"1480","text":"1481"},"Update the dependencies array to be: [CourseData, contentId, gerCourse, getDiscussion, sectionId, time]",{"range":"1482","text":"1483"},"Update the dependencies array to be: [changeVideoPlayer, time]",{"range":"1484","text":"1485"},{"range":"1486","text":"1478"},{"range":"1487","text":"1478"},{"range":"1488","text":"1481"},"Update the dependencies array to be: [cid, id]",{"range":"1489","text":"1490"},"Update the dependencies array to be: [courseId]",{"range":"1491","text":"1492"},{"range":"1493","text":"1481"},"Update the dependencies array to be: [id, qid]",{"range":"1494","text":"1495"},{"range":"1496","text":"1476"},{"range":"1497","text":"1478"},[2904,2908],"[id, updateData]",[3094,3096],"[updateData]",[3282,3284],[765,767],"[update]",[3343,3362],"[CourseData, contentId, gerCourse, getDiscussion, sectionId, time]",[3449,3456],"[changeVideoPlayer, time]",[3303,3305],[2955,2957],[818,820],[2978,2983],"[cid, id]",[1487,1489],"[courseId]",[347,349],[678,682],"[id, qid]",[3285,3289],[2953,2955]]