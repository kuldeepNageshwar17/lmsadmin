[{"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\store.js":"1","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicSubheader.js":"2","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\BasePage.js":"3","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\permissionContext.js":"4","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\_redux\\EcourseRedux.js":"5","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\Layout.js":"6","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\I18nProvider.js":"7","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\_redux\\authCrud.js":"8","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage3.js":"9","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\DashboardPage.js":"10","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\StickyToolbar.js":"11","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\index.js":"12","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\index.js":"13","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\index.js":"14","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TableSortingHelpers.js":"15","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\RouterHelpers.js":"16","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\AssetsHelpers.js":"17","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\pages\\Notifications.js":"18","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\menus.js":"19","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\SectionEditDilogue.js":"20","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\questionForm.js":"21","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\exam.js":"22","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CoursePlayer.js":"23","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentPdf.js":"24","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentAll.js":"25","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\batchForm.js":"26","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\branchForm.js":"27","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classes.js":"28","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\userProfile.js":"29","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\Userform.js":"30","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentform.js":"31","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\components\\MenuActionFormatter.js":"32","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionalTestList.js":"33","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Reviews.js":"34","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\progressbar.js":"35","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\CourseActionFormatter.js":"36","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\branchActionFormatter.js":"37","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\components\\userActionFormatter.js":"38","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\TestActionFormatter.js":"39","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\SVGIcon.js":"40","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\LoadingDialog.js":"41","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\PaginationToolbar.js":"42","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\HeaderCheckbox.js":"43","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\FieldFeedbackLabel.js":"44","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples-kt\\KTCodeExample.js":"45","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeBlockToolbar.js":"46","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeExample.js":"47","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ExamQuestionsActionFormatter.js":"48","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\QuestionOptionForm.js":"49","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Curriculam.js":"50","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\questionForm.js":"51","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\NewCourse.js":"52","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestQuestion.js":"53","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\courseblocks.js":"54","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\stats\\StatsWidget11.js":"55","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\advance-tables\\AdvanceTablesWidget2.js":"56","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget8.js":"57","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget1.js":"58","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\AuthPage.js":"59","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\footer\\Footer.js":"60","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\offcanvas\\QuickPanel.js":"61","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\index.js":"62","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\ForgotPassword.js":"63","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\quick-user.js":"64","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\brand\\Brand.js":"65","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\Login.js":"66","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\sticky-card.js":"67","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\subheader.js":"68","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside-toggle.js":"69","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\brand.js":"70","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\__mocks__\\userTableMock.js":"71","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu2.js":"72","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu3.js":"73","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\scrolltop.js":"74","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\BranchesSelectorDropdown.js":"75","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenuList.js":"76","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\toggle.js":"77","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\QuickActionsDropdown.js":"78","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\UserNotificationsDropdown.js":"79","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\search\\SearchResult.js":"80","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\index.js":"81","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\__mocks__\\mockAxios.js":"82","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\index.js":"83","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\ScrollTop.js":"84","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage2.js":"85","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\HTMLClassService.js":"86","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\index.js":"87","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\components\\QuickActions.js":"88","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\footer.js":"89","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside-menu.js":"90","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header.js":"91","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TableRowSelectionHelpers.js":"92","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\offcanvas.js":"93","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownTopbarItemToggler.js":"94","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Select.js":"95","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples-kt\\KTCodeBlock.js":"96","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\index.js":"97","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\index.js":"98","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\__mocks__\\mockAuth.js":"99","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\index.js":"100","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\permissionRoles.js":"101","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\examQuestions.js":"102","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\question.js":"103","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestQuestions.js":"104","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\index.js":"105","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestForm.js":"106","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\CourseContent.js":"107","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentAudio.js":"108","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\branches.js":"109","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseForm.js":"110","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\UserList.js":"111","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\Courses.js":"112","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentPasswordReset.js":"113","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\student.js":"114","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\TestQuestionsActionFormatter.js":"115","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\coursetestblocks.js":"116","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\TestForm.js":"117","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Overview.js":"118","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\feesChangeFormatterBranch.js":"119","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\batchActionFormatter.js":"120","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\classActionFormatterBranch.js":"121","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\components\\StudentActionFormatter.js":"122","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\LanguageSelectorDropdown.js":"123","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\MyCartDropdown.js":"124","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\UserProfileDropdown.js":"125","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget3.js":"126","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MaterialThemeProvider.js":"127","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage5.js":"128","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\MyPage.js":"129","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\Logout.js":"130","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\index.js":"131","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\testList.js":"132","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\branchUserList.js":"133","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseQuestionForm.js":"134","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\scheduleExam.js":"135","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ScheduleExamActionFormatter.js":"136","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownCustomToggler.js":"137","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\ModalProgressBar.js":"138","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\SplashScreen.js":"139","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\builder\\Builder.js":"140","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget9.js":"141","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\mixed\\MixedWidget14.js":"142","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\AnimateLoading.js":"143","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Input.js":"144","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeBlock.js":"145","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\batches.js":"146","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classForm.js":"147","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentText.js":"148","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionTestList.js":"149","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\LocalStorageHelpers.js":"150","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\Aside.js":"151","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ExamActionFormatter.js":"152","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenu.js":"153","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\header-menu\\HeaderMenuWrapper.js":"154","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\scrolltop.js":"155","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header-topbar.js":"156","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header-menu.js":"157","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\ControlPanelButton.js":"158","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\header-menu\\HeaderMenu.js":"159","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\menu.js":"160","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\App.js":"161","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\LayoutConfig.js":"162","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\CourseDetails.js":"163","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\SubHeader.js":"164","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classesForBranch.js":"165","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\Courses.js":"166","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseSections.js":"167","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\cardSideStickey.js":"168","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dashboards\\Dashboard.js":"169","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\stretched-card.js":"170","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\CourseProfileFormater.js":"171","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\content.js":"172","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\index.js":"173","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\QuestionOptionForm.js":"174","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\Card.js":"175","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\FormAlert.js":"176","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeExampleSimple.js":"177","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\cookie.js":"178","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\advance-tables\\AdvanceTablesWidget4.js":"179","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu1.js":"180","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\FAQs.js":"181","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\question.js":"182","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\examForm.js":"183","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentProfile.js":"184","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\components\\NotificationActionFormatter.js":"185","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\QuiclUserToggler.js":"186","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\search\\SearchDropdown.js":"187","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\Routes.js":"188","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\BuilderPage.js":"189","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\permissions.js":"190","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseSectionform.js":"191","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Announcement.js":"192","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\Registration.js":"193","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\mixed\\MixedWidget1.js":"194","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorsPage.js":"195","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestList.js":"196","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\branchuserForm.js":"197","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\Pagination.js":"198","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Checkbox.js":"199","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentVideo.js":"200","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\classActionFormatter.js":"201","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\testQuestion.js":"202","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\Header.js":"203","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\offcanvas\\QuickUser.js":"204","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\Topbar.js":"205","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\components\\BreadCrumbs.js":"206","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\util.js":"207","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\Metronici18n.js":"208","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage6.js":"209","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\LayoutInit.js":"210","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header-mobile\\HeaderMobile.js":"211","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\quick-panel.js":"212","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\ContentEditDilogue.js":"213","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\card.js":"214","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\Notice.js":"215","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu4.js":"216","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\index.js":"217","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\stats\\StatsWidget12.js":"218","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget4.js":"219","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\DatePickerField.js":"220","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\ContentAddButton.js":"221","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\content\\ContentRoute.js":"222","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage4.js":"223","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\index.js":"224","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TablePaginationHelpers.js":"225","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicLayout.js":"226","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage1.js":"227","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenuListControlPanel.js":"228","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside.js":"229","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\index.js":"230","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\index.js":"231","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicSplashScreen.js":"232","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\_redux\\authRedux.js":"233","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\rootReducer.js":"234","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\content\\Content.js":"235"},{"size":899,"mtime":1602574510034,"results":"236","hashOfConfig":"237"},{"size":1776,"mtime":1602574509987,"results":"238","hashOfConfig":"237"},{"size":2580,"mtime":1606034216359,"results":"239","hashOfConfig":"237"},{"size":953,"mtime":1605859903520,"results":"240","hashOfConfig":"237"},{"size":1458,"mtime":1602574510007,"results":"241","hashOfConfig":"237"},{"size":3700,"mtime":1602574509988,"results":"242","hashOfConfig":"237"},{"size":1181,"mtime":1602574509982,"results":"243","hashOfConfig":"237"},{"size":926,"mtime":1602574510004,"results":"244","hashOfConfig":"237"},{"size":1202,"mtime":1602574510012,"results":"245","hashOfConfig":"237"},{"size":153,"mtime":1602574510031,"results":"246","hashOfConfig":"237"},{"size":1478,"mtime":1602574509992,"results":"247","hashOfConfig":"237"},{"size":326,"mtime":1606034398942,"results":"248","hashOfConfig":"237"},{"size":1563,"mtime":1603882714442,"results":"249","hashOfConfig":"237"},{"size":1269,"mtime":1605075139676,"results":"250","hashOfConfig":"237"},{"size":995,"mtime":1602574509965,"results":"251","hashOfConfig":"237"},{"size":1657,"mtime":1602574509964,"results":"252","hashOfConfig":"237"},{"size":313,"mtime":1602574509964,"results":"253","hashOfConfig":"237"},{"size":7798,"mtime":1606124456183,"results":"254","hashOfConfig":"237"},{"size":4224,"mtime":1603172140920,"results":"255","hashOfConfig":"237"},{"size":5538,"mtime":1602574510008,"results":"256","hashOfConfig":"237"},{"size":5884,"mtime":1604396857725,"results":"257","hashOfConfig":"237"},{"size":7213,"mtime":1605788572245,"results":"258","hashOfConfig":"237"},{"size":19662,"mtime":1606544632886,"results":"259","hashOfConfig":"237"},{"size":4439,"mtime":1602574510021,"results":"260","hashOfConfig":"237"},{"size":14030,"mtime":1605678759276,"results":"261","hashOfConfig":"237"},{"size":4301,"mtime":1604492781078,"results":"262","hashOfConfig":"237"},{"size":3849,"mtime":1604475464017,"results":"263","hashOfConfig":"237"},{"size":4415,"mtime":1603798916684,"results":"264","hashOfConfig":"237"},{"size":944,"mtime":1602574510027,"results":"265","hashOfConfig":"237"},{"size":8207,"mtime":1605859903519,"results":"266","hashOfConfig":"237"},{"size":8016,"mtime":1605878768575,"results":"267","hashOfConfig":"237"},{"size":1399,"mtime":1603172140919,"results":"268","hashOfConfig":"237"},{"size":4952,"mtime":1603455881289,"results":"269","hashOfConfig":"237"},{"size":1251,"mtime":1604661117384,"results":"270","hashOfConfig":"237"},{"size":469,"mtime":1604473630690,"results":"271","hashOfConfig":"237"},{"size":2247,"mtime":1602834074943,"results":"272","hashOfConfig":"237"},{"size":1425,"mtime":1602574510019,"results":"273","hashOfConfig":"237"},{"size":1572,"mtime":1605075139676,"results":"274","hashOfConfig":"237"},{"size":1871,"mtime":1603369349091,"results":"275","hashOfConfig":"237"},{"size":552,"mtime":1602574509968,"results":"276","hashOfConfig":"237"},{"size":1068,"mtime":1602574509967,"results":"277","hashOfConfig":"237"},{"size":1689,"mtime":1602574509974,"results":"278","hashOfConfig":"237"},{"size":272,"mtime":1602574509972,"results":"279","hashOfConfig":"237"},{"size":1477,"mtime":1602574509972,"results":"280","hashOfConfig":"237"},{"size":1861,"mtime":1602574509969,"results":"281","hashOfConfig":"237"},{"size":1166,"mtime":1602574509970,"results":"282","hashOfConfig":"237"},{"size":919,"mtime":1602574509970,"results":"283","hashOfConfig":"237"},{"size":1835,"mtime":1603369349090,"results":"284","hashOfConfig":"237"},{"size":2225,"mtime":1602574510015,"results":"285","hashOfConfig":"237"},{"size":1800,"mtime":1604661966971,"results":"286","hashOfConfig":"237"},{"size":5603,"mtime":1604668377047,"results":"287","hashOfConfig":"237"},{"size":5978,"mtime":1602574510010,"results":"288","hashOfConfig":"237"},{"size":2247,"mtime":1604668377046,"results":"289","hashOfConfig":"237"},{"size":2672,"mtime":1606128403205,"results":"290","hashOfConfig":"237"},{"size":5018,"mtime":1602574509982,"results":"291","hashOfConfig":"237"},{"size":18681,"mtime":1602574509978,"results":"292","hashOfConfig":"237"},{"size":4480,"mtime":1602574509980,"results":"293","hashOfConfig":"237"},{"size":5943,"mtime":1602574509979,"results":"294","hashOfConfig":"237"},{"size":5689,"mtime":1602574510005,"results":"295","hashOfConfig":"237"},{"size":1941,"mtime":1602574509997,"results":"296","hashOfConfig":"237"},{"size":31741,"mtime":1602574509996,"results":"297","hashOfConfig":"237"},{"size":342,"mtime":1602574509977,"results":"298","hashOfConfig":"237"},{"size":4070,"mtime":1602574510005,"results":"299","hashOfConfig":"237"},{"size":2251,"mtime":1602574509839,"results":"300","hashOfConfig":"237"},{"size":1558,"mtime":1602574509990,"results":"301","hashOfConfig":"237"},{"size":5583,"mtime":1602574510006,"results":"302","hashOfConfig":"237"},{"size":2304,"mtime":1602574509826,"results":"303","hashOfConfig":"237"},{"size":1000,"mtime":1602574509829,"results":"304","hashOfConfig":"237"},{"size":2560,"mtime":1602574509566,"results":"305","hashOfConfig":"237"},{"size":869,"mtime":1602574509817,"results":"306","hashOfConfig":"237"},{"size":2505,"mtime":1602574510003,"results":"307","hashOfConfig":"237"},{"size":1905,"mtime":1602574509976,"results":"308","hashOfConfig":"237"},{"size":2647,"mtime":1602574509976,"results":"309","hashOfConfig":"237"},{"size":4509,"mtime":1602574509564,"results":"310","hashOfConfig":"237"},{"size":2791,"mtime":1602574509992,"results":"311","hashOfConfig":"237"},{"size":6488,"mtime":1605704911289,"results":"312","hashOfConfig":"237"},{"size":6074,"mtime":1602574509565,"results":"313","hashOfConfig":"237"},{"size":6790,"mtime":1602574509994,"results":"314","hashOfConfig":"237"},{"size":24405,"mtime":1602574509994,"results":"315","hashOfConfig":"237"},{"size":11389,"mtime":1602574509995,"results":"316","hashOfConfig":"237"},{"size":2132,"mtime":1602574510031,"results":"317","hashOfConfig":"237"},{"size":262,"mtime":1602574510032,"results":"318","hashOfConfig":"237"},{"size":93,"mtime":1602574510004,"results":"319","hashOfConfig":"237"},{"size":377,"mtime":1602574509992,"results":"320","hashOfConfig":"237"},{"size":759,"mtime":1602574510012,"results":"321","hashOfConfig":"237"},{"size":9603,"mtime":1602574509985,"results":"322","hashOfConfig":"237"},{"size":234,"mtime":1602574509966,"results":"323","hashOfConfig":"237"},{"size":1651,"mtime":1602574510000,"results":"324","hashOfConfig":"237"},{"size":758,"mtime":1602574509819,"results":"325","hashOfConfig":"237"},{"size":2853,"mtime":1602574509566,"results":"326","hashOfConfig":"237"},{"size":1709,"mtime":1602574509825,"results":"327","hashOfConfig":"237"},{"size":2095,"mtime":1602574509965,"results":"328","hashOfConfig":"237"},{"size":9129,"mtime":1602574509564,"results":"329","hashOfConfig":"237"},{"size":392,"mtime":1602574509977,"results":"330","hashOfConfig":"237"},{"size":1089,"mtime":1602574509973,"results":"331","hashOfConfig":"237"},{"size":3106,"mtime":1602574509969,"results":"332","hashOfConfig":"237"},{"size":963,"mtime":1604668377048,"results":"333","hashOfConfig":"237"},{"size":1176,"mtime":1605011855263,"results":"334","hashOfConfig":"237"},{"size":2239,"mtime":1602574510003,"results":"335","hashOfConfig":"237"},{"size":3164,"mtime":1606208918365,"results":"336","hashOfConfig":"237"},{"size":1851,"mtime":1605704396587,"results":"337","hashOfConfig":"237"},{"size":4498,"mtime":1603266527524,"results":"338","hashOfConfig":"237"},{"size":2105,"mtime":1602756023035,"results":"339","hashOfConfig":"237"},{"size":4590,"mtime":1602842642301,"results":"340","hashOfConfig":"237"},{"size":93,"mtime":1602574509977,"results":"341","hashOfConfig":"237"},{"size":7196,"mtime":1604921087488,"results":"342","hashOfConfig":"237"},{"size":9780,"mtime":1602764233930,"results":"343","hashOfConfig":"237"},{"size":4444,"mtime":1602574510021,"results":"344","hashOfConfig":"237"},{"size":4268,"mtime":1605704043646,"results":"345","hashOfConfig":"237"},{"size":7253,"mtime":1604734524686,"results":"346","hashOfConfig":"237"},{"size":4528,"mtime":1605075139677,"results":"347","hashOfConfig":"237"},{"size":2262,"mtime":1604400919505,"results":"348","hashOfConfig":"237"},{"size":2427,"mtime":1602574510029,"results":"349","hashOfConfig":"237"},{"size":4153,"mtime":1602574510029,"results":"350","hashOfConfig":"237"},{"size":1848,"mtime":1603369349092,"results":"351","hashOfConfig":"237"},{"size":2004,"mtime":1604404760443,"results":"352","hashOfConfig":"237"},{"size":4790,"mtime":1603172140918,"results":"353","hashOfConfig":"237"},{"size":485,"mtime":1604733268478,"results":"354","hashOfConfig":"237"},{"size":1727,"mtime":1606109556214,"results":"355","hashOfConfig":"237"},{"size":1420,"mtime":1602574510019,"results":"356","hashOfConfig":"237"},{"size":1420,"mtime":1605859903477,"results":"357","hashOfConfig":"237"},{"size":1225,"mtime":1602574510028,"results":"358","hashOfConfig":"237"},{"size":2795,"mtime":1602574509993,"results":"359","hashOfConfig":"237"},{"size":9664,"mtime":1602574509993,"results":"360","hashOfConfig":"237"},{"size":6461,"mtime":1602574509994,"results":"361","hashOfConfig":"237"},{"size":5800,"mtime":1602574509980,"results":"362","hashOfConfig":"237"},{"size":1748,"mtime":1602574509986,"results":"363","hashOfConfig":"237"},{"size":1101,"mtime":1602574510013,"results":"364","hashOfConfig":"237"},{"size":226,"mtime":1602574510031,"results":"365","hashOfConfig":"237"},{"size":600,"mtime":1602574510006,"results":"366","hashOfConfig":"237"},{"size":2812,"mtime":1604401928280,"results":"367","hashOfConfig":"237"},{"size":2307,"mtime":1604402211182,"results":"368","hashOfConfig":"237"},{"size":4520,"mtime":1605075139687,"results":"369","hashOfConfig":"237"},{"size":5624,"mtime":1604668377045,"results":"370","hashOfConfig":"237"},{"size":8902,"mtime":1606113497309,"results":"371","hashOfConfig":"237"},{"size":3369,"mtime":1606114191051,"results":"372","hashOfConfig":"237"},{"size":401,"mtime":1602574509975,"results":"373","hashOfConfig":"237"},{"size":290,"mtime":1602574509968,"results":"374","hashOfConfig":"237"},{"size":440,"mtime":1602574509969,"results":"375","hashOfConfig":"237"},{"size":35920,"mtime":1602574509966,"results":"376","hashOfConfig":"237"},{"size":6262,"mtime":1602574509980,"results":"377","hashOfConfig":"237"},{"size":3830,"mtime":1602574509981,"results":"378","hashOfConfig":"237"},{"size":1629,"mtime":1602574509967,"results":"379","hashOfConfig":"237"},{"size":1126,"mtime":1602574509973,"results":"380","hashOfConfig":"237"},{"size":3501,"mtime":1602574509970,"results":"381","hashOfConfig":"237"},{"size":4596,"mtime":1603431280311,"results":"382","hashOfConfig":"237"},{"size":4099,"mtime":1604399561347,"results":"383","hashOfConfig":"237"},{"size":4465,"mtime":1602574510021,"results":"384","hashOfConfig":"237"},{"size":4698,"mtime":1602756042900,"results":"385","hashOfConfig":"237"},{"size":2660,"mtime":1602574509964,"results":"386","hashOfConfig":"237"},{"size":1693,"mtime":1602574509988,"results":"387","hashOfConfig":"237"},{"size":2245,"mtime":1605013128004,"results":"388","hashOfConfig":"237"},{"size":1496,"mtime":1603369349070,"results":"389","hashOfConfig":"237"},{"size":2213,"mtime":1602574509999,"results":"390","hashOfConfig":"237"},{"size":889,"mtime":1602574509840,"results":"391","hashOfConfig":"237"},{"size":965,"mtime":1602574509823,"results":"392","hashOfConfig":"237"},{"size":2360,"mtime":1602574509822,"results":"393","hashOfConfig":"237"},{"size":1102,"mtime":1604668377044,"results":"394","hashOfConfig":"237"},{"size":1236,"mtime":1602574509999,"results":"395","hashOfConfig":"237"},{"size":29809,"mtime":1602574509564,"results":"396","hashOfConfig":"237"},{"size":1718,"mtime":1602574510001,"results":"397","hashOfConfig":"237"},{"size":5421,"mtime":1602574509986,"results":"398","hashOfConfig":"237"},{"size":4402,"mtime":1604734221679,"results":"399","hashOfConfig":"237"},{"size":3426,"mtime":1602574509999,"results":"400","hashOfConfig":"237"},{"size":5439,"mtime":1606112044150,"results":"401","hashOfConfig":"237"},{"size":4846,"mtime":1603868171295,"results":"402","hashOfConfig":"237"},{"size":10278,"mtime":1606367987492,"results":"403","hashOfConfig":"237"},{"size":916,"mtime":1604736372828,"results":"404","hashOfConfig":"237"},{"size":2168,"mtime":1602574509975,"results":"405","hashOfConfig":"237"},{"size":1653,"mtime":1602574509827,"results":"406","hashOfConfig":"237"},{"size":722,"mtime":1604403250174,"results":"407","hashOfConfig":"237"},{"size":1179,"mtime":1602574509818,"results":"408","hashOfConfig":"237"},{"size":1291,"mtime":1602574509973,"results":"409","hashOfConfig":"237"},{"size":2225,"mtime":1602743254603,"results":"410","hashOfConfig":"237"},{"size":4362,"mtime":1602574509967,"results":"411","hashOfConfig":"237"},{"size":591,"mtime":1602574509972,"results":"412","hashOfConfig":"237"},{"size":4611,"mtime":1602574509971,"results":"413","hashOfConfig":"237"},{"size":1697,"mtime":1602574509562,"results":"414","hashOfConfig":"237"},{"size":11900,"mtime":1602574509979,"results":"415","hashOfConfig":"237"},{"size":2461,"mtime":1602574509976,"results":"416","hashOfConfig":"237"},{"size":3129,"mtime":1604732234515,"results":"417","hashOfConfig":"237"},{"size":2098,"mtime":1602745391836,"results":"418","hashOfConfig":"237"},{"size":6568,"mtime":1604491494176,"results":"419","hashOfConfig":"237"},{"size":9711,"mtime":1602574510030,"results":"420","hashOfConfig":"237"},{"size":1948,"mtime":1606118389422,"results":"421","hashOfConfig":"237"},{"size":1899,"mtime":1602574509991,"results":"422","hashOfConfig":"237"},{"size":7130,"mtime":1602574509995,"results":"423","hashOfConfig":"237"},{"size":1612,"mtime":1606371204944,"results":"424","hashOfConfig":"237"},{"size":143,"mtime":1602574510030,"results":"425","hashOfConfig":"237"},{"size":4133,"mtime":1605094964074,"results":"426","hashOfConfig":"237"},{"size":3353,"mtime":1603364524191,"results":"427","hashOfConfig":"237"},{"size":3599,"mtime":1604666700836,"results":"428","hashOfConfig":"237"},{"size":10542,"mtime":1602574510006,"results":"429","hashOfConfig":"237"},{"size":7898,"mtime":1602574509981,"results":"430","hashOfConfig":"237"},{"size":891,"mtime":1602574510014,"results":"431","hashOfConfig":"237"},{"size":4890,"mtime":1603798494638,"results":"432","hashOfConfig":"237"},{"size":6936,"mtime":1605859903520,"results":"433","hashOfConfig":"237"},{"size":570,"mtime":1602574509974,"results":"434","hashOfConfig":"237"},{"size":385,"mtime":1602574509971,"results":"435","hashOfConfig":"237"},{"size":4481,"mtime":1602935473187,"results":"436","hashOfConfig":"237"},{"size":1771,"mtime":1605702874746,"results":"437","hashOfConfig":"237"},{"size":4558,"mtime":1602758291976,"results":"438","hashOfConfig":"237"},{"size":1549,"mtime":1602574509998,"results":"439","hashOfConfig":"237"},{"size":10663,"mtime":1604668377044,"results":"440","hashOfConfig":"237"},{"size":3568,"mtime":1602574509998,"results":"441","hashOfConfig":"237"},{"size":756,"mtime":1602574510000,"results":"442","hashOfConfig":"237"},{"size":62301,"mtime":1602574509565,"results":"443","hashOfConfig":"237"},{"size":1319,"mtime":1602574509983,"results":"444","hashOfConfig":"237"},{"size":965,"mtime":1602574510013,"results":"445","hashOfConfig":"237"},{"size":2941,"mtime":1602574509988,"results":"446","hashOfConfig":"237"},{"size":2628,"mtime":1602574509997,"results":"447","hashOfConfig":"237"},{"size":3505,"mtime":1602574509837,"results":"448","hashOfConfig":"237"},{"size":7240,"mtime":1602574510008,"results":"449","hashOfConfig":"237"},{"size":11062,"mtime":1602574509562,"results":"450","hashOfConfig":"237"},{"size":1099,"mtime":1602574509968,"results":"451","hashOfConfig":"237"},{"size":2730,"mtime":1602574509976,"results":"452","hashOfConfig":"237"},{"size":683,"mtime":1602574509979,"results":"453","hashOfConfig":"237"},{"size":5298,"mtime":1602574509982,"results":"454","hashOfConfig":"237"},{"size":5922,"mtime":1602574509980,"results":"455","hashOfConfig":"237"},{"size":1272,"mtime":1602574509971,"results":"456","hashOfConfig":"237"},{"size":1266,"mtime":1602574510018,"results":"457","hashOfConfig":"237"},{"size":821,"mtime":1602574509991,"results":"458","hashOfConfig":"237"},{"size":1107,"mtime":1602574510013,"results":"459","hashOfConfig":"237"},{"size":999,"mtime":1602574510029,"results":"460","hashOfConfig":"237"},{"size":2447,"mtime":1602574509965,"results":"461","hashOfConfig":"237"},{"size":1739,"mtime":1602574509986,"results":"462","hashOfConfig":"237"},{"size":752,"mtime":1602574510012,"results":"463","hashOfConfig":"237"},{"size":8983,"mtime":1606033830995,"results":"464","hashOfConfig":"237"},{"size":3327,"mtime":1602574509567,"results":"465","hashOfConfig":"237"},{"size":64,"mtime":1602574509983,"results":"466","hashOfConfig":"237"},{"size":395,"mtime":1602574510000,"results":"467","hashOfConfig":"237"},{"size":1411,"mtime":1602574509986,"results":"468","hashOfConfig":"237"},{"size":3565,"mtime":1604986930748,"results":"469","hashOfConfig":"237"},{"size":390,"mtime":1602574510033,"results":"470","hashOfConfig":"237"},{"size":936,"mtime":1602574509990,"results":"471","hashOfConfig":"237"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},"a5wehm",{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"474"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"486"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"498"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"474"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"511"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"474"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"505"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"531","messages":"532","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"477"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"477"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"539"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"474"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"505"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"486"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"486"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"477"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"474"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"603"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"505"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"486"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"477"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"486"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"477"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"505"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"477"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"474"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716","usedDeprecatedRules":"474"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"477"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"498"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"486"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"491"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"486"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742","usedDeprecatedRules":"491"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"745","usedDeprecatedRules":"477"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"505"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"539"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"511"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"474"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"511"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786","usedDeprecatedRules":"505"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"539"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"811","usedDeprecatedRules":"505"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"505"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837","usedDeprecatedRules":"511"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"511"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"474"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"511"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"474"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"858","usedDeprecatedRules":"474"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"505"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"474"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"889","usedDeprecatedRules":"474"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"896","messages":"897","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"898","usedDeprecatedRules":"511"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"910","usedDeprecatedRules":"474"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"505"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"922","messages":"923","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"924","usedDeprecatedRules":"511"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"477"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960","usedDeprecatedRules":"474"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"965","messages":"966","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"971","messages":"972","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"973","messages":"974","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"975","messages":"976","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"977","messages":"978","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"979","messages":"980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"983","usedDeprecatedRules":"474"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"992","usedDeprecatedRules":"474"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\store.js",[],["1007","1008"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicSubheader.js",[],["1009","1010"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\BasePage.js",["1011"],"import React, {Suspense, lazy} from \"react\";\r\nimport {Redirect, Switch, Route} from \"react-router-dom\";\r\nimport {LayoutSplashScreen, ContentRoute} from \"../_metronic/layout\";\r\nimport {BuilderPage} from \"./pages/BuilderPage\";\r\nimport {MyPage} from \"./pages/MyPage\";\r\nimport {DashboardPage} from \"./pages/DashboardPage\";\r\n// import {ControlePaneDahsBoard} from \"./pages/ControlePaneDahsBoard\";\r\n\r\n// const GoogleMaterialPage = lazy(() =>\r\n//   import(\"./modules/GoogleMaterialExamples/GoogleMaterialPage\")\r\n// );\r\n\r\nconst ECourse = lazy(() =>\r\n  import(\"./modules/ECourse\")\r\n);\r\n\r\nconst Settings = lazy(() =>\r\n  import(\"./modules/Setting\")\r\n);\r\nconst User = lazy(() =>\r\n  import(\"./modules/Usermanagement\")\r\n);\r\n\r\nconst Student = lazy(() =>\r\n  import(\"./modules/student\")\r\n);\r\n\r\nconst Exams = lazy(() =>\r\n  import(\"./modules/Examination\")\r\n);\r\n\r\nconst Tests = lazy(() =>\r\n  import(\"./modules/Test\")\r\n);\r\n\r\nconst Permission = lazy(() =>\r\n  import(\"./modules/permissionManager\")\r\n);\r\n\r\nconst Notifications = lazy(() =>\r\n  import(\"./modules/Notifications\")\r\n);\r\n\r\nexport default function BasePage() {\r\n    // useEffect(() => {\r\n    //   console.log('Base page');\r\n    // }, []) // [] - is required if you need only one call\r\n    // https://reactjs.org/docs/hooks-reference.html#useeffect\r\n\r\n    return (\r\n        <Suspense fallback={<LayoutSplashScreen/>}>\r\n            <Switch>\r\n                {\r\n                    /* Redirect from root URL to /dashboard. */\r\n                    <Redirect exact from=\"/\" to=\"/dashboard\"/>\r\n                }\r\n                <ContentRoute path=\"/dashboard\" component={DashboardPage}/>\r\n                {/* <ContentRoute path=\"/controlPanel\" component={\"ControlePaneDahsBoard\"}/> */}\r\n                <ContentRoute path=\"/builder\" component={BuilderPage}/>\r\n                <ContentRoute path=\"/my-page\" component={MyPage}/>   \r\n                <ContentRoute path=\"/ecourse\" component={ECourse}/>        \r\n                <ContentRoute path=\"/setting\" component={Settings}/>    \r\n                <ContentRoute path=\"/user\" component={User}/>   \r\n                <ContentRoute path=\"/Student\" component={Student}/>    \r\n                <ContentRoute path=\"/Exams\" component={Exams}/>    \r\n                <ContentRoute path=\"/Test\" component={Tests}/>    \r\n                <ContentRoute path=\"/permission\" component={Permission}/>  \r\n                <ContentRoute path=\"/Notifications\" component={Notifications}/>   \r\n                \r\n                {/* <Redirect to=\"/error/error-v1\"/> */}\r\n            </Switch>\r\n        </Suspense>\r\n    );\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\permissionContext.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\_redux\\EcourseRedux.js",["1012","1013"],"import { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\n\r\nexport const actionTypes = {\r\n  ADD_SECTION: 'New Course Section',\r\n  SET_CURRENT_COURSE: 'Set Current Course',\r\n  SET_CURRENT_SECTION: 'Set Current Section',\r\n  SET_CURRENT_CONTENT:'Set Current Content'\r\n}\r\n\r\nconst initialCourseState = {\r\n  CurrentCourseId: null,\r\n  CurrentSection: null,\r\n  CurrentContent:null,\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v706-ecom' },\r\n  (state = initialCourseState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.SET_CURRENT_COURSE: {\r\n        const { id } = action.payload\r\n        return { ...state, CurrentCourseId: id }\r\n      }\r\n      case actionTypes.SET_CURRENT_SECTION: {\r\n        const { item } = action.payload\r\n        return { ...state, CurrentSection: item }\r\n      }\r\n      case actionTypes.SET_CURRENT_CONTENT: {\r\n        const { item } = action.payload\r\n        return { ...state, CurrentContent: item }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  SetCurrentCourse: id => ({\r\n    type: actionTypes.SET_CURRENT_COURSE,\r\n    payload: { id }\r\n  }),\r\n  SetCurrentSection: item => ({\r\n    type: actionTypes.SET_CURRENT_SECTION,\r\n    payload: { item }\r\n  }),\r\n  SetCurrentContent: item => ({\r\n    type: actionTypes.SET_CURRENT_CONTENT,\r\n    payload: { item }\r\n  })\r\n}\r\n",["1014","1015"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\Layout.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\I18nProvider.js",[],["1016","1017"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\_redux\\authCrud.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage3.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\DashboardPage.js",[],["1018","1019"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\StickyToolbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\index.js",[],["1020","1021"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\index.js",["1022"],"import React, { useContext } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport users from './pages/UserList'\r\nimport UserProfile from './pages/userProfile'\r\nimport BranchuserForm from './pages/branchuserForm'\r\nimport UserForm from './pages/Userform'\r\nimport BranchUserList from './pages/branchUserList'\r\nimport { permissionsContext } from '../permissionManager/permissionContext'\r\n\r\nexport default function UserManagement () {\r\n  const { isUserAuthenticate } = useContext(permissionsContext)\r\n\r\n  return (\r\n    <Switch>\r\n      {/* Redirect from root URL to /dashboard. */}\r\n      <Route path='/User/UserForm/:id'>\r\n        <UserForm />\r\n      </Route>\r\n      {isUserAuthenticate('M3', 1) && (<Route exact path='/User' component={users} />)}\r\n      <Route exact path='/User/BranchUser' component={BranchUserList} />\r\n      <Route exact path='/User/UserForm' component={UserForm} />\r\n      <Route exact path='/User/BranchUserForm' component={BranchuserForm} />\r\n      <Route path='/User/UserForm/:id'>\r\n        <UserProfile />\r\n      </Route>\r\n      <Route path='/User/BranchuserForm/:id'>\r\n        <BranchuserForm />\r\n      </Route>\r\n      <Route path='/User/testProfile/'>\r\n        <UserProfile />\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TableSortingHelpers.js",[],["1023","1024"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\RouterHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\AssetsHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\pages\\Notifications.js",["1025","1026","1027","1028"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Button , Modal } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\nimport NotificationActionFormatter from '../components/NotificationActionFormatter'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\n\r\nexport default function Notifications (props) {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [modelData , setModelData] = useState()\r\n\r\n  const ChangeDescription = (cellContent) => {\r\n    return  <Button onClick={() =>showModel(cellContent)}>Show </Button> \r\n    // \r\n        // return <div  dangerouslySetInnerHTML={{    __html: cellContent }}></div>\r\n  }\r\n  const ChangeDate = (cellContent) =>{ \r\n    return cellContent.slice(0 ,10)\r\n  }\r\n  const ChangeName = (cellContent) => {\r\n    return cellContent.charAt(0).toUpperCase() + cellContent.slice(1)\r\n  }\r\n  const StatusColor = (cellContent) => {\r\n    if(cellContent == \"Pending\"){\r\n      return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"Red\") }}></div> \r\n    }\r\n    if(cellContent == 'Approved'){\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"Green\") }}></div> \r\n    }\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"marron\") }}></div> \r\n\r\n  }\r\n  const ChangeTypeColor = (cellContent) => {\r\n     if(cellContent == \"ClassFee\"){\r\n        return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"Blue-green\t\") }}></div> \r\n     }\r\n     if (cellContent == \"StudentFee\"){\r\n      return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"Brick Red\t\") }}></div>  \r\n     }\r\n\r\n    return cellContent\r\n\r\n   }\r\n  const RejectClassAction = (changeRequestId ,entityId ,requestedFees , requestType) => {\r\n    var data = {status : \"Rejected\" , changeRequestId :changeRequestId ,entityId :entityId ,\r\n    requestedFees :requestedFees , requestType : requestType\r\n   }\r\n   \r\n\r\n   \r\n   axios.post('/api/branch/handleRequest' , data).then((res) => {\r\n\r\n   }).catch((error) => {\r\n\r\n   })\r\n   updateData()\r\n  }\r\n  const ApproveClassAction = (changeRequestId ,entityId ,requestedFees , requestType) => {\r\n    var data = {status : \"Approved\" , changeRequestId :changeRequestId ,entityId :entityId ,\r\n     requestedFees :requestedFees , requestType : requestType\r\n    }\r\n\r\n    axios.post('/api/branch/handleRequest' , data).then((res) => {\r\n\r\n    }).catch((error) => {\r\n\r\n    })\r\n    updateData()\r\n\r\n  }\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Description\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* <h4>Centered Modal</h4> */}\r\n          <p>\r\n           {props.data}\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )}\r\n  const showModel = (cellContent) => {\r\n    if(!cellContent){\r\n      setModelData(\"No Description For this\")\r\n    }\r\n    else{\r\n      setModelData(cellContent)\r\n    }\r\n    \r\n    setModalShow(true)\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: 'changeRequest._id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'changeRequest.requestType',\r\n      text: 'Type',\r\n      sort: true,\r\n      formatter : ChangeTypeColor,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'changeRequest.entityName',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'changeRequest.description',\r\n      text: 'Description',\r\n      sort: true,\r\n      formatter : ChangeDescription,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'changeRequest.fees',\r\n      text: 'fees',\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: 'changeRequest.requestedFees',\r\n      text: 'RequestedFees',\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: 'changeRequest.requestedBy[0].name',\r\n      text: 'requestedBy',\r\n      sort: true,\r\n      formatter : ChangeName,\r\n    },\r\n    {\r\n      dataField: 'changeRequest.requestDate',\r\n      text: 'requestdate',\r\n      sort: true,\r\n      formatter : ChangeDate,\r\n    },\r\n    {\r\n      dataField: 'changeRequest.status',\r\n      text: 'status',\r\n      sort: true,\r\n      formatter : StatusColor\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter : NotificationActionFormatter , \r\n      formatExtraData: {\r\n        RejectClassAction: RejectClassAction,\r\n        ApproveClassAction: ApproveClassAction\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '250px'\r\n      }\r\n    }\r\n  ]\r\n  const updateData=()=>{\r\n    debugger\r\n    axios\r\n      .get('/api/Branch/getRequests')\r\n      .then(res => {\r\n        setNotifications(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const [Notifications, setNotifications] = useState(null)\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='All Class'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    props.history.push('/setting/classForm')\r\n                  }}\r\n                >\r\n                  New Class\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Notifications ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Notifications}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps}\r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n              {modelData && <MyVerticallyCenteredModal\r\n      show={modalShow}\r\n      onHide={() => setModalShow(false)}\r\n      data={ modelData}\r\n      />}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\menus.js",["1029"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport MenuActionFormatter from '../components/MenuActionFormatter'\r\n\r\nexport default function Menus (props) {\r\n  const [menus, setMenus] = useState(null)\r\n\r\n  let history = useHistory()\r\n  const EditMenuHandler = (id) => {\r\n    history.push('' + id)\r\n  }\r\n  const DeleteMenuHandler = (id) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios\r\n        .delete('', { id })\r\n        .then(res => {})\r\n        .catch(() => {})\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Title',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'MenuCode',\r\n      text: 'Description',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },   \r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: MenuActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditMenuHandler,\r\n        DeleteAction: DeleteMenuHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\n\r\n  useEffect(() => {\r\n    debugger\r\n    // axios.get('')\r\n    //   .then(res => {\r\n    //   debugger;\r\n    //       // let ClassBatches= res.data.classes.reduce((batchlist,obj)=>\r\n    //       // {       debugger;\r\n    //       //      return batchlist.concat(obj.batches)\r\n    //       // },[])\r\n    //       if(res.data && res.data.length){\r\n    //         setMenus(res.data)\r\n    //       }\r\n      \r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err)\r\n    //   })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Menu list'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/permission/MenuForm')\r\n                  }}\r\n                >\r\n                  New Menu\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {menus && menus.length ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={menus}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\SectionEditDilogue.js",["1030","1031","1032"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n// import { useParams } from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Modal } from 'react-bootstrap'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport { Input } from '../../../../_metronic/_partials/controls'\r\nimport { actions } from './../_redux/EcourseRedux'\r\n\r\nconst SectionEditSchema = Yup.object().shape({\r\n  _id: Yup.string().nullable(true),\r\n  name: Yup.string().required('Firstname is required'),\r\n  timeInHours: Yup.number().required('Time  is required'),\r\n  timeInMinutes: Yup.number().required('Time is required'),\r\n  order: Yup.number(),\r\n  courseId: Yup.mixed()\r\n    .nullable(false)\r\n    .required('Course is required')\r\n})\r\n\r\nfunction SectionEditDilogue ({\r\n  show,\r\n  actionsLoading,\r\n  CourseID,\r\n  dispatch,\r\n  Section\r\n})\r\n\r\n\r\n{\r\n  const [section, setsection] = useState(Section != null ?{ ...Section, courseId: CourseID }:{\r\n    _id: null,\r\n    courseId: CourseID,\r\n    name: '',\r\n    timeInHours: null,\r\n    timeInMinutes:null ,\r\n    order: null\r\n  })\r\n  \r\n  let history = useHistory()\r\n  const onHide = () => {\r\n    console.log(CourseID)\r\n    dispatch(actions.SetCurrentSection(null))\r\n    history.push('/Ecourse/CourseContent/?id=' + CourseID)\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal\r\n        size='md'\r\n        show={show}\r\n        onHide={onHide}\r\n        aria-labelledby='example-modal-sizes-title-md'\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id='example-modal-sizes-title-md'>\r\n  {section._id!=null?\"Edit\":\"New\"} section\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <>\r\n          <Formik\r\n            // enableReinitialize={true}\r\n            initialValues={section}\r\n            validationSchema={SectionEditSchema}\r\n            onSubmit={values => {\r\n              debugger\r\n              console.log(values)\r\n              let sec = {\r\n                _id: values._id,\r\n                courseId: values.courseId,\r\n                name: values.name,\r\n                timeInHours: values.timeInHours,\r\n                timeInMinutes: values.timeInMinutes,\r\n                order:values.order\r\n              }\r\n              axios\r\n                .post('/api/course/courseSection', sec)\r\n                .then(response => {\r\n                  onHide()\r\n                })\r\n                .catch(err => {\r\n                  console.log(err)\r\n                })\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <>\r\n                <Modal.Body className='overlay overlay-block cursor-default'>\r\n                  {actionsLoading && (\r\n                    <div className='overlay-layer bg-transparent'>\r\n                      <div className='spinner spinner-lg spinner-success' />\r\n                    </div>\r\n                  )}\r\n                  <Form className='form form-label-right'>\r\n                    <div className='form-group row'>\r\n                      <div className='col-lg-12'>\r\n                        <Field                        \r\n                          name='name'\r\n                          component={Input}\r\n                          placeholder='title'\r\n                          label='Section Title'\r\n                        />\r\n                      </div>\r\n                      <div className='col-lg-12'>\r\n                        <Field\r\n                          name='timeInHours'\r\n                          component={Input}\r\n                          placeholder='timeInHours'\r\n                          label='timeInHours'\r\n                          type=\"number\"\r\n                        />\r\n                      </div>\r\n                      <div className='col-lg-12'>\r\n                        <Field\r\n                          name='timeInMinutes'\r\n                          component={Input}\r\n                          placeholder='timeInMinutes'\r\n                          label='timeInMinutes'\r\n                          type=\"number\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className='col-lg-12'>\r\n                        <Field\r\n                          name='order'\r\n                          component={Input}\r\n                          placeholder='order'\r\n                          label='order'\r\n                          type=\"number\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <button\r\n                    type='button'\r\n                    onClick={onHide}\r\n                    className='btn btn-light btn-elevate mr-2'\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <></>\r\n                  <button\r\n                    type='submit'\r\n                    onClick={() => handleSubmit()}\r\n                    className='btn btn-primary btn-elevate'\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </Modal.Footer>\r\n              </>\r\n            )}\r\n          </Formik>\r\n        </>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  debugger\r\n  console.log(state.course.CurrentCourseId)\r\n  return {\r\n    CourseID: state.course.CurrentCourseId,\r\n    Section: state.course.CurrentSection\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(SectionEditDilogue)\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\questionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\exam.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CoursePlayer.js",["1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentPdf.js",["1055"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Button, Form, Col } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport JoditEditor from 'jodit-react'\r\n\r\nexport default function ContentPdf() {\r\n  const [Content, setContent] = useState({\r\n    description: '',\r\n    title: '',\r\n    contentUrl: '',\r\n    type: 'pdf'\r\n  })\r\n  const { id, cid } = useParams()\r\n  const history = useHistory()\r\n\r\n  const saveData = async event => {\r\n    event.preventDefault()\r\n    debugger\r\n    let data = Content\r\n    let formData = new FormData()\r\n    for (var key in data) {\r\n      formData.append(key, data[key])\r\n    }\r\n    debugger\r\n    await axios\r\n      .post('api/course/SectionContent/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then(res => {\r\n        history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n  }\r\n\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  useEffect(() => {\r\n\r\n    if (cid) {\r\n      axios\r\n        .get('/api/course/sectionContent/' + cid)\r\n        .then(res => {\r\n          setContent(res.data)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [cid, id])\r\n  const editor = useRef(null)\r\n  const handleChangeDesripiton = e => {\r\n    debugger\r\n    // console.log(this.editor.current)\r\n    setContent({\r\n      ...Content,\r\n      description: e.target.innerHTML\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Add Content'></CardHeader>\r\n            <CardBody>\r\n              <Form onSubmit={saveData}>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>Tittle</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Content Name'\r\n                      value={Content.title}\r\n                      onChange={event =>\r\n                        setContent({ ...Content, title: event.target.value })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>Dscription</Form.Label>\r\n                    <div className='col-md-12'>\r\n                      <JoditEditor\r\n                        ref={editor}\r\n                        value={Content.description}\r\n                        config={config}\r\n                        tabIndex={1} // tabIndex of textarea\r\n                        onBlur={handleChangeDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>File upload </Form.Label>\r\n                    <Form.Control\r\n                      type='file'\r\n                      //   value={Content.file}\r\n                      onChange={event =>\r\n                        setContent({\r\n                          ...Content,\r\n                          file: event.target.files[0]\r\n                        })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Button\r\n                  variant='primary'\r\n                  type='button'\r\n                  onClick={() => {\r\n                    if (history.length > 1) {\r\n                      // this will take you back if there is history\r\n                      history.goBack()\r\n                    }\r\n                  }}\r\n                >\r\n                  cancel\r\n                </Button>\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentAll.js",["1056","1057","1058"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Button, Form, Col , Row } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\n\r\nimport { Tabs, Tab , ProgressBar } from 'react-bootstrap'\r\nimport JoditEditor from 'jodit-react'\r\nimport Progress from '../components/progressbar';\r\nimport { colors } from \"@material-ui/core\";\r\n\r\nexport default function VideoContent () {\r\n  const [Content, setContent] = useState({\r\n    title: '',\r\n    videoUrl : '' ,\r\n    videoLength : \"\",\r\n    videoDescription : '', \r\n    imageUrl : '' , \r\n    imageDescription : '',\r\n    pdfDescription : '',\r\n    pdfUrl : '',\r\n    textDescription : '',\r\n    audioUrl : '',\r\n    audioDescription : ''\r\n\r\n  })\r\n\r\n  const [videoUploadPercentage, setVideoUploadPercentage] = useState(0);\r\n  const [pdfUploadPercentage, setPdfUploadPercentage] = useState(0);\r\n\r\n\r\n  const { id, cid } = useParams()\r\n  const history = useHistory()\r\n\r\n  const saveData = async event => {\r\n    event.preventDefault()\r\n\r\n    // debugger\r\n    // let data = Content\r\n    // let formData = new FormData()\r\n    // for (var key in data) {\r\n    //   formData.append(key, data[key])\r\n    // }\r\n    debugger\r\n    await axios\r\n      .post('api/course/SectionContent/' + id, Content)\r\n      .then(res => {\r\n        history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n  }\r\n  const editor = useRef(null)\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const uploadVideo = async (file) => {\r\n    let formData = new FormData()\r\n    formData.append(\"file\"  , file)\r\n    \r\n    await axios\r\n      .post('api/course/savefile/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: progressEvent => {\r\n          setVideoUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n        }\r\n      })\r\n      .then(res => {\r\n        setContent({\r\n          ...Content,\r\n          videoUrl : res.data.filepath,\r\n          videoLength : res.data.duration\r\n        })\r\n        // history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n\r\n  }\r\n  const uploadImage = async (file) => {\r\n    let formData = new FormData()\r\n    formData.append(\"file\"  , file)\r\n    \r\n    await axios\r\n      .post('api/course/savefile/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then(res => {\r\n        setContent({\r\n          ...Content,\r\n          imageUrl : res.data.filepath\r\n        })\r\n        \r\n        // history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n\r\n  }\r\n  const uploadpdf = async (file) => {\r\n    let formData = new FormData()\r\n    formData.append(\"file\"  , file)\r\n    \r\n    await axios\r\n      .post('api/course/savefile/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: progressEvent => {\r\n          setPdfUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n        }\r\n      })\r\n      .then(res => {\r\n        setContent({\r\n          ...Content,\r\n          pdfUrl : res.data.filepath\r\n        })\r\n        \r\n        // history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n\r\n  }\r\n  const uploadAudio = async (file) => {\r\n    let formData = new FormData()\r\n    formData.append(\"file\"  , file)\r\n    \r\n    await axios\r\n      .post('api/course/savefile/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then(res => {\r\n        setContent({\r\n          ...Content,\r\n          audioUrl : res.data.filepath\r\n        })\r\n        \r\n        // history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n\r\n  }\r\n  useEffect(() => {\r\n    if (cid) {\r\n      axios\r\n        .get('/api/course/sectionContent/' + cid)\r\n        .then(res => {\r\n          console.log(\"here in update\" , res.data)\r\n          setContent(res.data)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [cid, id])\r\n  const handlePdfDesripiton = e => {\r\n    setContent({\r\n      ...Content,\r\n      pdfDescription : e.target.innerHTML\r\n    })\r\n  }\r\n  const handleVideoDesripiton = e => {\r\n    setContent({\r\n      ...Content,\r\n      videoDescription: e.target.innerHTML\r\n    })\r\n  }\r\n  const handleImageDesripiton = e => {\r\n    setContent({\r\n      ...Content,\r\n      imageDescription : e.target.innerHTML\r\n    })\r\n  }\r\n  const handleTextDesripiton = e => {\r\n    setContent({\r\n      ...Content,\r\n      textDescription : e.target.innerHTML\r\n    })\r\n  }\r\n  const handleAudioDesripiton = e => {\r\n    setContent({\r\n      ...Content,\r\n      audioDescription : e.target.innerHTML\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Add Content'></CardHeader>\r\n            <CardBody>\r\n              <Form onSubmit={saveData}>\r\n                <Form.Group>\r\n                  <Col>\r\n                    <Form.Label>Tittle</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Content Name'\r\n                      required\r\n                      value={Content.title}\r\n                      onChange={event =>\r\n                        setContent({\r\n                          ...Content,\r\n                          title: event.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Tabs defaultActiveKey='video' id='uncontrolled-tab-example'>\r\n                  <Tab eventKey='video' title='video'>\r\n                    <Form.Group>\r\n                    <Row>\r\n                      <Col className='mt-10'>\r\n                      \r\n                        <Form.Label>File upload </Form.Label>\r\n                        <Form.Control\r\n                          type='file'\r\n                          //   value={Content.file}\r\n                          onChange={event =>\r\n                            uploadVideo(event.target.files[0])\r\n                            // setContent({\r\n                            //   ...Content,\r\n                            //   file: event.target.files[0]\r\n                            // })\r\n                          }\r\n                        />\r\n                        </Col>\r\n                        </Row>\r\n\r\n\r\n                          <hr></hr>\r\n\r\n\r\n                        <Row>\r\n                          <Col>\r\n                        <ProgressBar now={videoUploadPercentage} label={`${videoUploadPercentage}%`} />\r\n                        </Col>\r\n                        </Row>\r\n                        \r\n                        \r\n                      \r\n                      \r\n                      \r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group>\r\n                      <Col className=''>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <div>\r\n                          <JoditEditor\r\n                            ref={editor}\r\n                            value={Content.videoDescription}\r\n                            config={config}\r\n                            tabIndex={1} // tabIndex of textarea\r\n                            onBlur={handleVideoDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Tab>\r\n                  <Tab eventKey='text' title='Text'>\r\n                    <Form.Group>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>Text</Form.Label>\r\n                        <div className=''>\r\n                          <JoditEditor\r\n                            ref={editor}\r\n                            value={Content.textDescription}\r\n                            config={config}\r\n                            tabIndex={1} // tabIndex of textarea\r\n                            onBlur={handleTextDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Tab>\r\n                  <Tab eventKey='Image' title='Image'>\r\n                    <Form.Group>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>File upload </Form.Label>\r\n                        <Form.Control\r\n                          type='file'\r\n                          //   value={Content.file}\r\n                          onChange={event =>\r\n                            uploadImage(event.target.files[0])\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <div className=''>\r\n                          <JoditEditor\r\n                            ref={editor}\r\n                            value={Content.imageDescription}\r\n                            config={config}\r\n                            tabIndex={1} // tabIndex of textarea\r\n                            onBlur={handleImageDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Tab>\r\n                  <Tab eventKey='Audio' title='Audio'>\r\n                    <Form.Group>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>Audio Upload </Form.Label>\r\n                        <Form.Control\r\n                          type='file'\r\n                          //   value={Content.file}\r\n                          onChange={event =>\r\n                            uploadAudio(event.target.files[0])\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <div className=''>\r\n                          <JoditEditor\r\n                            ref={editor}\r\n                            value={Content.audioDescription}\r\n                            config={config}\r\n                            tabIndex={1} // tabIndex of textarea\r\n                            onBlur={handleAudioDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Tab>\r\n                  <Tab eventKey='PDF' title='PDF'>\r\n                    <Form.Group>\r\n                    <Row>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>File upload </Form.Label>\r\n                        <Form.Control\r\n                          type='file'\r\n                          //   value={Content.file}\r\n                          onChange={event =>\r\n                            uploadpdf(event.target.files[0])\r\n                          }\r\n                        />\r\n                      </Col>\r\n                      </Row>\r\n                      <hr></hr>\r\n\r\n\r\n                        <Row>\r\n                          <Col>\r\n                        <ProgressBar now={pdfUploadPercentage} label={`${pdfUploadPercentage}%`} />\r\n                        </Col>\r\n                        </Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                      <Col className='mt-10'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <div className=''>\r\n                          <JoditEditor\r\n                            ref={editor}\r\n                            value={Content.pdfDescription}\r\n                            config={config}\r\n                            tabIndex={1} // tabIndex of textarea\r\n                            onBlur={handlePdfDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Tab>\r\n                </Tabs>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  variant='secondary'\r\n                  className='ml-3'\r\n                  type='button'\r\n                  onClick={() => {\r\n                    if (history.length > 1) {\r\n                      // this will take you back if there is history\r\n                      history.goBack()\r\n                    }\r\n                  }}\r\n                >\r\n                  cancel\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\batchForm.js",[],["1059","1060"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\branchForm.js",["1061"],"import React, { useState ,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Form, Col } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function BranchForm () {\r\n  const [Branch, setBranch] = useState( { id:null,name: '',  address: { address: '', city: '', state: '' } }\r\n  )\r\n\r\n  let { id } = useParams()\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n\r\n    debugger;\r\n    if(id){\r\n      axios\r\n      .get('/api/branch/branch/' + id)\r\n      .then(res => {\r\n        setBranch(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        return {}\r\n      })\r\n    }\r\n  }, [id])\r\n\r\n  const saveBranchData = event => {\r\n    event.preventDefault()\r\n    debugger\r\n    axios\r\n      .post('/api/branch/branch', Branch)\r\n      .then(res => {\r\n        history.push('/setting/Branch')\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n          <CardHeader title='Add Branch'>\r\n            \r\n         </CardHeader>\r\n            <CardBody>\r\n              <Form onSubmit={saveBranchData}>\r\n                <Form.Group controlId='formTitle' className=\"row\">\r\n                  <Col><Form.Label>Branch Name</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Branch Name'\r\n                    required\r\n                    value={Branch.name}\r\n                    onChange={event =>\r\n                      setBranch({ ...Branch, name: event.target.value })\r\n                    }\r\n                  /></Col>\r\n                  <Col><Form.Label>Address</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder=' street  address  / house number /shop number /'\r\n                    value={Branch.address.address}\r\n                    onChange={event =>\r\n                      setBranch({\r\n                        ...Branch,\r\n                        address: {\r\n                          ...Branch.address,\r\n                          address: event.target.value\r\n                        }\r\n                      })\r\n                    }\r\n                  /></Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city' className=\"row\">\r\n                  <Col><Form.Label>city </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='city'\r\n                    value={Branch.address.city}\r\n                    onChange={event =>\r\n                      setBranch({\r\n                        ...Branch,\r\n                        address: { ...Branch.address, city: event.target.value }\r\n                      })\r\n                    }\r\n                  /></Col>\r\n                  <Col><Form.Label>state </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='state'\r\n                    value={Branch.address.state}\r\n                    onChange={event =>\r\n                      setBranch({\r\n                        ...Branch,\r\n                        address: {\r\n                          ...Branch.address,\r\n                          state: event.target.value\r\n                        }\r\n                      })\r\n                    }\r\n                  /></Col>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classes.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\userProfile.js",["1062"],"import React from 'react'\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    CardHeaderToolbar\r\n  } from '../../../../_metronic/_partials/controls'\r\n  import { useParams } from 'react-router-dom'\r\n\r\nfunction UserProfile ({history}) {\r\n    let { id } = useParams()\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Profile'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/user/UserForm')\r\n                  }}\r\n                >\r\n                  New User\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody></CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\Userform.js",["1063"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n// import { ToastContainer, toast } from 'react-toastify';\r\nimport { Button, Form, Card, Col, Row } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport DropdownMultiselect from 'react-multiselect-dropdown-bootstrap'\r\n\r\nfunction Userform () {\r\n  const [User, setUser] = useState({\r\n    name: '',\r\n    // role: '',\r\n    password: '',\r\n    email: '',\r\n    mobile: '',\r\n    confirmPassword: '',\r\n    branch: '',\r\n    roles: []\r\n  })\r\n  const [MatchPassword , setMatchPassword] = useState([])\r\n  const [Roles, setRoles] = useState([])\r\n  const [RolesDdr, setRolesDdr] = useState([])\r\n  const [ShowBranch, setShowBranch] = useState(false)\r\n  const [Branches, setBranches] = useState([])\r\n\r\n  let { id } = useParams()\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    if (id) {\r\n      axios\r\n        .get('/api/staff/User/' + id)\r\n        .then(res => {\r\n          if (res.data.roles.length) {\r\n            setUser({ ...res.data, password: '', role: res.data.roles[0] })\r\n          } else {\r\n            setUser({ ...res.data, password: '' })\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n    axios\r\n      .get('/api/staff/UserRolesIstitute')\r\n      .then(res => {\r\n        setRoles(res.data)\r\n        var roles = res.data.map(item => {\r\n          return { key: item.id, label: item.name }\r\n        })\r\n        setRolesDdr(roles)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    axios\r\n      .get('/api/branch/Branch')\r\n      .then(res => {\r\n        setBranches(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id])\r\n  useEffect(() => {\r\n    \r\ndebugger;\r\n    var role = Roles.filter(m => User.roles.includes(m.id))\r\n    if (role.length) {\r\n    var adminRole= role.some(a=>a.type === 1) ;\r\n      setShowBranch(!adminRole);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [User])\r\n\r\n  const saveUser = event => {\r\n    event.preventDefault()\r\n    if(MatchPassword){\r\n      return alert(MatchPassword)\r\n    }\r\n    \r\n    axios.post('/api/staff/UserFormInstitute', User)\r\n      .then(res => {\r\n        history.push('/user')\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form onSubmit={saveUser}>\r\n                <Form.Group className='row'>\r\n                  <Col>\r\n                    <Form.Label>User Name</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder=' Full  Name'\r\n                      value={User.name}\r\n                      required\r\n                      onChange={event =>\r\n                        setUser({ ...User, name: event.target.value })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <div className='app'>\r\n                      <div className='preview-values '>\r\n                        <Form.Label>User Role </Form.Label>\r\n                        {/* {User.roles} */}\r\n                      </div>\r\n                      {/* {User.roles} */}\r\n                      {RolesDdr.length && (\r\n                        <DropdownMultiselect\r\n                       \r\n                          options={RolesDdr}\r\n                          name='roles'\r\n                          selected={User.roles}\r\n                          required\r\n                          handleOnChange={selected => {\r\n                            setUser({ ...User, roles: selected })\r\n                            // console.log(selected)\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  \r\n                  </Col>\r\n                   <Col>\r\n\r\n                   { ShowBranch && \r\n                   <>\r\n                     <Form.Label>User Branch </Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      placeholder=''\r\n                      disabled={!ShowBranch}\r\n                      value={User.branch}\r\n                      onChange={event =>\r\n                        setUser({ ...User, branch: event.target.value })\r\n                      }\r\n                    >\r\n                      <option value=\"\">select Branch</option>\r\n                      {Branches.map(item => (\r\n                        <option value={item._id} key={item._id}>\r\n                          {item.name}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    </>\r\n                    }\r\n                   \r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='formEmail' className='row'>\r\n                  <Col>\r\n                    <Form.Label> Email </Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder='user email'\r\n                      value={User.email}\r\n                      required\r\n                      onChange={event =>\r\n                        setUser({ ...User, email: event.target.value })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    {' '}\r\n                    <Form.Label> Mobile </Form.Label>\r\n                    <Form.Control\r\n                      type='number'\r\n                      placeholder='user mobile'\r\n                      value={User.mobile}\r\n                      required\r\n                      onChange={event => {\r\n                        \r\n                        setUser({ ...User, mobile: event.target.value })\r\n                      }}\r\n                      onBlur = {event => {\r\n                        if( event.target.value.length < 10){\r\n                          return alert(\"Mobile number must be of 10 digit\")\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label> Password </Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='user pasword'\r\n                      value={User.pasword}\r\n                      required\r\n                      onChange={event =>\r\n                        setUser({ ...User, password: event.target.value })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label> Confirm Password </Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='Confirm  pasword'\r\n                      value={User.confirmPassword}\r\n                      required\r\n                      onChange={event =>\r\n                        setUser({\r\n                          ...User,\r\n                          confirmPassword: event.target.value\r\n                        })\r\n                      }\r\n                      onBlur={event => {\r\n                        if(User.password === event.target.value){\r\n                          setMatchPassword(\"\")\r\n                        }\r\n                        else{\r\n                          setMatchPassword(\"Password don't match.\")\r\n                        }\r\n                       \r\n                      }}\r\n                      \r\n                    />\r\n                    {MatchPassword && <div className=\"text-danger\">{MatchPassword}</div> }\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n                {/* <ToastContainer limit={5} style={{backgroundColor : \"red\"}}/> */}\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Userform\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentform.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\components\\MenuActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionalTestList.js",["1064"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport TestActionFormatter from '../components/TestActionFormatter'\r\n\r\nexport default function SectionTest (props) {\r\n  const [Test, setTests] = useState([])\r\n\r\n  let history = useHistory()\r\n    const {id , sid} = useParams();\r\n  const EditHandler = (TId) => {\r\n    debugger;\r\n    history.push(`/Test/${id}/section/${sid}/sectionalTestForm/${TId}`)\r\n  }\r\n  const DeleteHandler = (TId) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios\r\n        .delete('/api/Test/' + sid + '/deleteTestById/' + TId )\r\n        .then(res => {alert(\"Test Deleted \");updateData() })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n  const GetQuestionHandler=(TId)=>{\r\n    history.push(`/Test/${TId}/Questions` )\r\n  }\r\n  const ChangeDescription = (cellContent) => {\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent }}></div>\r\n}\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },   \r\n    {\r\n      dataField: 'passingMarks',\r\n      text: 'passing',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'totalMarks',\r\n      text: 'Total',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'isComplete',\r\n      text: 'Status',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'description',\r\n      text: 'Description',\r\n      sort: true,\r\n      formatter : ChangeDescription ,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: TestActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestions:GetQuestionHandler,\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\nconst updateData=()=>{\r\n//   debugger\r\n  axios.get(`/api/Test/${sid}/getallTestBySectionIdAdmin`)\r\n    .then(res => {\r\n    debugger;\r\n    setTests(res.data[0].tests)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>{console.log('in the page')}\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title={`Test-`}>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push(`/Test/${id}/section/${sid}/sectionalTestForm`)\r\n                  }}\r\n                >\r\n                  Create Test\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Test ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Test}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Reviews.js",["1065","1066"],"import React , {useEffect ,useState } from 'react'\r\nimport { Row, Col,Card } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from 'react-router'\r\nexport default function Reviews(){\r\n  const [reviews , setReviews]  = useState()\r\n\r\n  const {courseId} = useParams()\r\n  useEffect(() => {\r\n    update()\r\n  }, [])\r\n  const update =() => {\r\n    axios.get('/api/course/getReviews/' + courseId).then((res)=>{\r\n      setReviews(res.data)\r\n    }).catch((res)=>{\r\n\r\n    })\r\n  }\r\n  \r\n   \r\n    return (\r\n        <Card classNameName='col-md-12'>\r\n        <Card.Header as='h5'>Student Reviews</Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col>\r\n            {reviews && reviews.length && reviews.map((element) => \r\n              <div style={{ width: '80%' }} key={element._id} >\r\n                <b><h3>{element.reviews.reviewBy[0].name}</h3></b>\r\n                <p>\r\n                  {element.reviews.review}\r\n                </p>\r\n               \r\n                <p>\r\n                  Created At : {element.reviews.createdAt.slice(0, 10)}\r\n                </p>\r\n              </div>\r\n            )\r\n            }\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\progressbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\CourseActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\branchActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\components\\userActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\TestActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\SVGIcon.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\LoadingDialog.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\PaginationToolbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\HeaderCheckbox.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\FieldFeedbackLabel.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples-kt\\KTCodeExample.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeBlockToolbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeExample.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ExamQuestionsActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\QuestionOptionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Curriculam.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\questionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\NewCourse.js",["1067"],"import React, { Component } from 'react'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport JoditEditor from 'jodit-react'\r\nimport axios from 'axios'\r\n\r\n\r\nexport default class NewCourse extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      // _id: null,\r\n      categories: null,\r\n      rating: 0,\r\n      numberOfRatings: 0,\r\n      numberOfStudent: 0,\r\n      title: '',\r\n      Description: '',\r\n      overview: '',\r\n      timeInHours: \"\",\r\n      timeInMinutes: \"\",\r\n      posterImageUrl: \"\",\r\n      file: ''\r\n    }\r\n    this.editor = React.createRef(null)\r\n    this.uploadFile = this.uploadFile.bind(this)\r\n    this.submitCourse = this.submitCourse.bind(this)\r\n    const {id}=this.props.match.params;\r\n\r\n  }\r\n  onChangeOverView = e => {\r\n    debugger\r\n    // console.log(this.editor.current)\r\n    this.setState(state => ({\r\n      overview: e.target.innerHTML\r\n    }))\r\n  }\r\n  uploadFile = event => {\r\n    console.log('uploding File')\r\n  }\r\n  submitCourse = event => {\r\n    console.log('uploding File')\r\n    console.log(this.id)\r\n    axios\r\n      .post('/api/course/course'+this.id)\r\n      .then(result => {\r\n        this.props.history.push('/setting/courses/'+this.id)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n\r\n    event.preventDefault()\r\n  }\r\n  componentDidMount () {\r\n\r\n    // const search = useLocation().search;\r\n\r\n    const search = this.props.location.search;\r\n    console.log(search);\r\n    const id = new URLSearchParams(search).get(\"cid\");\r\n    console.log(\"id\", id);\r\n    if (id) {\r\n      axios.get(\"/api/course/course/\"+id).then(response=>{\r\n        this.setState({\r\n          ...response.data\r\n        }) \r\n      })\r\n    \r\n    }\r\n  }\r\n  render () {\r\n    const config = {\r\n      readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n    }\r\n    return (\r\n      <div>\r\n        <div className='row'>\r\n          <div className='col-md-12'>\r\n            <Card>\r\n              <Form onSubmit={this.submitCourse} className='form'>\r\n              <Card.Body>\r\n                \r\n                  <Form.Group className='row'>\r\n                    <div className='col-md-6' controlId='formTitle'>\r\n                    <Form.Label>Course Title</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Course Title'\r\n                      value={this.state.title}\r\n                      onChange={event =>\r\n                        this.setState({ title: event.target.value })\r\n                      }\r\n                    />\r\n                    <Form.Text className='text-muted'>\r\n                      new course title.\r\n                    </Form.Text> </div>\r\n                    <div controlId='formDesc' className='col-md-6'>\r\n                \r\n                    <Form.Label>Course Description</Form.Label>\r\n                    <Form.Control \r\n                      type='text'\r\n                      placeholder='Course Description'\r\n                      value={this.state.Description}\r\n                      onChange={event =>\r\n                        this.setState({ Description: event.target.value })\r\n                      }\r\n                    /></div>\r\n                  </Form.Group>\r\n                  \r\n                  <Form.Group controlId='formThr' className='row'>\r\n                    <div className='col-md-6'>\r\n                    <Form.Label>Course Time (hr)</Form.Label>\r\n                    <Form.Control \r\n                      type='number'\r\n                      placeholder='Time in hours'\r\n                      value={this.state.timeInHours}\r\n                      onChange={event =>\r\n                        this.setState({ timeInHours: event.target.value })\r\n                      }\r\n                    /></div>\r\n                 \r\n                  <div className='col-md-6' controlId='formTmin'>\r\n                    <Form.Label>Course Time (min)</Form.Label>\r\n                    <Form.Control\r\n                      type='number'\r\n                      placeholder='Time in Minutes'\r\n                      value={this.state.timeInMinutes}\r\n                      onChange={event =>\r\n                        this.setState({ timeInMinutes: event.target.value })\r\n                      }\r\n                    /></div>\r\n                  </Form.Group>\r\n                  <Form.Group controlId='formOverview' className='row'>\r\n                    <Form.Label className='col-md-12 text-left mb-5'>Course Overview</Form.Label>\r\n                    {/* <Form.Control type='text' placeholder='Course Overview' /> */}\r\n                   <div className='col-md-12 mb-5'><JoditEditor\r\n                      ref={this.editor}\r\n                      value={this.state.overview}\r\n                      config={config}\r\n                      tabIndex={1} // tabIndex of textarea\r\n                      onBlur={this.onChangeOverView.bind(this)} // preferred to use only this option to update the content for performance reasons\r\n                      //    onChange={newContent=>{ this.setState(state=>({overview: newContent.target.textContent}))}}\r\n                    /></div> \r\n                  </Form.Group>\r\n\r\n\r\n                  <Form.Group controlId='Image'>\r\n                    <Form.Label>Course Description</Form.Label>\r\n                    <Form.Control\r\n                      type='file'\r\n                      //   value={this.state.Description}\r\n                      onChange={event =>\r\n                        this.setState({ file: event.target.files[0] })\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n\r\n                 \r\n              \r\n              </Card.Body>\r\n              <Card.Footer>\r\n              <Button variant='primary' type='submit'>\r\n                    Submit\r\n                  </Button>\r\n              </Card.Footer>\r\n              </Form>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestQuestion.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\courseblocks.js",["1068"],"import React from 'react'\r\nimport { Card, Row, Col, Button } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function CourseBlocks ({ item }) {\r\n  const history = useHistory()\r\n  return (\r\n    <>\r\n      <Col md={4} sm={12}>\r\n        <Card>\r\n          {console.log(item)}\r\n          <Card.Body>\r\n            <Card.Title>\r\n              Class Name :{item.classes.name}{' '}\r\n              <span\r\n                style={{ float: 'right' }}\r\n                className='badge badge-secondary'\r\n              >\r\n                {}\r\n              </span>\r\n            </Card.Title>\r\n            <Card.Text></Card.Text>\r\n            <Card.Text>Course Name : {item.courses.title}</Card.Text>\r\n            <Card.Text>\r\n              Description :{' '}\r\n              <div\r\n                dangerouslySetInnerHTML={{ __html: item.courses.Description }}\r\n              ></div>\r\n            </Card.Text>\r\n            <div>\r\n              <Card.Text>Ratings : {item.courses.numberOfRatings}</Card.Text>\r\n              <Card.Text>\r\n                Student Enrolled : {item.courses.numberOfStudent}\r\n              </Card.Text>\r\n              <Card.Text>\r\n\r\n                {/* Overview : <div  dangerouslySetInnerHTML={{    __html: item.courses.overview }}></div> */}\r\n              </Card.Text>\r\n              <Card.Text>Sections : {item.count}</Card.Text>\r\n            </div>\r\n            <img src={`${window.$apihost }/uploads/CourseProfile/`+item.courses.posterImageUrl} alt ={item.courses.title} width={\"100%\"} className=\"p-5\"></img>\r\n\r\n            <Button\r\n              variant='primary'\r\n              className=\"mr-10\"\r\n              onClick={() => {\r\n                history.push(`/ecourse/courseOverview/${item.courses._id}`)\r\n              }}\r\n            >\r\n              Details\r\n            </Button>\r\n            <Button\r\n              variant='primary'\r\n              className=\"mr-10\"\r\n\r\n              onClick={() => {\r\n                history.push(`/setting/course/${item.courses._id}/sections`)\r\n              }}\r\n            >\r\n              Content\r\n            </Button>\r\n            <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push(`/Test/CourseTest/${item.courses._id}/tests`)\r\n              }}\r\n            >\r\n              Tests\r\n            </Button>\r\n            <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push(`/setting/course/${item.courses._id}/showCourse`)\r\n              }}\r\n            >\r\n              Show\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </>\r\n  )\r\n}\r\n",["1069","1070"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\stats\\StatsWidget11.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\advance-tables\\AdvanceTablesWidget2.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget8.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget1.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\AuthPage.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\footer\\Footer.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\offcanvas\\QuickPanel.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\ForgotPassword.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\quick-user.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\brand\\Brand.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\Login.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\sticky-card.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\subheader.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside-toggle.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\brand.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\__mocks__\\userTableMock.js",["1071"],"import {toAbsoluteUrl} from \"../../../../_metronic/_helpers\";\r\n\r\nexport default [\r\n  {\r\n    id: 1,\r\n    username: \"admin\",\r\n    password: \"demo\",\r\n    email: \"admin@demo.com\",\r\n    accessToken: \"access-token-8f3ae836da744329a6f93bf20594b5cc\",\r\n    refreshToken: \"access-token-f8c137a2c98743f48b643e71161d90aa\",\r\n    roles: [1], // Administrator\r\n    pic: toAbsoluteUrl(\"/media/users/300_25.jpg\"),\r\n    fullname: \"Sean\",\r\n    occupation: \"CEO\",\r\n    companyName: \"Keenthemes\",\r\n    phone: \"456669067890\",\r\n    address: {\r\n      addressLine: \"L-12-20 Vertex, Cybersquare\",\r\n      city: \"San Francisco\",\r\n      state: \"California\",\r\n      postCode: \"45000\"\r\n    },\r\n    socialNetworks: {\r\n      linkedIn: \"https://linkedin.com/admin\",\r\n      facebook: \"https://facebook.com/admin\",\r\n      twitter: \"https://twitter.com/admin\",\r\n      instagram: \"https://instagram.com/admin\"\r\n    }\r\n  },\r\n  {\r\n    id: 2,\r\n    username: \"user\",\r\n    password: \"demo\",\r\n    email: \"user@demo.com\",\r\n    accessToken: \"access-token-6829bba69dd3421d8762-991e9e806dbf\",\r\n    refreshToken: \"access-token-f8e4c61a318e4d618b6c199ef96b9e55\",\r\n    roles: [2], // Manager\r\n    pic: toAbsoluteUrl(\"/media/users/100_2.jpg\"),\r\n    fullname: \"Megan\",\r\n    occupation: \"Deputy Head of Keenthemes in New York office\",\r\n    companyName: \"Keenthemes\",\r\n    phone: \"456669067891\",\r\n    address: {\r\n      addressLine: \"3487  Ingram Road\",\r\n      city: \"Greensboro\",\r\n      state: \"North Carolina\",\r\n      postCode: \"27409\"\r\n    },\r\n    socialNetworks: {\r\n      linkedIn: \"https://linkedin.com/user\",\r\n      facebook: \"https://facebook.com/user\",\r\n      twitter: \"https://twitter.com/user\",\r\n      instagram: \"https://instagram.com/user\"\r\n    }\r\n  },\r\n  {\r\n    id: 3,\r\n    username: \"guest\",\r\n    password: \"demo\",\r\n    email: \"guest@demo.com\",\r\n    accessToken: \"access-token-d2dff7b82f784de584b60964abbe45b9\",\r\n    refreshToken: \"access-token-c999ccfe74aa40d0aa1a64c5e620c1a5\",\r\n    roles: [3], // Guest\r\n    pic: toAbsoluteUrl(\"/media/users/default.jpg\"),\r\n    fullname: \"Ginobili Maccari\",\r\n    occupation: \"CFO\",\r\n    companyName: \"Keenthemes\",\r\n    phone: \"456669067892\",\r\n    address: {\r\n      addressLine: \"1467  Griffin Street\",\r\n      city: \"Phoenix\",\r\n      state: \"Arizona\",\r\n      postCode: \"85012\"\r\n    },\r\n    socialNetworks: {\r\n      linkedIn: \"https://linkedin.com/guest\",\r\n      facebook: \"https://facebook.com/guest\",\r\n      twitter: \"https://twitter.com/guest\",\r\n      instagram: \"https://instagram.com/guest\"\r\n    }\r\n  }\r\n];\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu2.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu3.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\scrolltop.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\BranchesSelectorDropdown.js",["1072"],"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport { Dropdown } from 'react-bootstrap'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\n\r\nimport { DropdownTopbarItemToggler } from '../../../../_partials/dropdowns'\r\n\r\nimport { connect } from 'react-redux'\r\n// import {actions} from \"../../../../../app/modules/Auth/_redux/authRedux \"\r\nimport { actions } from '../../../../../app/modules/Auth/_redux/authRedux'\r\n\r\nfunction BranchSelectorDropdown ({ branches, currentBranch, changeBranch }) {\r\n  return (\r\n    <>\r\n      {branches ? (\r\n        <Dropdown drop='down' >\r\n          <Dropdown.Toggle\r\n            as={DropdownTopbarItemToggler}\r\n            id='dropdown-toggle-my-Branches'\r\n          >\r\n            <OverlayTrigger\r\n              placement='bottom'\r\n              overlay={\r\n                <Tooltip id='language-panel-tooltip'>Select Branch</Tooltip>\r\n              }\r\n            >\r\n                            <div className='btn btn-dropdown  btn-lg mr-2'>\r\n\r\n              {/* <div className='btn btn-icon btn-clean btn-dropdown btn-lg mr-1'> */}\r\n                {currentBranch ? currentBranch.name : ''}\r\n                {/* <img\r\n              className=\"h-25px w-25px rounded\"\r\n              src={currentLanguage.flag}\r\n              alt={currentLanguage.name}\r\n            /> */}\r\n              </div>\r\n            </OverlayTrigger>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu className='p-0 m-0 dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround'>\r\n            <ul className='navi navi-hover py-4'>\r\n              {branches.filter(m=>m._id !== currentBranch._id).map(branch => (\r\n                <li\r\n                  key={branch._id}\r\n                  className={clsx('navi-item', {\r\n                    active: branch._id === currentBranch._id\r\n                  })}\r\n                >\r\n                  <a\r\n                    href='javscript:void()'\r\n                    onClick={() =>{alert(\"chamngeld\");changeBranch(branch._id)}}\r\n                    className='navi-link'\r\n                  >\r\n                    {/* <span className=\"symbol symbol-20 mr-3\">\r\n                  <img src={language.flag} alt={language.name} />\r\n                </span> */}\r\n                    <span className='navi-text'>{branch.name}</span>\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  console.log(state);\r\n  const { currentBranch, branches } = state.auth;\r\n  return { currentBranch, branches }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(BranchSelectorDropdown)\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenuList.js",["1073","1074","1075","1076","1077","1078","1079","1080","1081"],"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useContext } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SVG from 'react-inlinesvg'\r\nimport { toAbsoluteUrl, checkIsActive } from '../../../../_helpers'\r\n// import { permissionsContext } from '../../permissionManager/permissionContext'\r\nimport { permissionsContext } from '../../../../../app/modules/permissionManager/permissionContext'\r\n\r\nexport function AsideMenuList ({ layoutProps }) {\r\n  const location = useLocation()\r\n  const getMenuItemActive = (url, hasSubmenu = false) => {\r\n    return checkIsActive(location, url)\r\n      ? ` ${!hasSubmenu && 'menu-item-active'} menu-item-open `\r\n      : ''\r\n  }\r\n  const { isUserAuthenticate } = useContext(permissionsContext)\r\n\r\n  return (\r\n    <>\r\n      {/* begin::Menu Nav */}\r\n      <ul className={`menu-nav ${layoutProps.ulClasses}`}>\r\n        {/*begin::1 Level*/}\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/dashboard', false)}`}\r\n          aria-haspopup='true'\r\n        >\r\n          <NavLink className='menu-link' to='/dashboard'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Design/Layers.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Dashboard</span>\r\n          </NavLink>\r\n        </li>\r\n        {/*end::1 Level*/}\r\n\r\n        {/*begin::1 Level*/}\r\n\r\n        {/* <li\r\n          className={`menu-item ${getMenuItemActive('/setting', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Batch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>setting</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className={`menu-item ${getMenuItemActive('/setting/Batch')}`}\r\n                  aria-haspopup='true'\r\n                >\r\n                  <NavLink className='menu-link' to='/setting/Batch'>\r\n                    <i className='menu-bullet menu-bullet-dot'>\r\n                      <span />\r\n                    </i>\r\n                    <span className='menu-text'>Batch</span>\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </ul>\r\n          </div>\r\n        </li> */}\r\n\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/setting/Batch')}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Batch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Batch</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Batch</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/Student', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Student'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Student</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Students</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        {isUserAuthenticate('M3', 1) && (\r\n          <li\r\n            className={`menu-item ${getMenuItemActive('/user', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/user/BranchUser'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>User</span>\r\n              <i className='menu-arrow' />\r\n            </NavLink>\r\n\r\n            <div className='menu-submenu '>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className='menu-item  menu-item-parent'\r\n                  aria-haspopup='true'\r\n                >\r\n                  <span className='menu-link'>\r\n                    <span className='menu-text'>User</span>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n        )}\r\n        {isUserAuthenticate('M2', 1) && (\r\n          <li\r\n            className={`menu-item ${getMenuItemActive('/setting/classList', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/setting/classList'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Classes</span>\r\n              <i className='menu-arrow' />\r\n            </NavLink>\r\n\r\n            <div className='menu-submenu '>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className='menu-item  menu-item-parent'\r\n                  aria-haspopup='true'\r\n                >\r\n                  <span className='menu-link'>\r\n                    <span className='menu-text'>Classes</span>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\toggle.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\QuickActionsDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\UserNotificationsDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\search\\SearchResult.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\__mocks__\\mockAxios.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\ScrollTop.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage2.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\HTMLClassService.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\components\\QuickActions.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\footer.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside-menu.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TableRowSelectionHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\offcanvas.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownTopbarItemToggler.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Select.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples-kt\\KTCodeBlock.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\__mocks__\\mockAuth.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\index.js",["1082"],"import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport Classes from './pages/classes'\r\nimport ClassForm from './pages/classForm'\r\nimport Branches from './pages/branches'\r\nimport BranchForm from './pages/branchForm'\r\nimport Batches from './pages/batches'\r\nimport BatchForm from './pages/batchForm'\r\nimport Courses from './pages/Courses'\r\nimport CourseForm from './pages/CourseForm'\r\nimport CourseSections from './pages/CourseSections'\r\nimport CourseSectionform from './pages/CourseSectionform'\r\nimport ContentText from './pages/ContentText'\r\nimport ContentPdf from './pages/ContentPdf'\r\nimport ContentVideo from './pages/ContentVideo'\r\nimport ContentAudio from './pages/ContentAudio'\r\nimport ContentAll from './pages/ContentAll'\r\nimport CoursePlayer from './pages/CoursePlayer'\r\nimport ClassesForBranch from './pages/classesForBranch'\r\n\r\n\r\nexport default function ECourse () {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/setting/class' component={Classes} />\r\n      <Route exact path='/setting/Branch' component={Branches} />\r\n      <Route exact path='/setting/Batch' component={Batches} />\r\n\r\n      <Route exact path='/setting/classForm' component={ClassForm} />\r\n      <Route exact path='/setting/branchForm' component={BranchForm} />\r\n      <Route exact path='/setting/BatchForm/' component={BatchForm} />\r\n\r\n      <Route path='/setting/branchForm/:id'>\r\n        <BranchForm />\r\n      </Route>\r\n      <Route exact path='/setting/CourseForm/:id?'>\r\n        <CourseForm />\r\n      </Route>\r\n      <Route path='/setting/classForm/:id'>\r\n        <ClassForm />\r\n      </Route>\r\n      <Route exact path='/setting/BatchForm/:id'>\r\n        <BatchForm />\r\n      </Route>\r\n\r\n      <Route exact path='/setting/CourseForm/:id/:cid'>\r\n        <CourseForm />\r\n      </Route>\r\n      <Route exact path='/setting/Courses/:id'>\r\n        <Courses />\r\n      </Route>\r\n      <Route exact path='/setting/course/:id/sections'>\r\n        < CourseSections />\r\n      </Route>\r\n      <Route exact path='/setting/course/:id/showCourse'>\r\n        < CoursePlayer />\r\n      </Route>\r\n      \r\n      <Route exact path='/setting/course/:cid/sectionForm'>\r\n        < CourseSectionform />\r\n      </Route>\r\n      <Route exact path='/setting/course/:cid/sectionForm/:id'>\r\n        < CourseSectionform />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content'>\r\n        < ContentAll />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/text'>\r\n        < ContentText />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/video'>\r\n        < ContentVideo />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/audio'>\r\n        < ContentAudio />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/pdf'>\r\n        < ContentPdf />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/:cid'>\r\n        <ContentAll/>\r\n      </Route>\r\n      <Route exact path='/setting/classList'>\r\n        <ClassesForBranch/>\r\n      </Route>\r\n      \r\n{/* \r\n      <Redirect to='/error/error-v1' /> */}\r\n    </Switch>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\permissionRoles.js",["1083"],"import React, { useEffect, useState } from 'react'\r\nimport { Card, Table } from 'react-bootstrap'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nexport default function PermissionRoles () {\r\n  const [Roles, setRoles] = useState()\r\n  const history = useHistory()\r\n  const { id } = useParams()\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('/api/permission/roles')\r\n      .then(result => {\r\n        console.log(\"result here\" , result , \"end\")\r\n        setRoles(result.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    // axios\r\n    //   .get(`/api/permission/getRolesPermission/${id}`)\r\n    //   .then(result => {\r\n    //     console.log(result)\r\n    //     setRoles(result.data)\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err)\r\n    //   })\r\n  }, [id])\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Header title='Examinations'>\r\n              <Card.Title></Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <h1>Roles</h1>\r\n              <Table>\r\n                <tr>\r\n                \r\n                </tr>\r\n                {Roles &&\r\n                  Roles.length != 0 &&\r\n                  Roles.map(item => (\r\n                    <tr>\r\n                      <td\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={() =>\r\n                          history.push(`/permission/Role/${item.id}`)\r\n                        }\r\n                      >\r\n                        <h4>{item.name}</h4>\r\n                      </td>\r\n                    \r\n                    </tr>\r\n                  ))}\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\examQuestions.js",["1084"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport ActionFormatter from '../components/ExamQuestionsActionFormatter'\r\n\r\n\r\nexport default function ExamQuestions (props) {\r\n  const {id} = useParams();\r\n  const [questions, setQuestions] = useState([])\r\n\r\n  let history = useHistory()\r\n  const EditHandler = (qid) => {\r\n    debugger;\r\n    history.push('/Exams/'+id+'/QuestionForm/' + qid)\r\n  }\r\n  const DeleteHandler = (qid) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios.get('/api/Examination/getQuestion/'+qid)\r\n      .then(res => {\r\n        console.log(res)\r\n        axios\r\n        .post('/api/Examination/deleteQuestion/' + id ,res.data)\r\n        .then(res => {alert(\"Question Deleted \");updateData() })\r\n        .catch(() => {})\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      \r\n    }\r\n  }\r\n  const ShowHandler=(id)=>{\r\n    history.push('/Exams/Question/' + id)\r\n\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'question',\r\n      text: 'question',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },    \r\n    {\r\n      dataField: 'marks',\r\n      text: 'Marks',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    }, \r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n       formatter: ActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestion:ShowHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\n\r\n const  updateData = () => {\r\n    debugger\r\n    axios.get('/api/Examination/getQuestionListExam/'+id)\r\n      .then(res => {\r\n      debugger;         \r\n      setQuestions(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\nuseEffect(() => {\r\n  updateData()\r\n}, [id])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Exam Question'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push('/Exams/'+id+'/QuestionForm/')\r\n                  }}\r\n                >\r\n                  Add Question\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {questions ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={questions}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\question.js",["1085"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nexport default function Question () {\r\n  const history = useHistory()\r\n  const { id , qid } = useParams()\r\n  const [question, setQuestion] = useState({})\r\n  useEffect(() => {\r\n    debugger\r\n    axios\r\n      .get('/api/Test/getTestQuestionById/' + qid)\r\n      .then(res => {\r\n        setQuestion(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [id])\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Test Question'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/Test/' + id + '/QuestionForm/')\r\n                  }}\r\n                >\r\n                  add Question\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div className='qstnOpt'>\r\n                {/* <h3>Question</h3> */}\r\n                <div className='qstnTtl'>{question.question}</div>\r\n                <h3>Options</h3>\r\n                <div className='row'>\r\n                  {question.options &&\r\n                    question.options.map(item => (\r\n                      <>\r\n                        <div className='mb-3 mt-3 col-4'> \r\n                        <Form.Check\r\n            label={item.option}\r\n            type='checkbox'\r\n            placeholder='question'\r\n            disabled\r\n                          checked={JSON.parse(item.isRight)}\r\n          /></div>\r\n                      </>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestQuestions.js",["1086"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport ActionFormatter from '../components/TestQuestionsActionFormatter'\r\n\r\n\r\nexport default function CourseTestQuestions (props) {\r\n  const {id} = useParams();\r\n  const [questions, setQuestions] = useState([])\r\n\r\n  let history = useHistory()\r\n  const EditHandler = (qid) => {\r\n    debugger;\r\n    history.push('/Test/CourseTest/' + id + '/QuestionForm/' + qid)\r\n  }\r\n  const DeleteHandler = (QId) => {\r\n    if (window.confirm('do you really  want to delete11')) {\r\n      axios\r\n      .get(`/api/Course/getCourseTestQuestionById/${QId}`)\r\n      .then(res => {\r\n        console.log(res)\r\n        axios\r\n        .post('/api/Course/' + id +  '/deleteQuestion/' ,res.data)\r\n        .then(res => {alert(\"Question Deleted \");updateData() })\r\n        .catch(() => {})\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      \r\n    }\r\n  }\r\n  const ShowHandler=(qid)=>{\r\n    history.push('/Test/CourseTest/' + id + '/Question/' + qid)\r\n\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'question',\r\n      text: 'question',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },    \r\n    {\r\n      dataField: 'marks',\r\n      text: 'Marks',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    }, \r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n       formatter: ActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestion:ShowHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\n  const updateData=()=>{\r\n    debugger;\r\n    axios.get('/api/Course/'+id + '/getCourseTestQuestionList')\r\n      .then(res => {\r\n      debugger;  \r\n      setQuestions(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    }\r\n      useEffect(() => {\r\n        updateData()\r\n      }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Test Question'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/Test/CourseTest/' + id + '/QuestionForm/')\r\n                  }}\r\n                >\r\n                  Add Question\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {questions ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={questions}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestForm.js",["1087","1088","1089","1090","1091","1092","1093"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Form, Card , Col } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport JoditEditor from 'jodit-react'\r\n\r\nexport default function TestForm () {\r\n  const [Test, setTest] = useState({\r\n    name: '',\r\n    description: '',\r\n    class: '',\r\n    testLevel : '',\r\n    totalMarks: '',\r\n    timeInHours: '',\r\n    timeInMinutes: '',\r\n    passingMarks: ''\r\n  })\r\n  const [CourseId , setCourseId] = useState()\r\n  const [CourseList , setCourseList] = useState()\r\n  const [Class, setClasses] = useState([])\r\n  // const [Years, setYears] = useState([])\r\n  const editor = React.useRef(null)\r\n  const config = {\r\n   defaultActionOnPaste: 'insert_as_html',\r\n   askBeforePasteFromWord: false,\r\n   askBeforePasteHTML: false,\r\n   readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n}\r\nconst handleDescripiton = e => {\r\n  debugger;\r\n  console.log(e.target.innerHTML)\r\n  setTest({\r\n    ...Test,\r\n    description : e.target.innerHTML\r\n  })\r\n}\r\n  let { id ,  TId } = useParams()\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    setCourseId(id)\r\n    if(id == undefined){\r\n      axios.get('/api/course/getAllClassCoursesNameForTestadd').then(res => {\r\n        setCourseList(res.data)\r\n      })\r\n    }\r\n    debugger\r\n    if (id) {\r\n      axios.get(`/api/Test/getTestById/${TId}`)\r\n    .then(res => {\r\n    debugger;\r\n    setTest(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n    }\r\n  }, [TId, id])\r\n\r\n  const saveTest = event => {\r\n    event.preventDefault()\r\n    axios\r\n      .post(`/api/Course/${CourseId}/saveTestDetails`, Test)\r\n      .then(res => {\r\n        if(id == undefined){\r\n          history.push(`/Test/testlist`)\r\n\r\n        }\r\n        else{\r\n        history.push(`/Test/CourseTest/${id}/tests`)\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form onSubmit={saveTest} className='form'>\r\n\r\n                <Form.Group controlId='formTitle' className='row'>\r\n\r\n                {id == undefined && <div className='col-md-4'>\r\n                    <Form.Label>Select Class </Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      as='select'\r\n                      placeholder=''\r\n                      // disabled={Exam._id?\"true\":\"false\"}\r\n                      // value={Exam.class}\r\n                      onChange={event =>\r\n                        setCourseId(event.target.value)\r\n                      }\r\n                    >\r\n                      <option value=\"\" >select class</option>\r\n                      {CourseList && CourseList.length && CourseList.map(item => (\r\n                        <option value={item.courses._id} key={item.courses._id}>\r\n                          {item.courses.title}\r\n                        </option>\r\n                      ))\r\n                      }\r\n                    </Form.Control>\r\n                  </div>\r\n                }\r\n\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Test Name</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test Name'\r\n                      value={Test.name}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, name: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Total Marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='Total Marks'\r\n                      value={Test.totalMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, totalMarks: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>passing  marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='passing Marks'\r\n                      value={Test.passingMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, passingMarks: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                 \r\n\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Hours</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='time in  hours'\r\n                      value={Test.timeInHours}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInHours: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Minutes</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='time in  minutes'\r\n                      value={Test.timeInMinutes}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInMinutes: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Test Level</Form.Label>\r\n                      \r\n                      <Form.Control as=\"select\" defaultValue=\"Choose...\" required={true} onChange={(event) =>\r\n                        setTest({ ...Test, testLevel: event.target.value})}>\r\n                          <option value=\"\">Test Level</option>\r\n                        <option>Easy</option>\r\n                        <option>Intermediate</option>\r\n                        <option>Hard</option>\r\n                      </Form.Control>\r\n                  </div>\r\n                  \r\n                  <div className='col-md-12'>\r\n                    <Form.Label>Test description</Form.Label>\r\n                    < JoditEditor\r\n                        ref={editor}\r\n                        value={Test.description}\r\n                        config={config}\r\n                        tabIndex={1} // tabIndex of textarea\r\n                        onBlur={event =>\r\n                          setTest({ ...Test, description : event.target.innerHTML})\r\n                        }\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\CourseContent.js",["1094","1095","1096","1097","1098","1099","1100","1101"],"import React, { Component } from 'react'\r\nimport { Button, Form, Accordion, Card, Col, Nav, Row } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { Typography, Grid, Paper } from '@material-ui/core'\r\nimport { ExpansionPanel } from '@material-ui/core'\r\nimport { ExpansionPanelSummary } from '@material-ui/core'\r\nimport { ExpansionPanelDetails } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { actions } from './../_redux/EcourseRedux'\r\n\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   CardHeader,\r\n//   CardHeaderToolbar\r\n// } from '../../../../_metronic/_partials/controls'\r\n// import Typography from '@material-ui/core'\r\n\r\n// const useStyles  = theme => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//   },\r\n//   paper: {\r\n//     padding: theme.spacing(2),\r\n//     textAlign: 'center',\r\n//     color: theme.palette.text.secondary,\r\n//   },\r\n// })\r\n\r\nclass CourseContent extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    const search = this.props.location.search\r\n    console.log(search)\r\n    const id = new URLSearchParams(search).get('id')\r\n\r\n    this.state = {\r\n      courseId: id,\r\n      sections: [],\r\n      expanded: 'panel1'\r\n    }\r\n    this.handleChange = panel => () => {\r\n      if (this.state.expanded != panel) this.setState({ expanded: panel })\r\n    }\r\n    this.CreateSection = () => {\r\n      this.props.history.push('/Ecourse/CourseContent/section')\r\n    }\r\n\r\n    this.EditSection = (item, e) => {\r\n      this.props.dispatch(actions.SetCurrentSection(item))\r\n      this.props.history.push('/Ecourse/CourseContent/section?id=' + item._id)\r\n      e.stopPropagation()\r\n    }\r\n    this.DeleteSection = (id, e) => {\r\n      debugger\r\n      if (window.confirm('Do you realy Want to delete Compelete Section ?')) {\r\n        debugger\r\n        axios\r\n          .delete('/api/course/courseSection/', {\r\n            data: { courseId: this.state.courseId, _id: id }\r\n          })\r\n          .then(response => {\r\n            this.loaddata()\r\n          })\r\n      }\r\n      e.stopPropagation()\r\n    }\r\n    this.loaddata = () => {\r\n      debugger\r\n      if (this.state.courseId) {\r\n        axios\r\n          .get('/api/course/course/' + this.state.courseId)\r\n          .then(response => {\r\n            this.setState({\r\n              ...response.data\r\n            })\r\n          })\r\n      }\r\n    }\r\n  }\r\n  addSectionContent = (section, event) => {\r\n    this.props.dispatch(actions.SetCurrentSection(section))\r\n    this.props.history.push('/Ecourse/CourseContent/section/Content')\r\n  }\r\n  EditSectionContent = (section, item, event) => {\r\n    this.props.dispatch(actions.SetCurrentSection(section))\r\n    this.props.dispatch(actions.SetCurrentContent(item))\r\n    this.props.history.push(\r\n      '/Ecourse/CourseContent/section/Content?id=' + item._id\r\n    )\r\n  }\r\n  DeleteSectionContent = (_id, e) => {\r\n    debugger\r\n    if (window.confirm('Do you realy Want to delete this Content ?')) {\r\n      debugger\r\n      axios\r\n        .delete('/api/course/courseSectionContent', {\r\n          data: { id: _id }\r\n        })\r\n        .then(response => {\r\n          this.loaddata()\r\n        })\r\n    }\r\n    // e.stopPropagation()\r\n  }\r\n  componentDidMount () {\r\n    this.unblock = this.props.history.block(targetLocation => {\r\n      // take your action here\r\n      return true\r\n    })\r\n    debugger\r\n    this.props.dispatch(actions.SetCurrentContent(null))\r\n    this.props.dispatch(actions.SetCurrentSection(null))\r\n    const search = this.props.location.search\r\n    console.log(search)\r\n    const id = new URLSearchParams(search).get('id')\r\n    if (id) {\r\n      axios.get('/api/course/course/' + id).then(response => {\r\n        this.setState({\r\n          ...response.data\r\n        })\r\n      })\r\n    }\r\n  }\r\n  componentWillUnmount () {\r\n    this.unblock()\r\n  }\r\n  render () {\r\n    // const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className='row'>\r\n            <div className='col-md-12'>\r\n              <Card>\r\n                <Card.Header as='h5'>\r\n                  {this.state.title}\r\n                  <button                   \r\n                    className='btn btn-primary float-right'\r\n                    onClick={this.CreateSection}\r\n                  >\r\n                    Add New Section\r\n                  </button>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col><Card.Text>{this.state.Description}</Card.Text></Col>\r\n                    <Col md=\"auto\">\r\n                    <Nav variant=\"pills\"  className=\"justify-content-end mb-5\" defaultActiveKey=\"#first\">\r\n      <Nav.Item>\r\n        <Nav.Link href=\"#first\">Video</Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link href=\"#link\">Audio</Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link href=\"#disabled\">PDF</Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link href=\"#disabled\">Text</Nav.Link>\r\n      </Nav.Item>\r\n    </Nav></Col>\r\n                    </Row>\r\n                  \r\n                  <Accordion>\r\n                    {this.state.sections.map(item => (\r\n                      <Card key={item._id}>\r\n                        <Card.Header>\r\n                          <div className=\"row\"><div className=\"col ANewSec\">\r\n                        <Accordion.Toggle\r\n                            as={Button}\r\n                            variant='text'\r\n                            eventKey={item._id}\r\n                          >\r\n                            <h5>{item.name}</h5>\r\n                          </Accordion.Toggle>\r\n                          </div> \r\n                          <Col md=\"auto\">\r\n                          <div\r\n                            className='btn-group'\r\n                            role='group'\r\n                            aria-label='' \r\n                          >\r\n                            <button\r\n                              className='btn btn-primary pull-right'\r\n                              style={{ marginLeft: 'auto' }}\r\n                              onClick={e => {\r\n                                this.addSectionContent(item, e)\r\n                              }}\r\n                            >\r\n                              add Content\r\n                            </button>\r\n                            <button\r\n                              className=' btn btn-primary pull-right'\r\n                              style={{ marginLeft: 'auto' }}\r\n                              onClick={e => {\r\n                                this.EditSection(item, e)\r\n                              }}\r\n                            >\r\n                              Edit\r\n                            </button>\r\n                            <button\r\n                              className=' btn btn-danger pull-right'\r\n                              onClick={event => {\r\n                                this.DeleteSection(item._id, event)\r\n                              }}\r\n                            >\r\n                              delete\r\n                            </button>\r\n                          </div>\r\n                          </Col>\r\n                          </div>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey={item._id}>\r\n                          <Card.Body>\r\n                            {item.contents.map(c => {\r\n                              return (\r\n                                <div className='row' key={c._id} style={{ margin: '10px' }}>\r\n                                  <Col>{c.title}</Col>\r\n\r\n                                  <Col>{c.type}</Col>\r\n                                  <Col xs md=\"2\">\r\n                                    <div\r\n                                      className='btn-group'\r\n                                      role='group'\r\n                                      aria-label='' \r\n                                    >\r\n                                      <button\r\n                                        className='btn btn-primary pull-right'\r\n                                        onClick={event => {\r\n                                          this.EditSectionContent(\r\n                                            item,\r\n                                            c,\r\n                                            event\r\n                                          )\r\n                                        }}\r\n                                      >\r\n                                        Edit\r\n                                      </button>\r\n                                      <button\r\n                                        className='btn btn-danger pull-right'\r\n                                        onClick={event => {\r\n                                          this.DeleteSectionContent(\r\n                                            c._id                                           \r\n                                          )\r\n                                        }}\r\n                                      >\r\n                                        delete\r\n                                      </button>\r\n                                    </div>\r\n                                  </Col>\r\n                                </div>\r\n                              )\r\n                            })}\r\n                          </Card.Body>\r\n                        </Accordion.Collapse>\r\n                      </Card>\r\n                    ))}\r\n                  </Accordion>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  return { CourseID: state.course.CurrentCourseId }\r\n}\r\nexport default connect(mapStateToProps)(CourseContent)\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentAudio.js",["1102"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Button, Form, Col } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport JoditEditor from 'jodit-react'\r\n\r\nexport default function ContentAudio () {\r\n  const [Content, setContent] = useState({\r\n    description: '',\r\n    title: '',\r\n    contentUrl: '',\r\n    type: 'audio'\r\n  })\r\n  const { id, cid } = useParams()\r\n  const history = useHistory()\r\n\r\n  const saveData = async event => {\r\n    event.preventDefault()\r\n    debugger\r\n    let data = Content\r\n    let formData = new FormData()\r\n    for (var key in data) {\r\n      formData.append(key, data[key])\r\n    }\r\n    debugger\r\n    await axios\r\n      .post('api/course/SectionContent/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then(res => {\r\n        history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n  }\r\n\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  useEffect(() => {\r\n\r\n    if (cid) {\r\n      axios\r\n        .get('/api/course/sectionContent/' + cid)\r\n        .then(res => {\r\n          setContent(res.data)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [cid, id])\r\n  const editor = useRef(null)\r\n  const handleChangeDesripiton = e => {\r\n    debugger\r\n    // console.log(this.editor.current)\r\n    setContent({\r\n      ...Content,\r\n      description: e.target.innerHTML\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Add Content'></CardHeader>\r\n            <CardBody>\r\n              <Form onSubmit={saveData}>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>Tittle</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Content Name'\r\n                      value={Content.title}\r\n                      onChange={event =>\r\n                        setContent({ ...Content, title: event.target.value })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>Dscription</Form.Label>\r\n                    <div className='col-md-12'>\r\n                      <JoditEditor\r\n                        ref={editor}\r\n                        value={Content.description}\r\n                        config={config}\r\n                        tabIndex={1} // tabIndex of textarea\r\n                        onBlur={handleChangeDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>File upload </Form.Label>\r\n                    <Form.Control\r\n                      type='file'\r\n                      //   value={Content.file}\r\n                      onChange={event =>\r\n                        setContent({\r\n                          ...Content,\r\n                          file: event.target.files[0]\r\n                        })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Button\r\n                  variant='primary'\r\n                  type='button'\r\n                  onClick={() => {\r\n                    if (history.length > 1) {\r\n                      // this will take you back if there is history\r\n                      history.goBack()\r\n                    }\r\n                  }}\r\n                >\r\n                  cancel\r\n                </Button>\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\branches.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseForm.js",["1103","1104","1105","1106","1107","1108","1109"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport JoditEditor from 'jodit-react'\r\nimport axios from 'axios'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nexport default function CourseForm () {\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const editor = useRef(null)\r\n  const [Course, setCourse] = useState({\r\n    rating: 0,\r\n    numberOfRatings: 0,\r\n    numberOfStudent: 0,\r\n    title: '',\r\n    Description: '',\r\n    overview: '',\r\n    posterImageUrl: '',\r\n    file: ''\r\n  })\r\n  const [ClassList , setClassList] = useState()\r\n  const [ClassId , setClassId] = useState()\r\n  const [ClassSelected , setClassSelected] = useState()\r\n  const { id } = useParams()\r\n  const { cid } = useParams()\r\n  const history = useHistory()\r\n  const onChangeOverView = e => {\r\n    debugger\r\n    // console.log(this.editor.current)\r\n    setCourse({\r\n      ...Course,\r\n      overview: e.target.innerHTML\r\n    })\r\n  }\r\n  // const uploadFile = async () => {}\r\n  const SaveCourse = async event => {\r\n    event.preventDefault()\r\n    debugger\r\n    var ImageUrl = ''\r\n    let courseObject =Course;\r\n    if (Course.file) {\r\n      let formData = new FormData()\r\n      formData.append('file', Course.file)\r\n      debugger\r\n      await axios\r\n        .post('api/course/uploadCourseProfile/', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        })\r\n        .then(res => {\r\n          debugger\r\n          ImageUrl = res.data.name\r\n          // setCourse({ ...Course, posterImageUrl: res.data.name })\r\n        })\r\n        .catch(() => {\r\n          console.log('error in file upload')\r\n        })\r\n    }\r\n\r\n    if (ImageUrl) {\r\n      courseObject.posterImageUrl=ImageUrl\r\n    }\r\n    // console.log(ImageUrl)\r\n    debugger\r\n    if(ClassId == undefined){\r\n      return alert(\"Please Select Class\")\r\n    }\r\n    await axios\r\n      .post('/api/course/course/' + ClassId, courseObject)\r\n      .then(result => {\r\n        debugger\r\n        history.goBack()\r\n        if(id == undefined){\r\n\r\n          history.push('/ecourse/Courses')\r\n        }\r\n        else{\r\n          \r\n          history.push('/setting/courses/' + id)\r\n        }\r\n        \r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    debugger\r\n  }\r\n  useEffect(() => {\r\n    debugger\r\n    setClassId(id)\r\n    axios.get('/api/course/getAllClassNameForCourseAdd')\r\n          .then(res => {\r\n            setClassList(res.data[0].classes)\r\n          }).catch(err => {\r\n            console.log(err)\r\n          })\r\n\r\n    if (cid) {\r\n      axios\r\n        .get('/api/course/course/' + cid)\r\n        .then(res => {\r\n          setCourse(res.data.course)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [cid])\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Form onSubmit={SaveCourse} className='form'>\r\n              <Card.Body>\r\n                <Form.Group className='row'>\r\n                  \r\n               {id == undefined && <div className='col-md-4'>\r\n                    <Form.Label>Select Class </Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      as='select'\r\n                      placeholder=''\r\n                      // disabled={Exam._id?\"true\":\"false\"}\r\n                      // value={Exam.class}\r\n                      onChange={event =>\r\n                        setClassId(event.target.value)\r\n                      }\r\n                    >\r\n                      <option value=\"\">select class</option>\r\n                      {ClassList && ClassList.length && ClassList.map(item => (\r\n                        <option value={item._id} key={item._id}>\r\n                          {item.name}\r\n                        </option>\r\n                      ))\r\n                      }\r\n                    </Form.Control>\r\n                  </div>\r\n                }\r\n                  <div className='col-md-6' controlId='formTitle'>\r\n                    <Form.Label>Course Title</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Course Title'\r\n                      value={Course.title}\r\n                      required\r\n                      onChange={event =>\r\n                        setCourse({ ...Course, title: event.target.value })\r\n                      }\r\n                    />\r\n                    <Form.Text className='text-muted'>\r\n                      new course title.\r\n                    </Form.Text>\r\n                  </div>\r\n                  <div controlId='formDesc' className='col-md-6'>\r\n                    <Form.Label>Course Description</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Course Description'\r\n                      value={Course.Description}\r\n                      onChange={event =>\r\n                        setCourse({\r\n                          ...Course,\r\n                          Description: event.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='formOverview' className='row'>\r\n                  <Form.Label className='col-md-12 text-left mb-5'>\r\n                    Course Overview\r\n                  </Form.Label>\r\n                  {/* <Form.Control type='text' placeholder='Course Overview' /> */}\r\n                  <div className='col-md-12 mb-5'>\r\n                    <JoditEditor\r\n                      ref={editor}\r\n                      value={Course.overview}\r\n                      config={config}\r\n                      tabIndex={1} // tabIndex of textarea\r\n                      onBlur={onChangeOverView} // preferred to use only this option to update the content for performance reasons\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='Image'>\r\n                  <Form.Label>Course Description</Form.Label>\r\n                  <Form.Control\r\n                    type='file'\r\n                    //   value={Course.Description}\r\n                    onChange={event =>\r\n                      setCourse({ ...Course, file: event.target.files[0] })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                {Course.posterImageUrl && (\r\n                  <img                     src={\r\n                      'http://localhost:4000/uploads/CourseProfile/' +\r\n                      Course.posterImageUrl\r\n                    }\r\n                    width='200px'\r\n                  />\r\n                )}\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Card.Footer>\r\n            </Form>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\UserList.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\Courses.js",["1110","1111","1112","1113"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Card, Row } from 'react-bootstrap'\r\nimport CourseBlocks from '../components/courseblocks'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function Courses (props) {\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const CourseContenHandler = id => {\r\n    debugger\r\n    history.push('/ecourse/courseOverview')\r\n  }\r\n\r\n  // const [Courses, setCourse] = useState([])\r\n  const [Class, setClass] = useState([])\r\n  const [BranchesName, setBranchesName] = useState('')\r\n  const updateData = () => {\r\n    debugger\r\n    axios\r\n      .get('/api/course/getAllCoursesOfAllClasses')\r\n      .then(res => {\r\n        debugger\r\n        setBranchesName(res.data[0].branches)\r\n        setClass(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [id])\r\n  return (\r\n    <div>\r\n      {Class && (\r\n        <div className='row'>\r\n          <div className='col-md-12'>\r\n            <Row>\r\n              <Card className='col-md-12'>\r\n                <Card.Header as='h5'>\r\n                  Course\r\n                 \r\n                    <button\r\n                      type='button'\r\n                      className='btn btn-primary pull-left'\r\n                      style={{float:\"right\"}}\r\n                      onClick={() => {\r\n                        history.push('/setting/CourseForm/')\r\n                      }}\r\n                    >\r\n                      New course\r\n                    </button>\r\n                 \r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row>\r\n                    {Class &&\r\n                      Class.length != 0 &&\r\n                      Class.map(item => (\r\n\r\n                        <CourseBlocks item={item} key={item.courses._id} />\r\n                      ))}\r\n                    {Class && Class.length == 0 && (\r\n                      <p>NO COURSE IS AVAILABLE FOR YOU</p>\r\n                    )}\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentPasswordReset.js",["1114"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction PasswordReset () {\r\n  const [Student, setStudent] = useState({\r\n    password: '',\r\n    confirmPassword: ''\r\n  })\r\n\r\n  let { id } = useParams()\r\n  let history = useHistory()\r\n\r\n  const saveStudent = event => {\r\n    event.preventDefault()\r\n    debugger\r\n    axios\r\n      .post('/api/student/StudentPasswordReset/' + id, Student)\r\n      .then(res => {\r\n        alert('Password Changed')\r\n        history.push('/student')\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Form onSubmit={saveStudent} className='form'>\r\n              <Card.Body>\r\n                <Form.Group className='row'>\r\n                  <div className='col-md-4' controlId='form'>\r\n                    <Form.Label> Password </Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='user pasword'\r\n                      value={Student.pasword}\r\n                      onChange={event =>\r\n                        setStudent({\r\n                          ...Student,\r\n                          password: event.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4' controlId='form'>\r\n                    <Form.Label> Confirm Password </Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='Confirm  pasword'\r\n                      value={Student.confirmPassword}\r\n                      onChange={event =>\r\n                        setStudent({\r\n                          ...Student,\r\n                          confirmPassword: event.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Card.Body>\r\n            </Form>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default PasswordReset\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\student.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\TestQuestionsActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\coursetestblocks.js",["1115","1116"],"import React from 'react'\r\nimport { Card, Row, Col, Button } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function TestBlocks({ test , classes ,course }) {\r\n  const history = useHistory()\r\n  return (\r\n    <>\r\n      <Col md={4} sm={12}>\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title>Test Name :  { test.name}   <span style={{ float: \"right\" }} className='badge badge-secondary'>{test.testLevel}</span></Card.Title>\r\n            <Card.Text>Class Name :{classes.name}</Card.Text>\r\n            <Card.Text>Course Name : {course.title}</Card.Text>\r\n            <Card.Text>Test Level : {test.testLevel}</Card.Text>\r\n\r\n            \r\n            <span className={\"badge badge-danger\"}>{test.isComplete == true ? \"Complete\" : \"Not Complete\"} </span>\r\n            <hr></hr>\r\n            <Card.Text> <div  dangerouslySetInnerHTML={{    __html: test.description }}></div></Card.Text>\r\n            <div>\r\n            <p >Total Time : {test.timeInHours} : {test.timeInMinutes} hr  </p>\r\n            <p style={{ float: \"right\" }}>passing Marks: {test.passingMarks}</p>\r\n            <p>Total Marks: {test.totalMarks}</p>\r\n            </div>\r\n  \r\n            {console.log(\"test\"  , test)}\r\n            <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push('/Test/CourseTest/' + test._id + '/Questions')\r\n              }}\r\n            >\r\n              Show Test\r\n            </Button>\r\n            {/* <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push('/' + test._id)\r\n              }}\r\n            >\r\n              start Course\r\n            </Button> */}\r\n            {/* <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push('Courses/Tests/' + course._id)\r\n              }}\r\n            >\r\n              Test\r\n            </Button> */}\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\TestForm.js",["1117","1118"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function TestForm () {\r\n  const [Test, setTest] = useState({\r\n    name: '',\r\n    description: '',\r\n    class: '',\r\n    totalMarks: '',\r\n    timeInHours: '',\r\n    timeInMinutes: '',\r\n    passingMarks: ''\r\n  })\r\n  const [Class, setClasses] = useState([])\r\n  // const [Years, setYears] = useState([])\r\n\r\n  let { id ,  TId } = useParams()\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    \r\n    debugger\r\n    if (id) {\r\n      console.log(id , TId)\r\n      axios.get(`/api/Test/getTestById/${TId}`)\r\n    .then(res => {\r\n    debugger;\r\n    console.log(\"res\" , res)\r\n    setTest(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n    }\r\n  }, [TId, id])\r\n\r\n  const saveTest = event => {\r\n    event.preventDefault()\r\n    axios\r\n      .post(`/api/Test/${id}/saveTestDetails`, Test)\r\n      .then(res => {\r\n        history.push(`/Test/Course/${id}/tests`)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form onSubmit={saveTest} className='form'>\r\n                <Form.Group controlId='formTitle' className='row'>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Test Name</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test Name'\r\n                      value={Test.name}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, name: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Total Marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='Total Marks'\r\n                      value={Test.totalMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, totalMarks: event.target.value })\r\n                      }\r\n                    />set\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>passing  marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='passing Marks'\r\n                      value={Test.passingMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, passingMarks: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                 \r\n\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Hours</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='time in  hours'\r\n                      value={Test.timeInHours}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInHours: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Minutes</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='time in  minutes'\r\n                      value={Test.timeInMinutes}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInMinutes: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='col-md-12'>\r\n                    <Form.Label>Test description</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test description'\r\n                      value={Test.description}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, description: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Overview.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\feesChangeFormatterBranch.js",["1119","1120"],"// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useState , useEffect } from 'react' \r\nimport SVG from 'react-inlinesvg'\r\n\r\nimport { toAbsoluteUrl } from '../../../../_metronic/_helpers'\r\n\r\nexport default function FeesChangeActionFormatter ({\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  updateFees\r\n}) {\r\n  const [IsInput, setIsInput] = useState(false)\r\n  const [feesValue, setFeesValue] = useState(cellContent)\r\n  const Edit = () => {\r\n    setIsInput(true)\r\n  }\r\n  const save = () => {\r\n    updateFees(row._id, feesValue , row.name , row.fees)\r\n    setIsInput(false)\r\n  }\r\n  \r\n    useEffect(() => {\r\n      debugger;\r\n    }, [feesValue])\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n      {IsInput && (\r\n        <>\r\n           <button onClick={save} className={'btn btn-success'} style={{\"display\":\"inline\"}}>\r\n            save\r\n          </button>\r\n          <input\r\n            // value= {feesValue}\r\n            placeholder={`${row.fees} Give New Amount`}\r\n            onChange={event => {\r\n              setFeesValue(event.target.value)\r\n              \r\n            }}\r\n          />\r\n       \r\n        </>\r\n      )}\r\n      {!IsInput && (\r\n        <>\r\n          <div>\r\n          <button onClick={Edit} className={'btn btn-primary '} style={{\"display\":\"inline\"}}>\r\n              edit\r\n            </button>\r\n            {row.fees}\r\n            \r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\batchActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\classActionFormatterBranch.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\components\\StudentActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\LanguageSelectorDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\MyCartDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\UserProfileDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget3.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MaterialThemeProvider.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage5.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\MyPage.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\Logout.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\index.js",["1121"],"import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport SectionsTest from './pages/SectionTestList'\r\nimport TestForm from './pages/TestForm'\r\nimport TestQuestion from './pages/testQuestion'\r\nimport QuestionForm from './pages/questionForm'\r\nimport Question from './pages/question'\r\nimport CourseTestForm from './pages/CourseTestForm'\r\nimport CourseTestList from './pages/CourseTestList'\r\nimport CourseTestQuestions from './pages/CourseTestQuestions'\r\nimport CourseTestQuestion from './pages/CourseTestQuestion'\r\nimport CourseQuestionForm from './pages/CourseQuestionForm'\r\nimport SectionTestList from './pages/SectionalTestList'\r\nimport SectionalTestForm from './pages/SectionalTestForm'\r\nimport TestList from './pages/testList'\r\n\r\nexport default function Student() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/Test/Course/:id/tests'>\r\n        <SectionsTest/>\r\n      </Route>\r\n      <Route exact path='/Test/Course/:id/TestForm'>\r\n        <TestForm/>\r\n      </Route>\r\n      <Route exact path='/Test/Course/:id/TestForm/:TId'>\r\n        <TestForm/>\r\n      </Route>\r\n      <Route exact path='/Test/:id/Questions'>\r\n        <TestQuestion />\r\n      </Route> \r\n      <Route exact path='/Test/:id/Question/:qid'>\r\n        <Question />\r\n      </Route>\r\n      <Route exact path='/Test/:id/QuestionForm'>\r\n        <QuestionForm />\r\n      </Route>\r\n      <Route exact path='/Test/:id/QuestionForm/:qid'>\r\n        <QuestionForm />\r\n      </Route>  \r\n\r\n      <Route exact path='/Test/CourseTest/:id?/TestForm'>\r\n        <CourseTestForm/>\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/TestForm/:TId'>\r\n        <CourseTestForm/>\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/tests'>\r\n        <CourseTestList/>\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/Questions'>\r\n        <CourseTestQuestions/>\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/Question/:qid'>\r\n        <CourseTestQuestion />\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/QuestionForm'>\r\n        <CourseQuestionForm />\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/QuestionForm/:qid'>\r\n        <CourseQuestionForm />\r\n      </Route>\r\n      \r\n\r\n      <Route exact path='/Test/:id/section/:sid/tests'>\r\n        < SectionTestList />\r\n      </Route>\r\n      <Route exact path='/Test/:id/section/:sid/sectionalTestForm'>\r\n        < SectionalTestForm />\r\n      </Route>\r\n      <Route exact path='/Test/:id/section/:sid/sectionalTestForm/:tid'>\r\n        < SectionalTestForm />\r\n      </Route>\r\n      <Route exact path='/Test/testlist'>\r\n        < TestList />\r\n      </Route>\r\n      \r\n      \r\n     \r\n      {/* <Route  exact path='/Student/testprofile' component={StudentProfile} /> */}\r\n\r\n     \r\n    </Switch>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\testList.js",["1122","1123","1124","1125"],"import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport TestBlocks from \"../components/coursetestblocks\"\r\n\r\nexport default function TestList() {\r\n  debugger;\r\n  const [Test, setTest] = useState([])\r\n  const { id } = useParams();\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    debugger;\r\n    axios\r\n      .get('/api/course/getAllTestListToAdmin')\r\n      .then(res => {\r\n        console.log(\"here in coursetestlist\" , res.data)\r\n        setTest(res.data)\r\n      })\r\n      .catch(() => { })\r\n    //   axios\r\n    //   .get('/api/course/getLastResults')\r\n    //   .then(res => {\r\n    //     setResults(res.data)\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err)\r\n    //   })\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <Row>{console.log(\"in the page\")}\r\n        <Card className='col-md-12'>\r\n          <Card.Header as='h5'>Tests\r\n          \r\n          <button\r\n              type='button'\r\n              className='btn btn-primary pull-left'\r\n              style={{ float: 'right' }}\r\n              onClick={() => {\r\n                history.push('/Test/CourseTest/TestForm')\r\n              }}\r\n            >\r\n              New Test\r\n            </button>\r\n</Card.Header>\r\n          <Card.Body>\r\n            <Row>{console.log(\"testdata\" ,Test.length)}\r\n              {Test && Test.length != 0 \r\n              &&\r\n                Test.map(item => (\r\n\r\n                  <TestBlocks test={item.test} classes={item.classes} course={item.courses} key={item.test._id} />\r\n                ))\r\n              }\r\n                {Test && Test.length == 0 && (\r\n                     <p>NO TEST IS AVAILABLE </p>\r\n                    )}\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n      {/* <Row>\r\n        <Card className='col-md-12'>\r\n          <Card.Header as='h5'>Exam Results</Card.Header>\r\n          <Card.Body>\r\n            <Row>\r\n              {results && results.length &&\r\n                results.map(item => (\r\n                  <ResultBlock result={item}  />\r\n                ))}\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row> */}\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\branchUserList.js",["1126"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\nimport userActionFormatter from '../components/userActionFormatter'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\n//   import BranchActionFormatter from '../components/branchActionFormatter'\r\nimport { permissionsContext } from '../../permissionManager/permissionContext'\r\n\r\nfunction UserList (props) {\r\n  const { isUserAuthenticate } = useContext(permissionsContext)\r\n\r\n  const [Users, setUsers] = useState([])\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    debugger\r\n    axios\r\n      .get('/api/staff/User')\r\n      .then(res => {\r\n        setUsers(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  const EditUser = id => {\r\n    history.push('/user/BranchUserForm/' + id)\r\n  }\r\n  const DeleteUser = id => {\r\n    debugger\r\n    if (window.confirm('do you really want to delete')) {\r\n      axios.delete('/api/staff/staff/' + id).then(res => {\r\n        alert('deleted')\r\n      })\r\n    }\r\n  }\r\n  const InactiveteUser = id => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'mobile',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: userActionFormatter,\r\n      formatExtraData: {\r\n        EditUserAction: EditUser,\r\n        DeleteUserAction: DeleteUser,\r\n        isUserAuthenticate\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Users'>\r\n              <CardHeaderToolbar>\r\n                {isUserAuthenticate('M3',2) && \r\n                  <button\r\n                    type='button'\r\n                    className='btn btn-primary'\r\n                    onClick={() => {\r\n                      props.history.push('/user/BranchUserForm')\r\n                    }}\r\n                  >\r\n                    New User\r\n                  </button>\r\n                }\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Users ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Users}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps}\r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseQuestionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\scheduleExam.js",["1127","1128","1129"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport ScheduleExamActionFormatter from '../components/ScheduleExamActionFormatter'\r\nimport DatePicker from 'react-datepicker'\r\nimport { registerLocale , setDefaultLocale } from \"react-datepicker\";\r\nimport { enUS } from 'date-fns/locale'\r\nregisterLocale(\"enUS\", enUS); // register it with the name you want\r\nsetDefaultLocale(\"enUS\");\r\nexport default function ScheduleExam (props) {\r\n  const [Exams, setExams] = useState([])\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [Exam , setExam] = useState()\r\n  const [ReExam , setReExam] = useState()\r\n  let history = useHistory()\r\n\r\n  const DeleteHandler = (isActive, _id , examId ,  startDate ,endDate , classID ) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      var data = {isActive, _id , examId ,  startDate ,endDate , classID }\r\n      axios\r\n        .post('/api/Examination/deleteScheduleExam/'  , data)\r\n        .then(res => {\r\n          alert('Exam Deleted')\r\n          updateData()\r\n        })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n  const ChangeDescription = (cellContent) => {\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent }}></div>\r\n  }\r\n  const ChangeStartDate = (cellContent) => {\r\n    setReExam({...ReExam , startDate :cellContent})\r\n    return cellContent ? cellContent.slice(0,10) : cellContent\r\n  }\r\n  const ChangeEndDate = (cellContent) => {\r\n    setReExam({...ReExam  , endDate : cellContent })\r\n    return cellContent ? cellContent.slice(0,10) : cellContent\r\n  }\r\n  const statusFormatter = (cellContent) => {\r\n    return cellContent == true ? \"Active\" : \"InActive\" \r\n  }\r\n  const editActive = (cellContent) => {\r\n    return \r\n  }\r\n  const ChangeState = (val , id , classID) => {\r\n\r\n    debugger;\r\n   var data = {isActive : val , id , classID}\r\n   console.log(data);\r\n\r\n    axios.post('/api/examination/updateActive' ,data ).then((res) => {\r\nconsole.log(res.data)\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    })\r\n    updateData()\r\n  }\r\n  \r\n  const editHandler = (id , className , examName , startDate , endDate , classID , examId) => {\r\n    console.log(id , className , examName, startDate, endDate)\r\n    setReExam({...ReExam , id : id , className : className , examName :examName ,classID : classID , examId : examId  })\r\n    setExam({ ...Exam , id : id , className : className , examName :examName ,endDate :endDate  , startDate :startDate })\r\n    setModalShow(true)\r\n }\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: 'classes.examSchedule._id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'classes.examSchedule.examId[0].name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'classes.name',\r\n      text: 'Class',\r\n      sort: true,\r\n      //cellClasses: 'bg-primary',\r\n      //headerClasses: 'bg-primary',\r\n\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n\r\n    {\r\n      dataField: 'classes.examSchedule.startDate',\r\n      text: 'StartDate',\r\n      sort: true,\r\n      formatter : ChangeStartDate,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'classes.examSchedule.endDate',\r\n      text: 'EndDate',\r\n      sort: true,\r\n      formatter :  ChangeEndDate ,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'classes.examSchedule.isActive',\r\n      text: 'Status',\r\n      sort: true,\r\n      formatter: statusFormatter,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'classes.examSchedule.examId[0].description',\r\n      text: 'Description',\r\n      sort: true,\r\n      formatter: ChangeDescription,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: ScheduleExamActionFormatter,\r\n      formatExtraData: {\r\n        ChangeState : ChangeState , \r\n        EditAction : editHandler , \r\n        DeleteAction: DeleteHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n  ]\r\n  const updateData = () => {\r\n    debugger\r\n    axios\r\n      .get('/api/examination/getExamSchedule')\r\n      .then(res => {\r\n        debugger\r\n        setExams(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n  const submitReSchedule =  (id) => {\r\n    \r\n    axios.post('/api/examination/reSchedule' ,ReExam ).then((res) => {\r\n      if(res.status === 200){\r\n        setModalShow(false)\r\n        updateData()\r\n      }\r\n    }).catch((error) => {\r\n\r\n    })\r\n    \r\n  }\r\n\r\n  function MyVerticallyCenteredModal (props) {\r\n    return (\r\n       \r\n      <Modal\r\n        {...props}\r\n        size='lg'\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n        key={props.data.id}\r\n      >\r\n        <Modal.Header >\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            ReSchedule Exam\r\n          </Modal.Title>\r\n          <button onClick={() => setModalShow(false)}>close</button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <h4>Class Name : &nbsp;{props.data.className}</h4><br></br>\r\n          <h4>Exam Name : &nbsp;{props.data.examName}</h4>\r\n          <br></br>\r\n          <br></br>\r\n          <p>\r\n            Start Date :     <DatePicker value={Exam.startDate ?  Exam.startDate.slice(0,10) : Exam.startDateNew }  selected={Exam.startDateNew }   onChange={newDate =>{ setReExam({...ReExam , startDate : newDate}) ; setExam({...Exam , startDateNew : newDate , startDate : \"\"})} } />\r\n\r\n          </p>\r\n          <p>\r\n            End Date :  <DatePicker  value={Exam.endDate ? Exam.endDate.slice(0,10) : Exam.endDateNew } selected={Exam.endDateNew }  onChange={newDate => { setReExam({...ReExam , endDate : newDate}) ; setExam({...Exam , endDateNew : newDate , endDate : \"\"})} }/>\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={() =>\r\n            submitReSchedule(props.data.id)\r\n            }>Submit</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        \r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Examinations'>\r\n              <CardHeaderToolbar>\r\n                {/* <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/Exams/ExamForm')\r\n                  }}\r\n                >\r\n                  Create Exam\r\n                </button> */}\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Exams ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Exams}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps}\r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n              {Exam && ReExam &&  <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                data= {Exam}\r\n              />}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ScheduleExamActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownCustomToggler.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\ModalProgressBar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\SplashScreen.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\builder\\Builder.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget9.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\mixed\\MixedWidget14.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\AnimateLoading.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Input.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeBlock.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\batches.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classForm.js",["1130","1131","1132"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Button, Form, Card, Col } from 'react-bootstrap'\r\nimport JoditEditor from 'jodit-react'\r\n\r\n\r\nexport default function ClassForm() {\r\n  let { id, cid } = useParams()\r\n  const [ClassVar, setClass] = useState({ name: '', description: '',fees:\"\"})\r\n  let history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      debugger;\r\n      axios.get('/api/branch/class/' + id).then(res => {\r\n        if (res.data) {\r\n          setClass({\r\n            id: res.data._id,\r\n            name: res.data.name,\r\n            description: res.data.description,\r\n            fees: res.data.fees,\r\n          })\r\n          // initial._id = id\r\n          // initial.name = res.data.name\r\n          // initial.description = res.data.description\r\n        }\r\n      })\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  const saveClassFormData = async event => {\r\n    event.preventDefault()\r\n    debugger\r\n    await axios\r\n      .post('/api/branch/class', ClassVar)\r\n      .then(res => {\r\n        debugger;\r\n        history.push('/setting/class');\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const getData = () => {\r\n    debugger\r\n  }\r\n  const editor = React.useRef(null)\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const handleDescripiton = e => {\r\n    debugger;\r\n    setClass({\r\n      ...ClassVar , \r\n      description : e.target.innerHTML\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form onSubmit={saveClassFormData}>\r\n                <Form.Group controlId='formTitle' className=\"row\">\r\n                  <Form.Label>Class</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Class Title'\r\n                    required\r\n                    value={ClassVar.name}\r\n                    onChange={event =>\r\n                      setClass({ ...ClassVar, name: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='formTitle' className=\"row\">\r\n                  <Form.Label>Fees</Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    placeholder='amount'\r\n                    value={ClassVar.fees}\r\n                    onChange={event =>\r\n                      setClass({ ...ClassVar, fees: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='formTitle' className=\"row\">\r\n                  {/* <Col>\r\n                  \r\n                  <Form.Label>description</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Class description'\r\n                      value={ClassVar.description}\r\n                      onChange={event =>\r\n                        setClass({ ...ClassVar, description: event.target.value })\r\n                      }\r\n                    />\r\n                    </Col> */}\r\n\r\n\r\n\r\n                  <Form.Label>Description</Form.Label>\r\n                  < JoditEditor\r\n                    ref={editor}\r\n                    value={ClassVar.description}\r\n                    config={config}\r\n                    tabIndex={1} // tabIndex of textarea\r\n                    onBlur={handleDescripiton} // preferred to use only this option to update the content for performance reasons\r\n                  />\r\n\r\n\r\n                </Form.Group>\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentText.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionTestList.js",["1133"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport TestActionFormatter from '../components/TestActionFormatter'\r\n\r\nexport default function SetionTest (props) {\r\n  const [Test, setTests] = useState([])\r\n\r\n  let history = useHistory()\r\n    const {id} = useParams();\r\n  const EditHandler = (TId) => {\r\n    debugger;\r\n    history.push(`/Test/Course/${id}/TestForm/${TId}`)\r\n  }\r\n  const DeleteHandler = (TId) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios\r\n        .delete('/api/Test/' + id + '/deleteTestById/' + TId )\r\n        .then(res => {alert(\"Test Deleted \");updateData() })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n  const GetQuestionHandler=(TId)=>{\r\n    history.push(`/Test/${TId}/Questions` )\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },   \r\n    {\r\n      dataField: 'passingMarks',\r\n      text: 'passing',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'totalMarks',\r\n      text: 'Total',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'isComplete',\r\n      text: 'Status',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'description',\r\n      text: 'Description',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: TestActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestions:GetQuestionHandler,\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\nconst updateData=()=>{\r\n//   debugger\r\n  axios.get(`/api/Test/${id}/getAllTestsBySection`)\r\n    .then(res => {\r\n    debugger;\r\n    setTests(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title={`Test-`}>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push(`/Test/Course/${id}/TestForm`)\r\n                  }}\r\n                >\r\n                  Create Test\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Test ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Test}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\LocalStorageHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\Aside.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ExamActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenu.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\header-menu\\HeaderMenuWrapper.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\scrolltop.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header-topbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header-menu.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\ControlPanelButton.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\header-menu\\HeaderMenu.js",["1134","1135"],"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl, checkIsActive } from \"../../../../_helpers\";\r\n\r\nexport function HeaderMenu({ layoutProps }) {\r\n    const location = useLocation();\r\n    const getMenuItemActive = (url) => {\r\n        return checkIsActive(location, url) ? \"menu-item-active\" : \"\";\r\n    }\r\n\r\n    return <div\r\n        id=\"kt_header_menu\"\r\n        className={`header-menu header-menu-mobile ${layoutProps.ktMenuClasses}`}\r\n        {...layoutProps.headerMenuAttributes}\r\n    >\r\n        {/*begin::Header Nav*/}\r\n        <ul className={`menu-nav ${layoutProps.ulClasses}`}>\r\n            {/*begin::1 Level*/}\r\n            <li className={`menu-item menu-item-rel ${getMenuItemActive('/dashboard')}`}>\r\n                <NavLink className=\"menu-link\" to=\"/dashboard\">\r\n                    <span className=\"menu-text\">Dashboard</span>\r\n                    {layoutProps.rootArrowEnabled && (<i className=\"menu-arrow\" />)}\r\n                </NavLink>\r\n            </li>\r\n           \r\n        </ul>\r\n        {/*end::Header Nav*/}\r\n    </div>;\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\menu.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\App.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\LayoutConfig.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\CourseDetails.js",["1136"],"import React, { useEffect, useState } from 'react'\r\nimport { Card, Row, Col, Badge, Tabs, Tab } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n// import CourseBlock from '../Components/CourseBlock'\r\nimport Announcement from '../components/Announcement'\r\nimport Curriculam from '../components/Curriculam'\r\nimport Faqs from '../components/FAQs'\r\nimport Overview from '../components/Overview'\r\nimport Reviews from '../components/Reviews'\r\nimport CardSideStickey from '../components/cardSideStickey'\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from 'react-router'\r\nexport default function CoursesDetails () {\r\n  const [coursedetails, setCoursesdetails] = useState(null)\r\n  const [averageRating , setAverageRating] = useState()\r\n  const [noOfStudent , setnoOfStudent] = useState()\r\n\r\n  const {courseId} = useParams()\r\n  const history = useHistory()\r\n  const EditHandler = () => {\r\n    history.push('/setting/CourseForm/' + coursedetails[0].class + '/' + courseId)\r\n  }\r\n  useEffect(() => {\r\n    debugger\r\n    axios.get('/api/course/courseDetailByCourseId/' + courseId).then((res)=>{\r\n      console.log(res.data)\r\n      setCoursesdetails(res.data)\r\n    }).catch((res)=>{\r\n\r\n    })\r\n    axios.get('/api/course/getAverageRatings/' + courseId).then((res)=>{\r\n      setAverageRating(res.data[0])\r\n    }).catch((res)=>{\r\n\r\n    })\r\n    axios.get('/api/course/noOfStudentInCourse/' + courseId).then((res)=>{\r\n      setnoOfStudent(res.data)\r\n    }).catch((res)=>{\r\n\r\n    })\r\n    \r\n  }, [])\r\n  return (\r\n    <div>\r\n      {coursedetails && coursedetails.length && (\r\n      <Row>\r\n        <Col md={9}>\r\n          <Row>\r\n            <Col>\r\n              <Card classNameName='col-md-12'>\r\n                <Card.Header as='h5'>Course</Card.Header>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col>\r\n                      <div style={{ width: '80%' }}>\r\n                        <h3>{coursedetails &&  coursedetails[0].title}</h3>\r\n                        <p>{coursedetails &&  coursedetails[0].Description}\r\n                        </p>\r\n                        <div>\r\n                          <Badge variant='secondary'>{averageRating && averageRating.averageRating.toFixed(2)}</Badge>\r\n                          <span classNameName='fa fa-star checked'></span>\r\n                          <span classNameName='fa fa-star checked'></span>\r\n                          <span classNameName='fa fa-star checked'></span>\r\n                          <span classNameName='fa fa-star'></span>\r\n                          <span classNameName='fa fa-star'></span>\r\n                          <span classNameName='fa fa-child ml-15 mr-2'>\r\n                            {' '}\r\n                          </span>{' '}\r\n                          {noOfStudent && noOfStudent.noOfStudent} Student Enrolled\r\n                        </div>\r\n                        <p>\r\n                        Created by <b>{coursedetails.length && coursedetails[0].createdBy[0].name}</b> Last updated &nbsp;\r\n                          {coursedetails && coursedetails[0].modifiedDate.slice(0, 10)}\r\n                        </p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <div>\r\n                <Tabs defaultActiveKey='overview' id='uncontrolled-tab-example'>\r\n                  <Tab eventKey='overview' title='Overview'>\r\n                    <Overview overview={coursedetails[0].overview}/>\r\n                  </Tab>\r\n                  <Tab eventKey='curriculam' title='Curriculam'>\r\n                    <Curriculam data={coursedetails}/>\r\n                  </Tab>\r\n                  <Tab eventKey='Faq' title='Faq'>\r\n                    <Faqs />\r\n                  </Tab>\r\n                  <Tab eventKey='reviews' title='Reviews'>\r\n                    <Reviews id={courseId} />\r\n                  </Tab>\r\n                  <Tab eventKey='Announcement' title='Announcement'>\r\n                    <Announcement  id={coursedetails[0].createdBy[0]._id}/>\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n\r\n\r\n        <CardSideStickey EditHandler={EditHandler} data={coursedetails}/>\r\n\r\n        \r\n        </Col>\r\n      </Row>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\SubHeader.js",["1137"],"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, {useMemo, useLayoutEffect, useEffect} from \"react\";\r\nimport objectPath from \"object-path\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {QuickActions} from \"./components/QuickActions\";\r\nimport {BreadCrumbs} from \"./components/BreadCrumbs\";\r\nimport {getBreadcrumbsAndTitle, useSubheader} from \"../../_core/MetronicSubheader\";\r\nimport {useHtmlClassService} from \"../../_core/MetronicLayout\"\r\n\r\nexport function SubHeader() {\r\n  const uiService = useHtmlClassService();\r\n  const location = useLocation();\r\n  const subheader = useSubheader();\r\n\r\n  const layoutProps = useMemo(() => {\r\n    return {\r\n      config: uiService.config,\r\n      subheaderMobileToggle: objectPath.get(\r\n          uiService.config,\r\n          \"subheader.mobile-toggle\"\r\n      ),\r\n      subheaderCssClasses: uiService.getClasses(\"subheader\", true),\r\n      subheaderContainerCssClasses: uiService.getClasses(\r\n          \"subheader_container\",\r\n          true\r\n      )\r\n    };\r\n  }, [uiService]);\r\n\r\n  useLayoutEffect(() => {\r\n    const aside = getBreadcrumbsAndTitle(\"kt_aside_menu\", location.pathname);\r\n    const header = getBreadcrumbsAndTitle(\"kt_header_menu\", location.pathname);\r\n    const breadcrumbs = (aside && aside.breadcrumbs.length > 0) ? aside.breadcrumbs : header.breadcrumbs;\r\n    subheader.setBreadcrumbs(breadcrumbs);\r\n    subheader.setTitle((aside && aside.title && aside.title.length > 0) ? aside.title : header.title);\r\n    // eslint-disable-next-line\r\n  }, [location.pathname]);\r\n\r\n  // Do not remove this useEffect, need from update title/breadcrumbs outside (from the page)\r\n  useEffect(() => {}, [subheader]);\r\n\r\n  return (\r\n      <div\r\n          id=\"kt_subheader\"\r\n          className={`subheader py-2 py-lg-4   ${layoutProps.subheaderCssClasses}`}\r\n      >\r\n        <div\r\n            className={`${layoutProps.subheaderContainerCssClasses} d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap`}\r\n        >\r\n          {/* Info */}\r\n          <div className=\"d-flex align-items-center flex-wrap mr-1\">\r\n            {layoutProps.subheaderMobileToggle && (\r\n                <button\r\n                    className=\"burger-icon burger-icon-left mr-4 d-inline-block d-lg-none\"\r\n                    id=\"kt_subheader_mobile_toggle\"\r\n                >\r\n                  <span/>\r\n                </button>\r\n            )}\r\n\r\n            <div className=\"d-flex align-items-baseline mr-5\">\r\n              <h5 className=\"text-dark font-weight-bold my-2 mr-5\">\r\n                <>\r\n                  {subheader.title}\r\n                </>\r\n                {/*<small></small>*/}\r\n              </h5>\r\n\r\n            </div>\r\n\r\n\r\n            <BreadCrumbs items={subheader.breadcrumbs} />\r\n          </div>\r\n\r\n          {/* Toolbar */}\r\n          {/* <div className=\"d-flex align-items-center\">\r\n            <a href=\"#\" className=\"btn btn-light btn-sm font-weight-bold\" id=\"kt_dashboard_daterangepicker\"\r\n               data-toggle=\"tooltip\" title=\"Select dashboard daterange\" data-placement=\"left\">\r\n              <span className=\"text-muted font-weight-bold mr-2\" id=\"kt_dashboard_daterangepicker_title\">Today</span>\r\n              <span className=\"text-primary font-weight-bold\" id=\"kt_dashboard_daterangepicker_date\">Aug 16</span>\r\n            </a>\r\n            <QuickActions/>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classesForBranch.js",["1138","1139","1140","1141","1142","1143"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport input from 'util'\r\nimport { Button, Form  } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport ClassActionFormatter from '../components/classActionFormatterBranch'\r\nimport FeesChangeFormatter from '../components/feesChangeFormatterBranch'\r\n\r\nexport default function ClassesForBranch (props) {\r\n  const [Classes, setClasses] = useState(null)\r\n  //  const [singleClass, setSingleClass] = useState()\r\n\r\n  // const EditClassHandler = (id, name, ClassFees) => {\r\n  // }\r\n\r\n  // const DeleteClassHandler = id => {\r\n  //   if (window.confirm('do you really  want to delete')) {\r\n  //     axios\r\n  //       .delete('/api/branch/class/' + id)\r\n  //       .then(res => {\r\n  //         updateData()\r\n  //       })\r\n  //       .catch(() => {})\r\n  //   }\r\n  // }\r\n  \r\n  // const getCoursesHandler = id => {\r\n  //   props.history.push('/setting/Courses/' + id)\r\n  // }\r\n  const FormatDescription = cellContent => {\r\n    return <div dangerouslySetInnerHTML={{ __html: cellContent }}></div>\r\n  }\r\n\r\n  const feesFormatter = (cellContent, row, rowIndex) => {\r\n    return (\r\n      <>\r\n        {/* {cellContent} */}\r\n        <FeesChangeFormatter cellContent={cellContent} row={row} rowIndex={rowIndex}  updateFees={updateFees}/>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Class',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'description',\r\n      text: 'Description',\r\n      sort: true,\r\n      formatter: FormatDescription,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'fees',\r\n      text: 'fees',\r\n      sort: true,\r\n      formatter: feesFormatter\r\n      // formatExtraData: {\r\n      // },\r\n    },\r\n    // {\r\n    //   dataField: 'action',\r\n    //   text: 'Actions',\r\n    //   formatter: ClassActionFormatter,\r\n    //   formatExtraData: {\r\n    //     EditClassAction: EditClassHandler,\r\n    //     DeleteClassAction: DeleteClassHandler,\r\n    //     getCoursesAction: getCoursesHandler\r\n    //   },\r\n    //   classes: 'text-right pr-0',\r\n    //   headerClasses: 'text-right pr-3',\r\n    //   style: {\r\n    //     minWidth: '250px'\r\n    //   }\r\n    // }\r\n  ]\r\n  const updateData = () => {\r\n    debugger\r\n    axios\r\n      .get('/api/Branch/getBranchClasses')\r\n      .then(res => {\r\n        console.log('data here', res.data)\r\n        setClasses(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  const updateFees = (classId,requestedFees ,className , fees) => {\r\n    var data = {entityId : classId , requestedFees : requestedFees , requestType : \"ClassFee\",\r\n    entityName : className , fees : fees}\r\n    if(requestedFees == fees){\r\n        return \r\n    }\r\n    axios\r\n      .post('/api/Branch/setFees/',data )\r\n      .then(res => {})\r\n      .catch(error => {})\r\n    updateData()\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='All Class'>\r\n              {/* <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    props.history.push('/setting/classForm')\r\n                  }}\r\n                >\r\n                  New Class\r\n                </button>\r\n              </CardHeaderToolbar> */}\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Classes ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Classes}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps}\r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\Courses.js",["1144"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport CourseActionFormatter from '../components/CourseActionFormatter'\r\nimport CourseProfileFormater from '../components/CourseProfileFormater'\r\n\r\n\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport default function Courses (props) {\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n  const EditHandler = cid => {\r\n    history.push('/setting/CourseForm/' + id + '/' + cid)\r\n  }\r\n\r\n  const DeleteHandler = id => {\r\n    debugger;\r\n    if (window.confirm('do you really  want to delete')) {\r\n        axios.delete('/api/course/course/'+ id).then(res => {}).catch(() => {})\r\n        updateData()\r\n    }\r\n  }\r\n\r\n  const CourseContenHandler = id =>{\r\n    debugger;\r\n    history.push(\"/setting/course/\"+id+\"/sections\")\r\n\r\n  }\r\n  const AddCourseTestHandler = id =>{\r\n    history.push(\"/Test/CourseTest/\" + id + \"/tests\")\r\n  }\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'title',\r\n      text: 'Course',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'Description',\r\n      text: 'Description',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'posterImageUrl',\r\n      text: 'Image',\r\n      formatter: CourseProfileFormater,     \r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: CourseActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        GetSectionsAction:CourseContenHandler,\r\n        AddCourseTestAction : AddCourseTestHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '220px'\r\n      }\r\n    }\r\n  ]\r\n\r\n  // const [Courses, setCourse] = useState([])\r\n  const [Class, setClass] = useState([])\r\n  const updateData = () => {\r\n    debugger\r\n    axios\r\n      .get('/api/course/courseList/' + id)\r\n      .then(res => {\r\n        debugger\r\n        setClass(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [id])\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title={\"Course list -> \"+ Class.name}>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/setting/CourseForm/' + id)\r\n                  }}\r\n                >\r\n                  New course\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n            {Class.courses ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Class.courses}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps}\r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseSections.js",["1145","1146","1147","1148","1149","1150","1151","1152"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Accordion, Card, Col, Nav, Row } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport SVG from 'react-inlinesvg'\r\nimport { toAbsoluteUrl } from '../../../../_metronic/_helpers'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\nimport AddContentButton from '../components/ContentAddButton'\r\n\r\nexport default function CourseSections () {\r\n  //id of Course\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n  const [sections, setSections] = useState([])\r\n  const [expanded, setExpanded] = useState('panel1')\r\n  const [course, setCourse] = useState(null)\r\n\r\n  const handleChange = panel => () => {\r\n    if (expanded != panel) setExpanded(panel)\r\n  }\r\n  const CreateSection = () => {\r\n    history.push('/Setting/Course/' + id + '/sectionForm')\r\n  }\r\n\r\n  const EditSection = secId => {\r\n    history.push('/Setting/Course/' + id + '/sectionForm/' + secId)\r\n  }\r\n  const DeleteSection = id => {\r\n    debugger\r\n    if (window.confirm('Do you realy Want to delete Compelete Section ?')) {\r\n      debugger\r\n      axios\r\n        .delete('/api/course/courseSection/' + id)\r\n        .then(response => {\r\n          loaddata()\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n  const loaddata = () => {\r\n    axios\r\n      .get('/api/course/course/' + id)\r\n      .then(response => {\r\n        debugger\r\n        setCourse({ ...response.data.course, class: response.data.class })\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n  const editContent = (id, sectionId) => {\r\n    history.push('/setting/course/section/' + sectionId + '/content/' + id)\r\n  }\r\n  const showContent = (id , sectionId) => {\r\n    console.log(id , sectionId)\r\n    history.push(`/setting/course/${id}/showCourse`)\r\n  }\r\n\r\n  const deleteContent = id => {\r\n    debugger\r\n    if (window.confirm('Do you realy Want to delete Compelete Section ?')) {\r\n      axios\r\n        .delete('/api/Course/sectionContent/' + id)\r\n        .then(res => {\r\n          loaddata()\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    loaddata()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className='row'>\r\n          <div className='col-md-12'>\r\n            <Card>\r\n              <Card.Header as='h5'>\r\n                {course && course.class ? course.class.name + '->' : ''}\r\n                {course ? course.title : ''}\r\n                <Button\r\n                  variant='primary'\r\n                  className='btn btn-outline-primary ml-2 float-right'\r\n                  type='button'\r\n                  onClick={() => {\r\n                    if (history.length > 1) {\r\n                      // this will take you back if there is history\r\n                      history.goBack()\r\n                    }\r\n                  }}\r\n                >\r\n                  back\r\n                </Button>\r\n                <button\r\n                  className='btn btn-primary float-right'\r\n                  onClick={CreateSection}\r\n                >\r\n                  Add New Section\r\n                </button>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Accordion>\r\n                  {course &&\r\n                    course.sections.sort((a, b) => a.order - b.order).map(item => (\r\n                      \r\n                      <Card key={item._id}>\r\n                        <Card.Header>\r\n                          <div className='row'>\r\n                            <div className='col ANewSec'>\r\n                              <Accordion.Toggle\r\n                                as={Button}\r\n                                variant='text'\r\n                                eventKey={item._id}\r\n                              >{console.log(\"item\" , item)}\r\n                                <h5>{item.name}</h5>\r\n                              </Accordion.Toggle>\r\n                            </div>\r\n                            <Col md='auto'>\r\n                              <div\r\n                                className='btn-group'\r\n                                role='group'\r\n                                aria-label=''\r\n                              >\r\n                                {/* <AddContentButton\r\n                                  sectionId={item._id}\r\n                                  courseId={id}\r\n                                /> */}\r\n                                <button\r\n                                className=\"btn btn-primary\"\r\n                                  onClick={() => {\r\n                                    history.push(`/test/${id}/section/${item._id}/tests`)\r\n                                  }}\r\n                                >\r\n                                  Tests\r\n                                </button>\r\n                                <button\r\n                                 className=\"btn btn-primary\"\r\n                                  onClick={() => {\r\n                                    history.push(`/setting/course/section/${item._id}/content/`)\r\n                                  }}\r\n                                >\r\n                                  Add Content\r\n                                </button>\r\n\r\n                                <button\r\n                                  className=' btn btn-primary pull-right'\r\n                                  style={{ marginLeft: 'auto' }}\r\n                                  onClick={e => {\r\n                                    EditSection(item._id)\r\n                                  }}\r\n                                >\r\n                                  <span className='svg-icon svg-icon-md'>\r\n                                    <SVG\r\n                                      title='Edit Content'\r\n                                      src={toAbsoluteUrl(\r\n                                        '/media/svg/icons/Communication/Write.svg'\r\n                                      )}\r\n                                    />\r\n                                  </span>\r\n                                </button>\r\n                                <button\r\n                                  className=' btn btn-danger pull-right'\r\n                                  onClick={event => {\r\n                                    DeleteSection(item._id)\r\n                                  }}\r\n                                >\r\n                                  <span className='svg-icon svg-icon-md'>\r\n                                    <SVG\r\n                                      src={toAbsoluteUrl(\r\n                                        '/media/svg/icons/General/Trash.svg'\r\n                                      )}\r\n                                      title='Delete Content'\r\n                                    />\r\n                                  </span>\r\n                                </button>\r\n                              </div>\r\n                            </Col>\r\n                          </div>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey={item._id}>\r\n                          <Card.Body>\r\n                            {item.contents.map(c => {\r\n                              return (\r\n                                <div\r\n                                  className='row mb-5 brd_b'\r\n                                  key={c._id}\r\n                                  // style={{ margin: '10px' }}\r\n                                >\r\n                                  <Col className='secTitle'>{c.title}</Col>\r\n\r\n                                  <Col className='secType'>{`${c.videoUrl || c.videoDescription ? \"Video\" : \"\"}  ${c.pdfUrl || c.pdfDescription? \"| Pdf\" : \"\"} ${c.imageUrl || c.imageDescription? \"| Image\" : \"\"} ${c.audioUrl ? \"| Audio\" : \"\"} ${c.textDescription ? \"Text\" : \"\"} `}</Col>\r\n                                  {/* <Col className='secUrl'>\r\n                                    {c.contentUrl ? 'true' : 'false'}\r\n                                  </Col> */}\r\n                                  <Col xs md='2' className='secAction'>\r\n                                    <div\r\n                                      className='btn-group float-right'\r\n                                      role='group'\r\n                                      aria-label=''\r\n                                    >\r\n                                      <button\r\n                                        className='btn btn-outline-primary pull-right'\r\n                                        onClick={event => {\r\n                                          showContent(c._id, item._id)\r\n                                        }}\r\n                                      >\r\n                                        Show\r\n                                      </button>\r\n                                      <button\r\n                                        className='btn btn-outline-primary pull-right'\r\n                                        onClick={event => {\r\n                                          editContent(c._id, item._id)\r\n                                        }}\r\n                                      >\r\n                                        Edit\r\n                                      </button>\r\n                                      <button\r\n                                        className='btn btn-outline-danger pull-right'\r\n                                        onClick={event => {\r\n                                          deleteContent(c._id)\r\n                                        }}\r\n                                      >\r\n                                        Delete\r\n                                      </button>\r\n                                    </div>\r\n                                  </Col>\r\n                                </div>\r\n                              )\r\n                            })}\r\n                          </Card.Body>\r\n                        </Accordion.Collapse>\r\n                      </Card>\r\n                    ))}\r\n                </Accordion>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\cardSideStickey.js",["1153"],"import React from 'react'\r\nimport { Row, Col, Card } from 'react-bootstrap'\r\nexport default function cardSideStickey ({ data ,EditHandler }) {\r\n  \r\n  return (\r\n    <div\r\n      style={{\r\n        position: '-webkit-sticky',\r\n        position: 'sticky',\r\n        top: 120\r\n      }}\r\n    >\r\n      <Card>\r\n      <Card.Header as='h5'>{data[0].title}</Card.Header>\r\n        <Card.Body>\r\n          <Row><img src={`${window.$apihost }/uploads/CourseProfile/`+data[0].posterImageUrl} alt ={data[0].title} width={\"100%\"} className=\"p-5\"></img></Row>\r\n          <Row>\r\n            <Col>Test:&nbsp;{data[0].noOftests}</Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>Sections: &nbsp;{data.length}</Col>\r\n          </Row>\r\n          <Row>\r\n            <Col><button className=\"btn btn-danger\" onClick={ EditHandler}>Update Course</button></Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dashboards\\Dashboard.js",["1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164"],"import React from \"react\";\r\nimport {\r\n    MixedWidget1,\r\n    MixedWidget14,\r\n    ListsWidget9,\r\n    StatsWidget11,\r\n    StatsWidget12,\r\n    ListsWidget1,\r\n    AdvanceTablesWidget2,\r\n    AdvanceTablesWidget4,\r\n    ListsWidget3,\r\n    ListsWidget4,\r\n    ListsWidget8\r\n} from \"../widgets\";\r\nexport function Dashboard() {\r\n    return (<>\r\n            {/* <div className=\"row\">\r\n                <div className=\"col-lg-6 col-xxl-4\">\r\n                    <MixedWidget1 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n                <div className=\"col-lg-6 col-xxl-4\">\r\n                    <ListsWidget9 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n\r\n                <div className=\"col-lg-6 col-xxl-4\">\r\n                    <StatsWidget11 className=\"card-stretch card-stretch-half gutter-b\"/>\r\n                    <StatsWidget12 className=\"card-stretch card-stretch-half gutter-b\"/>\r\n                </div>\r\n\r\n                <div className=\"col-lg-6 col-xxl-4 order-1 order-xxl-1\">\r\n                    <ListsWidget1 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n                <div className=\"col-xxl-8 order-2 order-xxl-1\">\r\n                    <AdvanceTablesWidget2 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n                <div className=\"col-lg-6 col-xxl-4 order-1 order-xxl-2\">\r\n                    <ListsWidget3 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n                <div className=\"col-lg-6 col-xxl-4 order-1 order-xxl-2\">\r\n                    <ListsWidget4 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n                <div className=\"col-lg-12 col-xxl-4 order-1 order-xxl-2\">\r\n                    <ListsWidget8 className=\"card-stretch gutter-b\"/>\r\n                </div>\r\n            </div> */}\r\n            {/* <div className=\"row\">\r\n                <div className=\"col-lg-4\">\r\n                    <MixedWidget14 className=\"card-stretch gutter-b\" />\r\n                </div>\r\n                <div className=\"col-lg-8\">\r\n                    <AdvanceTablesWidget4 className=\"card-stretch gutter-b\" />\r\n                </div>\r\n            </div> */}\r\n    </>);\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\stretched-card.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\CourseProfileFormater.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\content.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\QuestionOptionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\Card.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\FormAlert.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeExampleSimple.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\cookie.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\advance-tables\\AdvanceTablesWidget4.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu1.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\FAQs.js",["1165","1166","1167"],"import React , {useEffect , useState ,useRef } from 'react'\r\nimport { Row, Col,Card  , Form , Button} from 'react-bootstrap'\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from 'axios'\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from 'react-router'\r\nimport JoditEditor from 'jodit-react'\r\nexport default function FAQs(){\r\n  const {courseId} = useParams()\r\n  const [faqs , setfaqs] = useState([])\r\n  const [faq , setfaq]  = useState({\r\n    question : \"\" , \r\n    answer : \"\"\r\n  })\r\n  const editor = useRef(null)\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const {user} = useSelector(state => state.auth);\r\n  useEffect(() => {\r\n    update()\r\n  }, [])\r\n  const update =() => {\r\n    axios.get('/api/course/getFaq/' + courseId).then((res)=>{\r\n       setfaqs(res.data)\r\n    }).catch((res)=>{\r\n\r\n    })\r\n  }\r\n  const saveAnnouncement =  async event => {\r\n    event.preventDefault()\r\n    debugger;\r\n    await axios.post('/api/course/saveFaq/' + courseId , faq).then((res) => {\r\n    }).catch((error) => {\r\n\r\n    })\r\n    setfaq({question : \"\" , answer : \"\"})\r\n    update()\r\n\r\n  }\r\n  const handleAnnouncement = e => {\r\n    setfaq({...faq, answer :  e.target.innerText })\r\n  }\r\n    return (\r\n        <Card classNameName='col-md-12'>\r\n          {user && faqs && faqs.length && (user._id ==  faqs[0].faq.createdBy[0]._id) && \r\n          <Form onSubmit={saveAnnouncement} className='form'>\r\n\r\n            <Form.Group controlId='formTitle' className='row'>\r\n\r\n      \r\n      <div className='col-md-4'>\r\n        <Form.Label>Question</Form.Label>\r\n        <Form.Control\r\n          required='true'\r\n          type='text'\r\n          placeholder='Test Name'\r\n          value={faq.question}\r\n          onChange={event =>\r\n            setfaq({ ...faq, question: event.target.value })\r\n          }\r\n        />\r\n      </div>\r\n      <div className='col-md-12'>\r\n        <Form.Label>Answer</Form.Label>\r\n        <JoditEditor\r\n            ref={editor}\r\n            value={faq.answer}\r\n            config={config}\r\n            tabIndex={1} // tabIndex of textarea\r\n            onBlur={handleAnnouncement} // preferred to use only this option to update the content for performance reasons\r\n          />\r\n      </div>\r\n      </Form.Group>\r\n\r\n      <Button variant='primary' type='submit'>\r\n        Submit\r\n            </Button>\r\n</Form>\r\n}\r\n        <Card.Header as='h5'>Frequently Asked Questions</Card.Header>\r\n       {faqs && faqs.length && faqs.map((ele) => \r\n       \r\n       <Card.Body>\r\n\r\n          <Row>\r\n            <Col>\r\n              <div style={{ width: '80%' }}>\r\n                <h3>{ele.faq.question}</h3>\r\n                <p>\r\n                  {ele.faq.answer}\r\n                </p>\r\n               \r\n                <p>\r\n                  Created by <b>{ele.faq.createdBy[0].name}</b> Last updated {ele.faq.createdAt.slice(0,10)}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n       )}\r\n      </Card>\r\n    )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\question.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\examForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentProfile.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\components\\NotificationActionFormatter.js",["1168","1169","1170","1171"],"// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\nimport SVG from 'react-inlinesvg'\r\nimport { toAbsoluteUrl } from '../../../../_metronic/_helpers'\r\nimport { Button } from 'react-bootstrap'\r\nexport default function NotificationActionFormatter (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  {  ApproveClassAction , RejectClassAction}\r\n) {\r\n\r\n  return (\r\n    <>\r\n\r\n      { row.changeRequest.status == \"Pending\" && <a\r\n        title='ReSchedule'\r\n        // className='btn btn-icon btn-light btn-hover-primary btn-sm mx-3'\r\n        onClick={() => ApproveClassAction(row.changeRequest._id , row.changeRequest.entityId ,\r\n           row.changeRequest.requestedFees , row.changeRequest.requestType\r\n          )}\r\n      >\r\n        <span className='svg-icon svg-icon-md svg-icon-primary'>\r\n          {/* <SVG title=' ReSchedule'\r\n            src={toAbsoluteUrl('/media/svg/icons/Communication/Write.svg')}\r\n          /> */}\r\n          <Button>Approved</Button>\r\n        </span>\r\n      </a>\r\n}\r\n      { row.changeRequest.status == \"Pending\" &&  <a\r\n        title='Delete Question'\r\n        // className='btn btn-icon btn-light btn-hover-danger btn-sm'\r\n        onClick={() => RejectClassAction(row.changeRequest._id , row.changeRequest.entityId ,\r\n          row.changeRequest.requestedFees , row.changeRequest.requestType\r\n         )}\r\n      >\r\n        <span className='svg-icon svg-icon-md svg-icon-danger'>\r\n          {/* <SVG  src={toAbsoluteUrl('/media/svg/icons/General/Trash.svg')} title='Delete \r\n          Exam' /> */}\r\n          <Button>Reject</Button>\r\n        </span>\r\n      </a>\r\n}\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\QuiclUserToggler.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\search\\SearchDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\Routes.js",["1172"],"/**\r\n * High level router.\r\n *\r\n * Note: It's recommended to compose related routes in internal router\r\n * components (e.g: `src/app/modules/Auth/pages/AuthPage`, `src/app/BasePage`).\r\n */\r\n\r\nimport React from 'react'\r\nimport { Redirect, Switch, Route } from 'react-router-dom'\r\nimport { shallowEqual, useSelector } from 'react-redux'\r\nimport { Layout } from '../_metronic/layout'\r\nimport BasePage from './BasePage'\r\nimport { Logout, AuthPage } from './modules/Auth'\r\nimport ErrorsPage from './modules/ErrorsExamples/ErrorsPage'\r\nimport CoursePlayer from './modules/Setting/pages/CoursePlayer'\r\nimport {\r\n  PermissionContenxt,\r\n  PermissionsProvider\r\n} from './modules/permissionManager/permissionContext'\r\n\r\n export function Routes () {\r\n  const { isAuthorized } = useSelector(\r\n    ({ auth }) => ({\r\n      isAuthorized: auth.user != null\r\n    }),\r\n    shallowEqual\r\n  )\r\n \r\n  // const {isAuthorized} =true;\r\n  return (\r\n    <Switch>\r\n      {!isAuthorized ? (\r\n        <Route>\r\n          <AuthPage />\r\n        </Route>\r\n      ) : (\r\n        <Redirect from='/auth' to='/' />\r\n      )}\r\n        <Route path='/coursePlayer/:id/:sectionId?/:contentId?/:time?/:type?'>\r\n        <CoursePlayer />\r\n      </Route>\r\n      <Route path='/error' component={ErrorsPage} />\r\n      <Route path='/logout' component={Logout} />\r\n      {!isAuthorized ? (\r\n        <Redirect to='/auth/login' />\r\n      ) : (\r\n        <PermissionsProvider >\r\n          <Layout>\r\n            <BasePage />\r\n          </Layout>\r\n        </PermissionsProvider>\r\n      )}\r\n    </Switch>\r\n  )\r\n}\r\n\r\n\r\n// export default connect(mapStateToProps)(Routes)\r\n ","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\BuilderPage.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\permissions.js",["1173","1174"],"import React, { useEffect, useState } from 'react'\r\nimport { Card, Table } from 'react-bootstrap'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nexport default function Permissions () {\r\n  const history = useHistory()\r\n  const { id } = useParams()\r\n  const [Modules, setModules] = useState([])\r\n  const [Permissions, setPermission] = useState([])\r\n  const [Role, setRole] = useState()\r\n  useEffect(() => {\r\n    axios\r\n      .get('/api/permission/getModules')\r\n      .then(res => {\r\n        setModules(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      getRolePermissions()\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id])\r\n\r\n  const getRolePermissions=()=>{\r\n    axios\r\n    .get(`/api/permission/getRolesPermission/${id}`)\r\n    .then(res => {\r\n      debugger;\r\n      if(res.data.length>0){\r\n        setPermission(res.data[0].permissions)\r\n        setRole(res.data[0])\r\n      }\r\n      console.log(res.data)\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n  const postPermission = (module, permission, Checked) => {\r\n    debugger\r\n    console.log(module, permission, Checked)\r\n    if (Checked) {\r\n      axios\r\n        .post('/api/permission/setPermission', { module, permission, id })\r\n        .then(res => {\r\n          // setModules(res.data)\r\n          getRolePermissions();\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n    if (!Checked) {\r\n      axios\r\n        .post('/api/permission/unsetPermission', { module, permission,id })\r\n        .then(res => {\r\n          // setModules(res.data)\r\n          getRolePermissions();\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n\r\n  const CheckPermissionInputCheck = (module, permission) => {\r\n    console.log(module, permission)\r\n    if (Permissions)\r\n      return Permissions.some(\r\n        m => m.module === module && m.permission === permission\r\n      )\r\n    else return false\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Header title='Examinations'>\r\n              <Card.Title>Roles Permissions</Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Table>\r\n                <tbody>\r\n                <tr>\r\n                  <th>Modules</th>\r\n                  <th>READ(1)</th>\r\n                  <th>WRITE(2)</th>\r\n                  <th>EXECUTE(4)</th>\r\n                </tr>\r\n                {Modules &&\r\n                  Modules.length > 0 &&\r\n                  Modules.map(item => (\r\n                    <tr key={item.key}>\r\n                      <td>{item.module} {`(${item.id})`}</td>\r\n                      <td>\r\n                        <input\r\n                          type='checkbox'\r\n                          checked={CheckPermissionInputCheck(item.id, 1)}\r\n                          onClick={event => {\r\n                            postPermission(item.id, 1, event.target.checked)\r\n                          }}\r\n                        ></input>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type='checkbox'\r\n                          checked={CheckPermissionInputCheck(item.id, 2)}\r\n                          onClick={event =>\r\n                            postPermission(item.id, 2, event.target.checked)\r\n                          }\r\n                        ></input>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type='checkbox'\r\n                          checked={CheckPermissionInputCheck(item.id, 4)}\r\n                          onClick={event =>\r\n                            postPermission(item.id, 4, event.target.checked)\r\n                          }\r\n                        ></input>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                  </tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseSectionform.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Announcement.js",["1175","1176"],"import React  , {useEffect,  useRef , useState} from 'react'\r\nimport { Row, Col,Card ,Button  , Form } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport JoditEditor from 'jodit-react'\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from 'react-router'\r\nexport default function Announcement({ id}){\r\nconst [announcement , setannouncement]  = useState({\r\n  title : \"\" , \r\n  Description : \"\"\r\n})\r\nconst [announcements , setannoucements] = useState()\r\n\r\n  const editor = useRef(null)\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const {courseId} = useParams()\r\n  useEffect(() => {\r\n    update()\r\n  }, [])\r\n  const update =() => {\r\n    axios.get('/api/course/getAnnouncement/' + courseId).then((res)=>{\r\n      setannoucements(res.data)\r\n    }).catch((res)=>{\r\n\r\n    })\r\n  }\r\n  const handleAnnouncement = e => {\r\n    setannouncement({...announcement,Description :  e.target.innerText })\r\n  }\r\n\r\n  const saveAnnouncement =  async event => {\r\n    event.preventDefault()\r\n    debugger;\r\n    await axios.post('/api/course/saveAnnouncement/' + courseId , announcement).then((res) => {\r\n    }).catch((error) => {\r\n\r\n    })\r\n    setannouncement({title : \"\" , Description : \"\"})\r\n    update()\r\n\r\n  }\r\n    return (\r\n        <Card classNameName='col-md-12'>\r\n          {/* { (id == )} */}\r\n          <Form onSubmit={saveAnnouncement} className='form'>\r\n\r\n            <Form.Group controlId='formTitle' className='row'>\r\n\r\n                  \r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test Name'\r\n                      value={announcement.title}\r\n                      onChange={event =>\r\n                        setannouncement({ ...announcement, title: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-12'>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <JoditEditor\r\n                        ref={editor}\r\n                        value={announcement.Description}\r\n                        config={config}\r\n                        tabIndex={1} // tabIndex of textarea\r\n                        onBlur={handleAnnouncement} // preferred to use only this option to update the content for performance reasons\r\n                      />\r\n                  </div>\r\n                  </Form.Group>\r\n\r\n                  <Button variant='primary' type='submit'>\r\n                    Submit\r\n                        </Button>\r\n          </Form>\r\n          \r\n            \r\n        <Card.Header as='h5'>Announcements</Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col>\r\n            {console.log(\"id\" , id)}\r\n            {announcements && announcements.length && announcements.map((element) => \r\n                \r\n              <div style={{ width: '80%' }} key={element.announcement._id}>\r\n                \r\n                <h3>{element.announcement.title}</h3>\r\n                <p>\r\n                  {element.announcement.Description}\r\n                </p>\r\n               \r\n                <p>\r\n                  Created at {element.announcement.createDate.slice(0, 10)}\r\n                </p>\r\n              </div>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\Registration.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\mixed\\MixedWidget1.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorsPage.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestList.js",["1177"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport TestActionFormatter from '../components/TestActionFormatter'\r\n\r\nexport default function CourseTestList (props) {\r\n  const [Test, setTests] = useState([])\r\n\r\n  let history = useHistory()\r\n    const {id} = useParams();\r\n  const EditHandler = (TId) => {\r\n    debugger;\r\n    history.push(`/Test/CourseTest/${id}/TestForm/${TId}`)\r\n  }\r\n  const DeleteHandler = (TId) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios\r\n        .delete('/api/Course/' + id + '/deleteTestById/' + TId )\r\n        .then(res => {alert(\"Test Deleted \");updateData() })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n  const GetQuestionHandler=(TId)=>{\r\n    history.push(`/Test/CourseTest/${TId}/Questions` )\r\n  }\r\n  const ChangeDescription = (cellContent) => {\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent }}></div>\r\n}\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },   \r\n    {\r\n      dataField: 'passingMarks',\r\n      text: 'passing',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'totalMarks',\r\n      text: 'Total',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'isComplete',\r\n      text: 'Status',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'testLevel',\r\n      text: 'Test Level',\r\n      sort: true,\r\n      formatter : ChangeDescription , \r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: TestActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestions:GetQuestionHandler,\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\nconst updateData=()=>{\r\n//   debugger\r\n  axios.get(`/api/Course/${id}/getAllTestsByCourse`)\r\n    .then(res => {\r\n    debugger;\r\n    setTests(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title={`Test-`}>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push(`/Test/CourseTest/${id}/TestForm`)\r\n                  }}\r\n                >\r\n                  Create Test\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Test ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Test}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\branchuserForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\Pagination.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Checkbox.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentVideo.js",["1178"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Button, Form, Col } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport JoditEditor from 'jodit-react'\r\n\r\nexport default function VideoContent () {\r\n  const [Content, setContent] = useState({\r\n    description: '',\r\n    title: '',\r\n    contentUrl: '',\r\n    type: 'video'\r\n  })\r\n  const { id, cid } = useParams()\r\n  const history = useHistory()\r\n\r\n  const saveData = async event => {\r\n    event.preventDefault()\r\n    debugger\r\n    let data = Content\r\n    let formData = new FormData()\r\n    for (var key in data) {\r\n      formData.append(key, data[key])\r\n    }\r\n    debugger\r\n    await axios\r\n      .post('api/course/SectionContent/' + id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then(res => {\r\n        history.goBack()\r\n      })\r\n      .catch(err => {\r\n        console.log('error in file upload :' + err)\r\n      })\r\n  }\r\n\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  useEffect(() => {\r\n\r\n    if (cid) {\r\n      axios\r\n        .get('/api/course/sectionContent/' + cid)\r\n        .then(res => {\r\n          setContent(res.data)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [cid, id])\r\n  const editor = useRef(null)\r\n  const handleChangeDesripiton = e => {\r\n    debugger\r\n    // console.log(this.editor.current)\r\n    setContent({\r\n      ...Content,\r\n      description: e.target.innerHTML\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Add Content'></CardHeader>\r\n            <CardBody>\r\n              <Form onSubmit={saveData}>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>Tittle</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Content Name'\r\n                      value={Content.title}\r\n                      onChange={event =>\r\n                        setContent({ ...Content, title: event.target.value })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>Dscription</Form.Label>\r\n                    <div className='col-md-12'>\r\n                      <JoditEditor\r\n                        ref={editor}\r\n                        value={Content.description}\r\n                        config={config}\r\n                        tabIndex={1} // tabIndex of textarea\r\n                        onBlur={handleChangeDesripiton} // preferred to use only this option to update the content for performance reasons\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Col className='col-md-12'>\r\n                    <Form.Label>File upload </Form.Label>\r\n                    <Form.Control\r\n                      type='file'\r\n                      //   value={Content.file}\r\n                      onChange={event =>\r\n                        setContent({\r\n                          ...Content,\r\n                          file: event.target.files[0]\r\n                        })\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                \r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  variant='secondary' className='ml-3'\r\n                  type='button'\r\n                  onClick={() => {\r\n                    if (history.length > 1) {\r\n                      // this will take you back if there is history\r\n                      history.goBack()\r\n                    }\r\n                  }}\r\n                >\r\n                  cancel\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\classActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\testQuestion.js",["1179"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\Header.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\offcanvas\\QuickUser.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\Topbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\components\\BreadCrumbs.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\util.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\Metronici18n.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage6.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\LayoutInit.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header-mobile\\HeaderMobile.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\quick-panel.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\ContentEditDilogue.js",["1180","1181","1182","1183","1184","1185"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\n// import { useParams } from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Modal, Card, Select } from 'react-bootstrap'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Input } from '../../../../_metronic/_partials/controls'\r\nimport { actions } from './../_redux/EcourseRedux'\r\n\r\nconst ContentEdit = Yup.object().shape({\r\n  _id: Yup.string().nullable(true),\r\n  courseId: Yup.string().required('Course ID is required'),\r\n  sectionId: Yup.string().required('section is required'),\r\n  title: Yup.string().required('title is required'),\r\n  type: Yup.string().required('type is required'),\r\n  // file: Yup.mixed().required('file is required')\r\n  // contentUrl: Yup.string().required('Name is required')\r\n})\r\n\r\nfunction ContentEditDilogue ({ CourseID, dispatch, Content, Section }) {\r\n  const [content, setContent] = useState(\r\n    Content != null\r\n      ? { ...Content, courseId: CourseID, sectionId: Section._id }\r\n      : {\r\n          _id: null,\r\n          courseId: CourseID,\r\n          sectionId: Section._id,\r\n          title: '',\r\n          type: '',\r\n          contentUrl: '',\r\n          file: null\r\n        }\r\n  )\r\n  const [ContenTypeDDr, setContenTypeDDr] = useState([])\r\n  let history = useHistory()\r\n  const onHide = () => {\r\n    // console.log(CourseID)\r\n    // var CourseID\r\n   \r\n\r\n    history.push('/Ecourse/CourseContent/?id=' + CourseID)\r\n  }\r\n  useEffect(() => {\r\n    axios('/api/Course/getContentType')\r\n      .then(response => {\r\n        debugger\r\n        return response.data\r\n      })\r\n      .then(data => {\r\n        // let typesFromApi = data.map(team => {\r\n        //   return {value: team, display: team}\r\n        // });\r\n        let ddr = [{ value: '', text: 'select your ContentType' }].concat(data)\r\n        console.log(ddr)\r\n        setContenTypeDDr(ddr)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n  return (\r\n    <Card>\r\n      <Card.Header>Section Content</Card.Header>\r\n\r\n      <Formik\r\n        // enableReinitialize={true}\r\n        initialValues={content}\r\n        validationSchema={ContentEdit}\r\n        onSubmit={values => {\r\n          debugger\r\n          console.log(values)\r\n          let sec = {\r\n            _id: values._id,\r\n            courseId: content.courseId,\r\n            title: values.title,\r\n            sectionId: content.sectionId,\r\n            type: values.type,\r\n            contentUrl: values.contentUrl\r\n          }\r\n         \r\n         if(sec._id&&!values.file){\r\n          axios\r\n          .post('/api/course/courseSectionContent', sec)\r\n          .then(response => {\r\n            onHide()\r\n          })\r\n          .catch(err => {\r\n            console.log(err)\r\n          })\r\n\r\n         }\r\n         else{\r\n          var formData = new FormData()\r\n          formData.append('file', values.file[0])\r\n          formData.append('courseId',content.courseId)\r\n          axios\r\n            .post('/api/course/courseSectionContentFile',formData, {\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n            })\r\n            .then(response => {\r\n              debugger\r\n              sec.contentUrl = response.data.name\r\n              if (sec.contentUrl) {\r\n                axios\r\n                  .post('/api/course/courseSectionContent', sec)\r\n                  .then(response => {\r\n                    onHide()\r\n                  })\r\n                  .catch(err => {\r\n                    console.log(err)\r\n                  })\r\n              } else {\r\n                alert('error in file upload')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err)\r\n            })\r\n\r\n         }\r\n          \r\n        }}\r\n      >\r\n        {formik => {\r\n          console.log(formik)\r\n\r\n          return (\r\n            <>\r\n              <Form\r\n                className='form form-label-right'\r\n                onSubmit={formik.handleSubmit}\r\n              >\r\n                <Card.Body>\r\n                  <div className='row'>\r\n                    <div className='col-lg-6'>\r\n                      <div className='form-group'>\r\n                        <label for='title'>Title</label>\r\n                        <Field\r\n                          name='title'\r\n                          placeholder='title'\r\n                          label='section title'\r\n                          className='form-control'\r\n                        />\r\n                        <ErrorMessage name='title' />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-lg-3'>\r\n                      <div className='form-group'>\r\n                        <label for='type'>Type</label>\r\n\r\n                        <Field\r\n                          as='select'\r\n                          name='type'\r\n                          label='Content Type'\r\n                          className='form-control'\r\n                        >\r\n                          {ContenTypeDDr.map(item => (\r\n                            <option value={item.value} key={item.value}>\r\n                              {item.text}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        <ErrorMessage name='type' />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-lg-3'>\r\n                      <div className='form-group'>\r\n                        <label for='file'>File</label>\r\n                        <input\r\n                          id='file' \r\n                          name='file'\r\n                          type='file'\r\n                          onChange={event => {\r\n                            formik.setFieldValue(\r\n                              'file',\r\n                              event.currentTarget.files\r\n                            )\r\n                          }}\r\n                        />\r\n                        <ErrorMessage name='file' />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-12'></div>\r\n                  </div>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                  <button\r\n                    type='button'\r\n                    onClick={onHide}\r\n                    className='btn btn-light btn-elevate mr-2'\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <></>\r\n                  <button type='submit' className='btn btn-primary btn-elevate' disabled={formik.isSubmitting || !formik.dirty}>\r\n                    Save\r\n                  </button>\r\n                </Card.Footer>\r\n              </Form>\r\n            </>\r\n          )\r\n        }}\r\n      </Formik>\r\n    </Card>\r\n  )\r\n}\r\nfunction mapStateToProps (state) {\r\n  debugger\r\n  console.log(state.course.CurrentCourseId)\r\n  return {\r\n    CourseID: state.course.CurrentCourseId,\r\n    Section: state.course.CurrentSection,\r\n    Content: state.course.CurrentContent\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(ContentEditDilogue)\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\card.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\Notice.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu4.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\stats\\StatsWidget12.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget4.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\DatePickerField.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\ContentAddButton.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\content\\ContentRoute.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage4.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\index.js",["1186"],"import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport Students from './pages/student'\r\nimport StudentProfile from './pages/studentProfile'\r\nimport StudentForm from './pages/studentform'\r\nimport Passwordreset from './pages/studentPasswordReset'\r\n\r\nexport default function Student() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/Student/StudentForm/:id'>\r\n        <StudentForm />\r\n      </Route>\r\n      <Route exact path='/Student/studentProfile/:id'>\r\n        <StudentProfile />\r\n      </Route>\r\n      <Route exact path='/Student/SPasswordReset/:id'>\r\n        <Passwordreset />\r\n      </Route>\r\n      {/* <Route exact path='/Student/Student/:id'>\r\n        <StudentProfile />\r\n      </Route> */}\r\n      <Route exact path='/Student' component={Students} />\r\n      <Route  exact path='/Student/StudentForm' component={StudentForm} />\r\n      {/* <Route  exact path='/Student/testprofile' component={StudentProfile} /> */}\r\n\r\n     \r\n    </Switch>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TablePaginationHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicLayout.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage1.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenuListControlPanel.js",["1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198"],"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useContext } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SVG from 'react-inlinesvg'\r\nimport { toAbsoluteUrl, checkIsActive } from '../../../../_helpers'\r\nimport { permissionsContext } from '../../../../../app/modules/permissionManager/permissionContext'\r\n\r\nexport function AsideMenuListControlPanel ({ layoutProps }) {\r\n  const location = useLocation()\r\n  const getMenuItemActive = (url, hasSubmenu = false) => {\r\n    return checkIsActive(location, url)\r\n      ? ` ${!hasSubmenu && 'menu-item-active'} menu-item-open `\r\n      : ''\r\n  }\r\n  const { isUserAuthenticate } = useContext(permissionsContext)\r\n\r\n  return (\r\n    <>\r\n      {/* begin::Menu Nav */}\r\n      <ul className={`menu-nav ${layoutProps.ulClasses}`}>\r\n        {/*begin::1 Level*/}\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/dashboard', false)}`}\r\n          aria-haspopup='true'\r\n        >\r\n          <NavLink className='menu-link' to='/dashboard'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Design/Layers.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Dashboard</span>\r\n          </NavLink>\r\n        </li>\r\n        {/*end::1 Level*/}\r\n\r\n        {/*begin::1 Level*/}\r\n        {/*end::1 Level*/}\r\n        {/* <li\r\n          className={`menu-item ${getMenuItemActive('/setting', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Branch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>setting</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Branch</span>\r\n                </span>\r\n              </li>\r\n              <li\r\n                className={`menu-item ${getMenuItemActive('/setting/branch')}`}\r\n                aria-haspopup='true'\r\n              >\r\n                <NavLink className='menu-link' to='/setting/branch'>\r\n                  <i className='menu-bullet menu-bullet-dot'>\r\n                    <span />\r\n                  </i>\r\n                  <span className='menu-text'>Branch</span>\r\n                </NavLink>\r\n              </li>\r\n              <li\r\n                className={`menu-item ${getMenuItemActive('/setting/class')}`}\r\n                aria-haspopup='true'\r\n              >\r\n                <NavLink className='menu-link' to='/setting/class'>\r\n                  <i className='menu-bullet menu-bullet-dot'>\r\n                    <span />\r\n                  </i>\r\n                  <span className='menu-text'>Class</span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li> */}\r\n\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/setting/Branch', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Branch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Branch</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/setting/class', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/class'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Class</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n        {isUserAuthenticate(\"M3\",1) && (\r\n          <li className={`menu-item ${getMenuItemActive('/User', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/User'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Users</span>\r\n              {/* <i className='menu-arrow' /> */}\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n        {/* Components */}\r\n\r\n        <li\r\n          className={`menu-item ${getMenuItemActive(\r\n            '/ecourse/Courses',\r\n            false\r\n          )}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/ecourse/Courses'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Courses</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/Test/testlist', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Test/testlist'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Tests</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/Exams', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Exams'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Examination</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Schedule Exam</span>\r\n                </span>\r\n              </li>\r\n              <li\r\n                className={`menu-item ${getMenuItemActive('/Exams/Scheduled')}`}\r\n                aria-haspopup='true'\r\n              >\r\n                <NavLink className='menu-link' to='/Exams/Scheduled'>\r\n                  <i className='menu-bullet menu-bullet-dot'>\r\n                    <span />\r\n                  </i>\r\n                  <span className='menu-text'>Schedule Exam</span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n\r\n\r\n        \r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/Notifications', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Notifications'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Notifications</span>\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li\r\n          className={`menu-item ${getMenuItemActive(\r\n            '/permission/Roles',\r\n            false\r\n          )}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/permission/Roles'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Permission</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Permission</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n\r\n        {/* begin::section */}\r\n        <li className='menu-section '>\r\n          <h4 className='menu-text'>Components</h4>\r\n          <i className='menu-icon flaticon-more-v2'></i>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicSplashScreen.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\_redux\\authRedux.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\rootReducer.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\content\\Content.js",[],{"ruleId":"1199","replacedBy":"1200"},{"ruleId":"1201","replacedBy":"1202"},{"ruleId":"1199","replacedBy":"1203"},{"ruleId":"1201","replacedBy":"1204"},{"ruleId":"1205","severity":1,"message":"1206","line":2,"column":27,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":32},{"ruleId":"1205","severity":1,"message":"1209","line":3,"column":10,"nodeType":"1207","messageId":"1208","endLine":3,"endColumn":13},{"ruleId":"1205","severity":1,"message":"1210","line":3,"column":15,"nodeType":"1207","messageId":"1208","endLine":3,"endColumn":25},{"ruleId":"1199","replacedBy":"1211"},{"ruleId":"1201","replacedBy":"1212"},{"ruleId":"1199","replacedBy":"1213"},{"ruleId":"1201","replacedBy":"1214"},{"ruleId":"1199","replacedBy":"1215"},{"ruleId":"1201","replacedBy":"1216"},{"ruleId":"1199","replacedBy":"1217"},{"ruleId":"1201","replacedBy":"1218"},{"ruleId":"1205","severity":1,"message":"1219","line":2,"column":10,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":18},{"ruleId":"1199","replacedBy":"1220"},{"ruleId":"1201","replacedBy":"1221"},{"ruleId":"1222","severity":1,"message":"1223","line":35,"column":20,"nodeType":"1224","messageId":"1225","endLine":35,"endColumn":22},{"ruleId":"1222","severity":1,"message":"1223","line":38,"column":20,"nodeType":"1224","messageId":"1225","endLine":38,"endColumn":22},{"ruleId":"1222","severity":1,"message":"1223","line":45,"column":21,"nodeType":"1224","messageId":"1225","endLine":45,"endColumn":23},{"ruleId":"1222","severity":1,"message":"1223","line":48,"column":22,"nodeType":"1224","messageId":"1225","endLine":48,"endColumn":24},{"ruleId":"1205","severity":1,"message":"1226","line":21,"column":17,"nodeType":"1207","messageId":"1208","endLine":21,"endColumn":25},{"ruleId":"1205","severity":1,"message":"1227","line":1,"column":17,"nodeType":"1207","messageId":"1208","endLine":1,"endColumn":26},{"ruleId":"1205","severity":1,"message":"1228","line":2,"column":10,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":19},{"ruleId":"1205","severity":1,"message":"1229","line":34,"column":19,"nodeType":"1207","messageId":"1208","endLine":34,"endColumn":29},{"ruleId":"1205","severity":1,"message":"1230","line":10,"column":8,"nodeType":"1207","messageId":"1208","endLine":10,"endColumn":11},{"ruleId":"1205","severity":1,"message":"1231","line":20,"column":3,"nodeType":"1207","messageId":"1208","endLine":20,"endColumn":6},{"ruleId":"1205","severity":1,"message":"1232","line":24,"column":3,"nodeType":"1207","messageId":"1208","endLine":24,"endColumn":9},{"ruleId":"1205","severity":1,"message":"1233","line":26,"column":3,"nodeType":"1207","messageId":"1208","endLine":26,"endColumn":7},{"ruleId":"1205","severity":1,"message":"1234","line":42,"column":10,"nodeType":"1207","messageId":"1208","endLine":42,"endColumn":20},{"ruleId":"1205","severity":1,"message":"1235","line":54,"column":9,"nodeType":"1207","messageId":"1208","endLine":54,"endColumn":15},{"ruleId":"1222","severity":1,"message":"1223","line":111,"column":69,"nodeType":"1224","messageId":"1225","endLine":111,"endColumn":71},{"ruleId":"1222","severity":1,"message":"1223","line":113,"column":56,"nodeType":"1224","messageId":"1225","endLine":113,"endColumn":58},{"ruleId":"1236","severity":1,"message":"1237","line":120,"column":6,"nodeType":"1238","endLine":120,"endColumn":25,"suggestions":"1239"},{"ruleId":"1236","severity":1,"message":"1240","line":126,"column":7,"nodeType":"1238","endLine":126,"endColumn":14,"suggestions":"1241"},{"ruleId":"1222","severity":1,"message":"1223","line":131,"column":19,"nodeType":"1224","messageId":"1225","endLine":131,"endColumn":21},{"ruleId":"1242","severity":1,"message":"1243","line":140,"column":5,"nodeType":"1207","messageId":"1244","endLine":140,"endColumn":6},{"ruleId":"1245","severity":1,"message":"1246","line":154,"column":31,"nodeType":"1207","messageId":"1247","endLine":154,"endColumn":37},{"ruleId":"1248","severity":1,"message":"1249","line":169,"column":6,"nodeType":"1250","endLine":169,"endColumn":20},{"ruleId":"1245","severity":1,"message":"1246","line":297,"column":56,"nodeType":"1207","messageId":"1247","endLine":297,"endColumn":62},{"ruleId":"1248","severity":1,"message":"1249","line":302,"column":31,"nodeType":"1250","endLine":302,"endColumn":45},{"ruleId":"1251","severity":1,"message":"1252","line":331,"column":62,"nodeType":"1253","messageId":"1254","endLine":331,"endColumn":64},{"ruleId":"1251","severity":1,"message":"1252","line":358,"column":109,"nodeType":"1253","messageId":"1254","endLine":358,"endColumn":111},{"ruleId":"1251","severity":1,"message":"1252","line":358,"column":314,"nodeType":"1253","messageId":"1254","endLine":358,"endColumn":316},{"ruleId":"1251","severity":1,"message":"1252","line":363,"column":75,"nodeType":"1253","messageId":"1254","endLine":363,"endColumn":77},{"ruleId":"1251","severity":1,"message":"1252","line":363,"column":97,"nodeType":"1253","messageId":"1254","endLine":363,"endColumn":99},{"ruleId":"1251","severity":1,"message":"1252","line":382,"column":32,"nodeType":"1253","messageId":"1254","endLine":382,"endColumn":34},{"ruleId":"1205","severity":1,"message":"1255","line":9,"column":3,"nodeType":"1207","messageId":"1208","endLine":9,"endColumn":20},{"ruleId":"1205","severity":1,"message":"1255","line":9,"column":3,"nodeType":"1207","messageId":"1208","endLine":9,"endColumn":20},{"ruleId":"1205","severity":1,"message":"1256","line":14,"column":8,"nodeType":"1207","messageId":"1208","endLine":14,"endColumn":16},{"ruleId":"1205","severity":1,"message":"1257","line":15,"column":10,"nodeType":"1207","messageId":"1208","endLine":15,"endColumn":16},{"ruleId":"1199","replacedBy":"1258"},{"ruleId":"1201","replacedBy":"1259"},{"ruleId":"1205","severity":1,"message":"1255","line":9,"column":3,"nodeType":"1207","messageId":"1208","endLine":9,"endColumn":20},{"ruleId":"1205","severity":1,"message":"1260","line":11,"column":11,"nodeType":"1207","messageId":"1208","endLine":11,"endColumn":13},{"ruleId":"1205","severity":1,"message":"1261","line":6,"column":35,"nodeType":"1207","messageId":"1208","endLine":6,"endColumn":38},{"ruleId":"1236","severity":1,"message":"1262","line":128,"column":6,"nodeType":"1238","endLine":128,"endColumn":8,"suggestions":"1263"},{"ruleId":"1205","severity":1,"message":"1264","line":6,"column":3,"nodeType":"1207","messageId":"1208","endLine":6,"endColumn":13},{"ruleId":"1236","severity":1,"message":"1265","line":14,"column":6,"nodeType":"1238","endLine":14,"endColumn":8,"suggestions":"1266"},{"ruleId":"1205","severity":1,"message":"1260","line":27,"column":12,"nodeType":"1207","messageId":"1208","endLine":27,"endColumn":14},{"ruleId":"1205","severity":1,"message":"1261","line":2,"column":16,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":19},{"ruleId":"1199","replacedBy":"1267"},{"ruleId":"1201","replacedBy":"1268"},{"ruleId":"1269","severity":1,"message":"1270","line":3,"column":1,"nodeType":"1271","endLine":82,"endColumn":3},{"ruleId":"1205","severity":1,"message":"1272","line":2,"column":17,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":25},{"ruleId":"1273","severity":1,"message":"1274","line":24,"column":9,"nodeType":"1275","endLine":27,"endColumn":10},{"ruleId":"1273","severity":1,"message":"1274","line":70,"column":9,"nodeType":"1275","endLine":74,"endColumn":10},{"ruleId":"1273","severity":1,"message":"1274","line":85,"column":15,"nodeType":"1275","endLine":85,"endColumn":80},{"ruleId":"1273","severity":1,"message":"1274","line":94,"column":9,"nodeType":"1275","endLine":98,"endColumn":10},{"ruleId":"1273","severity":1,"message":"1274","line":109,"column":15,"nodeType":"1275","endLine":109,"endColumn":80},{"ruleId":"1273","severity":1,"message":"1274","line":118,"column":11,"nodeType":"1275","endLine":122,"endColumn":12},{"ruleId":"1273","severity":1,"message":"1274","line":133,"column":17,"nodeType":"1275","endLine":136,"endColumn":18},{"ruleId":"1273","severity":1,"message":"1274","line":146,"column":11,"nodeType":"1275","endLine":150,"endColumn":12},{"ruleId":"1273","severity":1,"message":"1274","line":161,"column":17,"nodeType":"1275","endLine":164,"endColumn":18},{"ruleId":"1205","severity":1,"message":"1219","line":2,"column":10,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":18},{"ruleId":"1222","severity":1,"message":"1276","line":46,"column":32,"nodeType":"1224","messageId":"1225","endLine":46,"endColumn":34},{"ruleId":"1236","severity":1,"message":"1262","line":116,"column":4,"nodeType":"1238","endLine":116,"endColumn":8,"suggestions":"1277"},{"ruleId":"1236","severity":1,"message":"1278","line":26,"column":6,"nodeType":"1238","endLine":26,"endColumn":10,"suggestions":"1279"},{"ruleId":"1236","severity":1,"message":"1262","line":115,"column":10,"nodeType":"1238","endLine":115,"endColumn":12,"suggestions":"1280"},{"ruleId":"1205","severity":1,"message":"1281","line":4,"column":31,"nodeType":"1207","messageId":"1208","endLine":4,"endColumn":34},{"ruleId":"1205","severity":1,"message":"1282","line":21,"column":10,"nodeType":"1207","messageId":"1208","endLine":21,"endColumn":15},{"ruleId":"1205","severity":1,"message":"1283","line":21,"column":17,"nodeType":"1207","messageId":"1208","endLine":21,"endColumn":27},{"ruleId":"1205","severity":1,"message":"1284","line":30,"column":7,"nodeType":"1207","messageId":"1208","endLine":30,"endColumn":24},{"ruleId":"1222","severity":1,"message":"1223","line":42,"column":11,"nodeType":"1224","messageId":"1225","endLine":42,"endColumn":13},{"ruleId":"1222","severity":1,"message":"1223","line":65,"column":15,"nodeType":"1224","messageId":"1225","endLine":65,"endColumn":17},{"ruleId":"1222","severity":1,"message":"1223","line":89,"column":21,"nodeType":"1224","messageId":"1225","endLine":89,"endColumn":23},{"ruleId":"1205","severity":1,"message":"1233","line":2,"column":18,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":22},{"ruleId":"1205","severity":1,"message":"1285","line":4,"column":10,"nodeType":"1207","messageId":"1208","endLine":4,"endColumn":20},{"ruleId":"1205","severity":1,"message":"1286","line":4,"column":22,"nodeType":"1207","messageId":"1208","endLine":4,"endColumn":26},{"ruleId":"1205","severity":1,"message":"1287","line":4,"column":28,"nodeType":"1207","messageId":"1208","endLine":4,"endColumn":33},{"ruleId":"1205","severity":1,"message":"1288","line":5,"column":10,"nodeType":"1207","messageId":"1208","endLine":5,"endColumn":24},{"ruleId":"1205","severity":1,"message":"1289","line":6,"column":10,"nodeType":"1207","messageId":"1208","endLine":6,"endColumn":31},{"ruleId":"1205","severity":1,"message":"1290","line":7,"column":10,"nodeType":"1207","messageId":"1208","endLine":7,"endColumn":31},{"ruleId":"1222","severity":1,"message":"1276","line":44,"column":31,"nodeType":"1224","messageId":"1225","endLine":44,"endColumn":33},{"ruleId":"1205","severity":1,"message":"1255","line":9,"column":3,"nodeType":"1207","messageId":"1208","endLine":9,"endColumn":20},{"ruleId":"1205","severity":1,"message":"1291","line":27,"column":10,"nodeType":"1207","messageId":"1208","endLine":27,"endColumn":23},{"ruleId":"1205","severity":1,"message":"1292","line":27,"column":26,"nodeType":"1207","messageId":"1208","endLine":27,"endColumn":42},{"ruleId":"1222","severity":1,"message":"1223","line":70,"column":16,"nodeType":"1224","messageId":"1225","endLine":70,"endColumn":18},{"ruleId":"1222","severity":1,"message":"1223","line":78,"column":15,"nodeType":"1224","messageId":"1225","endLine":78,"endColumn":17},{"ruleId":"1236","severity":1,"message":"1293","line":113,"column":6,"nodeType":"1238","endLine":113,"endColumn":11,"suggestions":"1294"},{"ruleId":"1222","severity":1,"message":"1223","line":123,"column":20,"nodeType":"1224","messageId":"1225","endLine":123,"endColumn":22},{"ruleId":"1295","severity":1,"message":"1296","line":203,"column":19,"nodeType":"1275","endLine":208,"endColumn":21},{"ruleId":"1205","severity":1,"message":"1297","line":13,"column":9,"nodeType":"1207","messageId":"1208","endLine":13,"endColumn":28},{"ruleId":"1205","severity":1,"message":"1298","line":20,"column":10,"nodeType":"1207","messageId":"1208","endLine":20,"endColumn":22},{"ruleId":"1222","severity":1,"message":"1276","line":62,"column":36,"nodeType":"1224","messageId":"1225","endLine":62,"endColumn":38},{"ruleId":"1222","severity":1,"message":"1223","line":67,"column":44,"nodeType":"1224","messageId":"1225","endLine":67,"endColumn":46},{"ruleId":"1205","severity":1,"message":"1227","line":1,"column":27,"nodeType":"1207","messageId":"1208","endLine":1,"endColumn":36},{"ruleId":"1205","severity":1,"message":"1261","line":2,"column":16,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":19},{"ruleId":"1222","severity":1,"message":"1223","line":18,"column":69,"nodeType":"1224","messageId":"1225","endLine":18,"endColumn":71},{"ruleId":"1205","severity":1,"message":"1282","line":17,"column":10,"nodeType":"1207","messageId":"1208","endLine":17,"endColumn":15},{"ruleId":"1205","severity":1,"message":"1283","line":17,"column":17,"nodeType":"1207","messageId":"1208","endLine":17,"endColumn":27},{"ruleId":"1205","severity":1,"message":"1299","line":5,"column":8,"nodeType":"1207","messageId":"1208","endLine":5,"endColumn":11},{"ruleId":"1205","severity":1,"message":"1300","line":7,"column":10,"nodeType":"1207","messageId":"1208","endLine":7,"endColumn":23},{"ruleId":"1205","severity":1,"message":"1219","line":2,"column":10,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":18},{"ruleId":"1205","severity":1,"message":"1281","line":4,"column":15,"nodeType":"1207","messageId":"1208","endLine":4,"endColumn":18},{"ruleId":"1205","severity":1,"message":"1260","line":12,"column":11,"nodeType":"1207","messageId":"1208","endLine":12,"endColumn":13},{"ruleId":"1222","severity":1,"message":"1276","line":51,"column":36,"nodeType":"1224","messageId":"1225","endLine":51,"endColumn":38},{"ruleId":"1222","severity":1,"message":"1223","line":58,"column":38,"nodeType":"1224","messageId":"1225","endLine":58,"endColumn":40},{"ruleId":"1205","severity":1,"message":"1301","line":48,"column":9,"nodeType":"1207","messageId":"1208","endLine":48,"endColumn":23},{"ruleId":"1205","severity":1,"message":"1302","line":30,"column":7,"nodeType":"1207","messageId":"1208","endLine":30,"endColumn":14},{"ruleId":"1222","severity":1,"message":"1223","line":56,"column":24,"nodeType":"1224","messageId":"1225","endLine":56,"endColumn":26},{"ruleId":"1205","severity":1,"message":"1303","line":58,"column":9,"nodeType":"1207","messageId":"1208","endLine":58,"endColumn":19},{"ruleId":"1205","severity":1,"message":"1281","line":4,"column":30,"nodeType":"1207","messageId":"1208","endLine":4,"endColumn":33},{"ruleId":"1205","severity":1,"message":"1304","line":9,"column":13,"nodeType":"1207","messageId":"1208","endLine":9,"endColumn":16},{"ruleId":"1205","severity":1,"message":"1305","line":45,"column":9,"nodeType":"1207","messageId":"1208","endLine":45,"endColumn":16},{"ruleId":"1236","severity":1,"message":"1262","line":124,"column":6,"nodeType":"1238","endLine":124,"endColumn":8,"suggestions":"1306"},{"ruleId":"1205","severity":1,"message":"1299","line":5,"column":8,"nodeType":"1207","messageId":"1208","endLine":5,"endColumn":11},{"ruleId":"1205","severity":1,"message":"1300","line":6,"column":10,"nodeType":"1207","messageId":"1208","endLine":6,"endColumn":23},{"ruleId":"1236","severity":1,"message":"1307","line":44,"column":6,"nodeType":"1238","endLine":44,"endColumn":8,"suggestions":"1308"},{"ruleId":"1205","severity":1,"message":"1309","line":5,"column":9,"nodeType":"1207","messageId":"1208","endLine":5,"endColumn":21},{"ruleId":"1205","severity":1,"message":"1310","line":3,"column":8,"nodeType":"1207","messageId":"1208","endLine":3,"endColumn":13},{"ruleId":"1205","severity":1,"message":"1232","line":4,"column":10,"nodeType":"1207","messageId":"1208","endLine":4,"endColumn":16},{"ruleId":"1205","severity":1,"message":"1233","line":4,"column":18,"nodeType":"1207","messageId":"1208","endLine":4,"endColumn":22},{"ruleId":"1205","severity":1,"message":"1255","line":9,"column":3,"nodeType":"1207","messageId":"1208","endLine":9,"endColumn":20},{"ruleId":"1205","severity":1,"message":"1311","line":18,"column":8,"nodeType":"1207","messageId":"1208","endLine":18,"endColumn":28},{"ruleId":"1222","severity":1,"message":"1223","line":132,"column":22,"nodeType":"1224","messageId":"1225","endLine":132,"endColumn":24},{"ruleId":"1236","severity":1,"message":"1262","line":123,"column":6,"nodeType":"1238","endLine":123,"endColumn":10,"suggestions":"1312"},{"ruleId":"1205","severity":1,"message":"1233","line":2,"column":18,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":22},{"ruleId":"1205","severity":1,"message":"1231","line":2,"column":46,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":49},{"ruleId":"1205","severity":1,"message":"1261","line":2,"column":51,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":54},{"ruleId":"1205","severity":1,"message":"1313","line":8,"column":8,"nodeType":"1207","messageId":"1208","endLine":8,"endColumn":24},{"ruleId":"1205","severity":1,"message":"1314","line":14,"column":10,"nodeType":"1207","messageId":"1208","endLine":14,"endColumn":18},{"ruleId":"1205","severity":1,"message":"1315","line":14,"column":20,"nodeType":"1207","messageId":"1208","endLine":14,"endColumn":31},{"ruleId":"1205","severity":1,"message":"1316","line":18,"column":9,"nodeType":"1207","messageId":"1208","endLine":18,"endColumn":21},{"ruleId":"1222","severity":1,"message":"1276","line":19,"column":18,"nodeType":"1224","messageId":"1225","endLine":19,"endColumn":20},{"ruleId":"1317","severity":1,"message":"1318","line":9,"column":9,"nodeType":"1319","messageId":"1225","endLine":9,"endColumn":17},{"ruleId":"1205","severity":1,"message":"1320","line":3,"column":5,"nodeType":"1207","messageId":"1208","endLine":3,"endColumn":17},{"ruleId":"1205","severity":1,"message":"1321","line":4,"column":5,"nodeType":"1207","messageId":"1208","endLine":4,"endColumn":18},{"ruleId":"1205","severity":1,"message":"1322","line":5,"column":5,"nodeType":"1207","messageId":"1208","endLine":5,"endColumn":17},{"ruleId":"1205","severity":1,"message":"1323","line":6,"column":5,"nodeType":"1207","messageId":"1208","endLine":6,"endColumn":18},{"ruleId":"1205","severity":1,"message":"1324","line":7,"column":5,"nodeType":"1207","messageId":"1208","endLine":7,"endColumn":18},{"ruleId":"1205","severity":1,"message":"1325","line":8,"column":5,"nodeType":"1207","messageId":"1208","endLine":8,"endColumn":17},{"ruleId":"1205","severity":1,"message":"1326","line":9,"column":5,"nodeType":"1207","messageId":"1208","endLine":9,"endColumn":25},{"ruleId":"1205","severity":1,"message":"1327","line":10,"column":5,"nodeType":"1207","messageId":"1208","endLine":10,"endColumn":25},{"ruleId":"1205","severity":1,"message":"1328","line":11,"column":5,"nodeType":"1207","messageId":"1208","endLine":11,"endColumn":17},{"ruleId":"1205","severity":1,"message":"1329","line":12,"column":5,"nodeType":"1207","messageId":"1208","endLine":12,"endColumn":17},{"ruleId":"1205","severity":1,"message":"1330","line":13,"column":5,"nodeType":"1207","messageId":"1208","endLine":13,"endColumn":17},{"ruleId":"1205","severity":1,"message":"1264","line":7,"column":3,"nodeType":"1207","messageId":"1208","endLine":7,"endColumn":13},{"ruleId":"1236","severity":1,"message":"1265","line":27,"column":6,"nodeType":"1238","endLine":27,"endColumn":8,"suggestions":"1331"},{"ruleId":"1222","severity":1,"message":"1223","line":51,"column":53,"nodeType":"1224","messageId":"1225","endLine":51,"endColumn":55},{"ruleId":"1205","severity":1,"message":"1299","line":5,"column":8,"nodeType":"1207","messageId":"1208","endLine":5,"endColumn":11},{"ruleId":"1205","severity":1,"message":"1300","line":6,"column":10,"nodeType":"1207","messageId":"1208","endLine":6,"endColumn":23},{"ruleId":"1222","severity":1,"message":"1223","line":18,"column":34,"nodeType":"1224","messageId":"1225","endLine":18,"endColumn":36},{"ruleId":"1222","severity":1,"message":"1223","line":33,"column":34,"nodeType":"1224","messageId":"1225","endLine":33,"endColumn":36},{"ruleId":"1205","severity":1,"message":"1332","line":17,"column":3,"nodeType":"1207","messageId":"1208","endLine":17,"endColumn":21},{"ruleId":"1205","severity":1,"message":"1302","line":6,"column":9,"nodeType":"1207","messageId":"1208","endLine":6,"endColumn":16},{"ruleId":"1205","severity":1,"message":"1333","line":10,"column":10,"nodeType":"1207","messageId":"1208","endLine":10,"endColumn":14},{"ruleId":"1205","severity":1,"message":"1264","line":7,"column":3,"nodeType":"1207","messageId":"1208","endLine":7,"endColumn":13},{"ruleId":"1236","severity":1,"message":"1265","line":26,"column":6,"nodeType":"1238","endLine":26,"endColumn":8,"suggestions":"1334"},{"ruleId":"1236","severity":1,"message":"1262","line":128,"column":6,"nodeType":"1238","endLine":128,"endColumn":8,"suggestions":"1335"},{"ruleId":"1205","severity":1,"message":"1255","line":9,"column":3,"nodeType":"1207","messageId":"1208","endLine":9,"endColumn":20},{"ruleId":"1236","severity":1,"message":"1262","line":116,"column":10,"nodeType":"1238","endLine":116,"endColumn":12,"suggestions":"1336"},{"ruleId":"1205","severity":1,"message":"1228","line":2,"column":10,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":19},{"ruleId":"1205","severity":1,"message":"1337","line":7,"column":10,"nodeType":"1207","messageId":"1208","endLine":7,"endColumn":15},{"ruleId":"1205","severity":1,"message":"1338","line":7,"column":23,"nodeType":"1207","messageId":"1208","endLine":7,"endColumn":29},{"ruleId":"1205","severity":1,"message":"1339","line":10,"column":10,"nodeType":"1207","messageId":"1208","endLine":10,"endColumn":15},{"ruleId":"1205","severity":1,"message":"1340","line":11,"column":10,"nodeType":"1207","messageId":"1208","endLine":11,"endColumn":17},{"ruleId":"1205","severity":1,"message":"1341","line":24,"column":19,"nodeType":"1207","messageId":"1208","endLine":24,"endColumn":29},{"ruleId":"1205","severity":1,"message":"1219","line":2,"column":10,"nodeType":"1207","messageId":"1208","endLine":2,"endColumn":18},{"ruleId":"1273","severity":1,"message":"1274","line":23,"column":9,"nodeType":"1275","endLine":26,"endColumn":10},{"ruleId":"1273","severity":1,"message":"1274","line":83,"column":9,"nodeType":"1275","endLine":87,"endColumn":10},{"ruleId":"1273","severity":1,"message":"1274","line":96,"column":9,"nodeType":"1275","endLine":100,"endColumn":10},{"ruleId":"1273","severity":1,"message":"1274","line":110,"column":11,"nodeType":"1275","endLine":113,"endColumn":12},{"ruleId":"1273","severity":1,"message":"1274","line":125,"column":9,"nodeType":"1275","endLine":132,"endColumn":10},{"ruleId":"1273","severity":1,"message":"1274","line":141,"column":9,"nodeType":"1275","endLine":145,"endColumn":10},{"ruleId":"1273","severity":1,"message":"1274","line":154,"column":9,"nodeType":"1275","endLine":158,"endColumn":10},{"ruleId":"1273","severity":1,"message":"1274","line":169,"column":15,"nodeType":"1275","endLine":169,"endColumn":80},{"ruleId":"1273","severity":1,"message":"1274","line":174,"column":15,"nodeType":"1275","endLine":177,"endColumn":16},{"ruleId":"1273","severity":1,"message":"1274","line":191,"column":9,"nodeType":"1275","endLine":195,"endColumn":10},{"ruleId":"1273","severity":1,"message":"1274","line":204,"column":9,"nodeType":"1275","endLine":211,"endColumn":10},{"ruleId":"1273","severity":1,"message":"1274","line":222,"column":15,"nodeType":"1275","endLine":222,"endColumn":80},"no-native-reassign",["1342"],"no-negated-in-lhs",["1343"],["1342"],["1343"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'put' is defined but never used.","'takeLatest' is defined but never used.",["1342"],["1343"],["1342"],["1343"],["1342"],["1343"],["1342"],["1343"],"'Redirect' is defined but never used.",["1342"],["1343"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setMenus' is assigned a value but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'setsection' is assigned a value but never used.","'PDF' is defined but never used.","'Nav' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'updatetime' is assigned a value but never used.","'player' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'CourseData', 'gerCourse', 'getDiscussion', and 'sectionId'. Either include them or remove the dependency array.","ArrayExpression",["1344"],"React Hook useEffect has a missing dependency: 'changeVideoPlayer'. Either include it or remove the dependency array.",["1345"],"no-redeclare","'i' is already defined.","redeclared","no-self-assign","'player' is assigned to itself.","selfAssignment","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'CardHeaderToolbar' is defined but never used.","'Progress' is defined but never used.","'colors' is defined but never used.",["1342"],["1343"],"'id' is assigned a value but never used.","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["1346"],"'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'update'. Either include it or remove the dependency array.",["1347"],["1342"],["1343"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","JSXOpeningElement","Expected '!==' and instead saw '!='.",["1348"],"React Hook useEffect has a missing dependency: 'qid'. Either include it or remove the dependency array.",["1349"],["1350"],"'Col' is defined but never used.","'Class' is assigned a value but never used.","'setClasses' is assigned a value but never used.","'handleDescripiton' is assigned a value but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'ExpansionPanel' is defined but never used.","'ExpansionPanelSummary' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'ClassSelected' is assigned a value but never used.","'setClassSelected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1351"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'CourseContenHandler' is assigned a value but never used.","'BranchesName' is assigned a value but never used.","'SVG' is defined but never used.","'toAbsoluteUrl' is defined but never used.","'InactiveteUser' is assigned a value but never used.","'history' is assigned a value but never used.","'editActive' is assigned a value but never used.","'cid' is assigned a value but never used.","'getData' is assigned a value but never used.",["1352"],"React Hook useEffect has a missing dependency: 'courseId'. Either include it or remove the dependency array.",["1353"],"'QuickActions' is defined but never used.","'input' is defined but never used.","'ClassActionFormatter' is defined but never used.",["1354"],"'AddContentButton' is defined but never used.","'sections' is assigned a value but never used.","'setSections' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","'MixedWidget1' is defined but never used.","'MixedWidget14' is defined but never used.","'ListsWidget9' is defined but never used.","'StatsWidget11' is defined but never used.","'StatsWidget12' is defined but never used.","'ListsWidget1' is defined but never used.","'AdvanceTablesWidget2' is defined but never used.","'AdvanceTablesWidget4' is defined but never used.","'ListsWidget3' is defined but never used.","'ListsWidget4' is defined but never used.","'ListsWidget8' is defined but never used.",["1355"],"'PermissionContenxt' is defined but never used.","'Role' is assigned a value but never used.",["1356"],["1357"],["1358"],"'Modal' is defined but never used.","'Select' is defined but never used.","'Input' is defined but never used.","'actions' is defined but never used.","'setContent' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1359","fix":"1360"},{"desc":"1361","fix":"1362"},{"desc":"1363","fix":"1364"},{"desc":"1365","fix":"1366"},{"desc":"1367","fix":"1368"},{"desc":"1369","fix":"1370"},{"desc":"1363","fix":"1371"},{"desc":"1372","fix":"1373"},{"desc":"1363","fix":"1374"},{"desc":"1375","fix":"1376"},{"desc":"1367","fix":"1377"},{"desc":"1365","fix":"1378"},{"desc":"1365","fix":"1379"},{"desc":"1363","fix":"1380"},{"desc":"1363","fix":"1381"},"Update the dependencies array to be: [CourseData, contentId, gerCourse, getDiscussion, sectionId, time]",{"range":"1382","text":"1383"},"Update the dependencies array to be: [changeVideoPlayer, time]",{"range":"1384","text":"1385"},"Update the dependencies array to be: [updateData]",{"range":"1386","text":"1387"},"Update the dependencies array to be: [update]",{"range":"1388","text":"1389"},"Update the dependencies array to be: [id, updateData]",{"range":"1390","text":"1391"},"Update the dependencies array to be: [id, qid]",{"range":"1392","text":"1393"},{"range":"1394","text":"1387"},"Update the dependencies array to be: [cid, id]",{"range":"1395","text":"1396"},{"range":"1397","text":"1387"},"Update the dependencies array to be: [courseId]",{"range":"1398","text":"1399"},{"range":"1400","text":"1391"},{"range":"1401","text":"1389"},{"range":"1402","text":"1389"},{"range":"1403","text":"1387"},{"range":"1404","text":"1387"},[3329,3348],"[CourseData, contentId, gerCourse, getDiscussion, sectionId, time]",[3435,3442],"[changeVideoPlayer, time]",[3303,3305],"[updateData]",[347,349],"[update]",[2875,2879],"[id, updateData]",[678,682],"[id, qid]",[2953,2955],[2978,2983],"[cid, id]",[3094,3096],[1473,1475],"[courseId]",[3206,3210],[818,820],[765,767],[3282,3284],[2939,2941]]