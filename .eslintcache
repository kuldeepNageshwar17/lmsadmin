[{"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\index.js":"1","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\BasePage.js":"2","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\BuilderPage.js":"3","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\index.js":"4","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\index.js":"5","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\permissionRoles.js":"6","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\index.js":"7","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\Courses.js":"8","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\branchUserList.js":"9","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\examQuestions.js":"10","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\SectionEditDilogue.js":"11","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\CourseProfileFormater.js":"12","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\ContentAddButton.js":"13","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\progressbar.js":"14","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\questionForm.js":"15","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\NewCourse.js":"16","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentform.js":"17","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionTestList.js":"18","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\TestForm.js":"19","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestList.js":"20","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseQuestionForm.js":"21","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\pages\\Notifications.js":"22","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\CourseContent.js":"23","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\cardSideStickey.js":"24","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Announcement.js":"25","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\TestQuestionsActionFormatter.js":"26","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\coursetestblocks.js":"27","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ScheduleExamActionFormatter.js":"28","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget1.js":"29","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget8.js":"30","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\mixed\\MixedWidget1.js":"31","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget4.js":"32","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\stats\\StatsWidget12.js":"33","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenuListControlPanel.js":"34","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\Userform.js":"35","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\index.js":"36","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\store.js":"37","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicSubheader.js":"38","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\privateRoute.js":"39","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\_redux\\EcourseRedux.js":"40","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\_redux\\authRedux.js":"41","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CoursePlayer.js":"42","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\__mocks__\\userTableMock.js":"43","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\index.js":"44","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\index.js":"45","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage5.js":"46","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage2.js":"47","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\menus.js":"48","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\FeeManagement\\pages\\feeManagement.js":"49","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\scheduleExam.js":"50","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\location.js":"51","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentAudio.js":"52","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\userProfile.js":"53","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentText.js":"54","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\components\\userActionFormatter.js":"55","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\classActionFormatterBranch.js":"56","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Overview.js":"57","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\SplashScreen.js":"58","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\LoadingDialog.js":"59","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\Pagination.js":"60","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\HeaderCheckbox.js":"61","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\stats\\StatsWidget11.js":"62","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\mixed\\MixedWidget14.js":"63","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget3.js":"64","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\FormAlert.js":"65","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\FieldFeedbackLabel.js":"66","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeBlockToolbar.js":"67","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeBlock.js":"68","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\batches.js":"69","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\branches.js":"70","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\branchForm.js":"71","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseSections.js":"72","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownTopbarItemToggler.js":"73","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu3.js":"74","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu2.js":"75","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\cookie.js":"76","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\branchActionFormatter.js":"77","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classes.js":"78","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentPasswordReset.js":"79","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\classActionFormatter.js":"80","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestQuestion.js":"81","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\RouterHelpers.js":"82","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionalTestList.js":"83","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TablePaginationHelpers.js":"84","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\testQuestion.js":"85","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\content\\ContentRoute.js":"86","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\TestActionFormatter.js":"87","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\ScrollTop.js":"88","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\footer\\Footer.js":"89","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\components\\NotificationActionFormatter.js":"90","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\offcanvas\\QuickPanel.js":"91","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\scrolltop.js":"92","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\footer.js":"93","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\brand.js":"94","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header.js":"95","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\Topbar.js":"96","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside.js":"97","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\components\\BreadCrumbs.js":"98","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\offcanvas.js":"99","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\ControlPanelButton.js":"100","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\LanguageSelectorDropdown.js":"101","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\MyCartDropdown.js":"102","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenuList.js":"103","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\search\\SearchResult.js":"104","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\index.js":"105","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\index.js":"106","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\setupAxios.js":"107","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\Metronici18n.js":"108","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicSplashScreen.js":"109","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\LayoutConfig.js":"110","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorsPage.js":"111","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\LayoutInit.js":"112","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\StickyToolbar.js":"113","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\Aside.js":"114","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\SubHeader.js":"115","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage6.js":"116","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\index.js":"117","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\_redux\\authCrud.js":"118","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\header-menu\\HeaderMenuWrapper.js":"119","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\components\\QuickActions.js":"120","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\brand\\Brand.js":"121","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\sticky-card.js":"122","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside-toggle.js":"123","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside-menu.js":"124","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TableSortingHelpers.js":"125","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\QuiclUserToggler.js":"126","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\AssetsHelpers.js":"127","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\menu.js":"128","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\PaginationToolbar.js":"129","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Checkbox.js":"130","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\PaginationLinks.js":"131","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples-kt\\KTCodeExample.js":"132","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeExample.js":"133","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\UserProfileDropdown.js":"134","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\BranchesSelectorDropdown.js":"135","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\QuickActionsDropdown.js":"136","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage3.js":"137","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\DashboardPage.js":"138","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\index.js":"139","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentVideo.js":"140","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\testList.js":"141","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentAll.js":"142","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\batchForm.js":"143","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestForm.js":"144","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classForm.js":"145","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\question.js":"146","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\exam.js":"147","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\FAQs.js":"148","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\batchActionFormatter.js":"149","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\QuestionOptionForm.js":"150","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\index.js":"151","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\advance-tables\\AdvanceTablesWidget2.js":"152","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\index.js":"153","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\CourseActionFormatter.js":"154","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourses.js":"155","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\feesChangeFormatterBranch.js":"156","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\UserCourseActionFormatter.js":"157","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourseForm.js":"158","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseSectionform.js":"159","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\UserCourseProfileFormater.js":"160","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourseSections.js":"161","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourseSectionform.js":"162","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserContentAll.js":"163","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\App.js":"164","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\__mocks__\\mockAxios.js":"165","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\content\\Content.js":"166","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\I18nProvider.js":"167","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage1.js":"168","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\permissionContext.js":"169","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\index.js":"170","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\stretched-card.js":"171","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\ContentEditDilogue.js":"172","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\index.js":"173","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\header-menu\\HeaderMenu.js":"174","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\branchuserForm.js":"175","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\SVGIcon.js":"176","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\index.js":"177","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\DatePickerField.js":"178","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples-kt\\KTCodeBlock.js":"179","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Curriculam.js":"180","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\builder\\Builder.js":"181","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\examForm.js":"182","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseForm.js":"183","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\permissions.js":"184","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header-topbar.js":"185","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header-menu.js":"186","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\components\\StudentActionFormatter.js":"187","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\rootReducer.js":"188","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicLayout.js":"189","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\connectPage.js":"190","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\MyPage.js":"191","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\LocalStorageHelpers.js":"192","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\CourseDetails.js":"193","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionalTestForm.js":"194","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dashboards\\Dashboard.js":"195","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Reviews.js":"196","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\Notice.js":"197","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\Card.js":"198","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeExampleSimple.js":"199","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classesForBranch.js":"200","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ExamQuestionsActionFormatter.js":"201","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\components\\MenuActionFormatter.js":"202","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\Header.js":"203","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\quick-user.js":"204","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\subheader.js":"205","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\search\\SearchDropdown.js":"206"},{"size":1082,"mtime":1612250061198,"results":"207","hashOfConfig":"208"},{"size":3019,"mtime":1612251168339,"results":"209","hashOfConfig":"208"},{"size":143,"mtime":1602574510030,"results":"210","hashOfConfig":"208"},{"size":1563,"mtime":1603882714442,"results":"211","hashOfConfig":"208"},{"size":1176,"mtime":1605011855263,"results":"212","hashOfConfig":"208"},{"size":1851,"mtime":1605704396587,"results":"213","hashOfConfig":"208"},{"size":93,"mtime":1602574509977,"results":"214","hashOfConfig":"208"},{"size":2262,"mtime":1604400919505,"results":"215","hashOfConfig":"208"},{"size":4520,"mtime":1605075139687,"results":"216","hashOfConfig":"208"},{"size":4498,"mtime":1603266527524,"results":"217","hashOfConfig":"208"},{"size":5538,"mtime":1602574510008,"results":"218","hashOfConfig":"208"},{"size":722,"mtime":1604403250174,"results":"219","hashOfConfig":"208"},{"size":1266,"mtime":1602574510018,"results":"220","hashOfConfig":"208"},{"size":469,"mtime":1604473630690,"results":"221","hashOfConfig":"208"},{"size":5884,"mtime":1604396857725,"results":"222","hashOfConfig":"208"},{"size":5978,"mtime":1602574510010,"results":"223","hashOfConfig":"208"},{"size":8016,"mtime":1605878768575,"results":"224","hashOfConfig":"208"},{"size":4698,"mtime":1602756042900,"results":"225","hashOfConfig":"208"},{"size":4790,"mtime":1603172140918,"results":"226","hashOfConfig":"208"},{"size":4890,"mtime":1603798494638,"results":"227","hashOfConfig":"208"},{"size":5624,"mtime":1604668377045,"results":"228","hashOfConfig":"208"},{"size":7540,"mtime":1606565435783,"results":"229","hashOfConfig":"208"},{"size":9780,"mtime":1602764233930,"results":"230","hashOfConfig":"208"},{"size":916,"mtime":1604736372828,"results":"231","hashOfConfig":"208"},{"size":3599,"mtime":1604666700836,"results":"232","hashOfConfig":"208"},{"size":1848,"mtime":1603369349092,"results":"233","hashOfConfig":"208"},{"size":2004,"mtime":1604404760443,"results":"234","hashOfConfig":"208"},{"size":3369,"mtime":1606114191051,"results":"235","hashOfConfig":"208"},{"size":5943,"mtime":1602574509979,"results":"236","hashOfConfig":"208"},{"size":4480,"mtime":1602574509980,"results":"237","hashOfConfig":"208"},{"size":7898,"mtime":1602574509981,"results":"238","hashOfConfig":"208"},{"size":5922,"mtime":1602574509980,"results":"239","hashOfConfig":"208"},{"size":5298,"mtime":1602574509982,"results":"240","hashOfConfig":"208"},{"size":10040,"mtime":1612268664956,"results":"241","hashOfConfig":"208"},{"size":9158,"mtime":1612262508613,"results":"242","hashOfConfig":"208"},{"size":2132,"mtime":1602574510031,"results":"243","hashOfConfig":"208"},{"size":899,"mtime":1602574510034,"results":"244","hashOfConfig":"208"},{"size":1776,"mtime":1602574509987,"results":"245","hashOfConfig":"208"},{"size":630,"mtime":1612245766301,"results":"246","hashOfConfig":"208"},{"size":1458,"mtime":1602574510007,"results":"247","hashOfConfig":"208"},{"size":4406,"mtime":1612267227045,"results":"248","hashOfConfig":"208"},{"size":19752,"mtime":1612514496150,"results":"249","hashOfConfig":"208"},{"size":2505,"mtime":1602574510003,"results":"250","hashOfConfig":"208"},{"size":963,"mtime":1604668377048,"results":"251","hashOfConfig":"208"},{"size":2812,"mtime":1604401928280,"results":"252","hashOfConfig":"208"},{"size":1101,"mtime":1602574510013,"results":"253","hashOfConfig":"208"},{"size":759,"mtime":1602574510012,"results":"254","hashOfConfig":"208"},{"size":4224,"mtime":1603172140920,"results":"255","hashOfConfig":"208"},{"size":4754,"mtime":1608376147583,"results":"256","hashOfConfig":"208"},{"size":8902,"mtime":1606113497309,"results":"257","hashOfConfig":"208"},{"size":2215,"mtime":1606896292246,"results":"258","hashOfConfig":"208"},{"size":4444,"mtime":1602574510021,"results":"259","hashOfConfig":"208"},{"size":944,"mtime":1602574510027,"results":"260","hashOfConfig":"208"},{"size":4465,"mtime":1602574510021,"results":"261","hashOfConfig":"208"},{"size":1572,"mtime":1605075139676,"results":"262","hashOfConfig":"208"},{"size":1420,"mtime":1605859903477,"results":"263","hashOfConfig":"208"},{"size":485,"mtime":1604733268478,"results":"264","hashOfConfig":"208"},{"size":440,"mtime":1602574509969,"results":"265","hashOfConfig":"208"},{"size":1068,"mtime":1602574509967,"results":"266","hashOfConfig":"208"},{"size":570,"mtime":1602574509974,"results":"267","hashOfConfig":"208"},{"size":272,"mtime":1602574509972,"results":"268","hashOfConfig":"208"},{"size":5018,"mtime":1602574509982,"results":"269","hashOfConfig":"208"},{"size":3830,"mtime":1602574509981,"results":"270","hashOfConfig":"208"},{"size":5800,"mtime":1602574509980,"results":"271","hashOfConfig":"208"},{"size":591,"mtime":1602574509972,"results":"272","hashOfConfig":"208"},{"size":1477,"mtime":1602574509972,"results":"273","hashOfConfig":"208"},{"size":1166,"mtime":1602574509970,"results":"274","hashOfConfig":"208"},{"size":3501,"mtime":1602574509970,"results":"275","hashOfConfig":"208"},{"size":4596,"mtime":1603431280311,"results":"276","hashOfConfig":"208"},{"size":4582,"mtime":1606717900205,"results":"277","hashOfConfig":"208"},{"size":5994,"mtime":1606823330089,"results":"278","hashOfConfig":"208"},{"size":10324,"mtime":1612356730454,"results":"279","hashOfConfig":"208"},{"size":392,"mtime":1602574509977,"results":"280","hashOfConfig":"208"},{"size":2647,"mtime":1602574509976,"results":"281","hashOfConfig":"208"},{"size":1905,"mtime":1602574509976,"results":"282","hashOfConfig":"208"},{"size":1697,"mtime":1602574509562,"results":"283","hashOfConfig":"208"},{"size":1425,"mtime":1602574510019,"results":"284","hashOfConfig":"208"},{"size":4415,"mtime":1603798916684,"results":"285","hashOfConfig":"208"},{"size":2427,"mtime":1602574510029,"results":"286","hashOfConfig":"208"},{"size":1771,"mtime":1605702874746,"results":"287","hashOfConfig":"208"},{"size":2247,"mtime":1604668377046,"results":"288","hashOfConfig":"208"},{"size":1657,"mtime":1602574509964,"results":"289","hashOfConfig":"208"},{"size":4952,"mtime":1603455881289,"results":"290","hashOfConfig":"208"},{"size":2447,"mtime":1602574509965,"results":"291","hashOfConfig":"208"},{"size":4558,"mtime":1602758291976,"results":"292","hashOfConfig":"208"},{"size":821,"mtime":1602574509991,"results":"293","hashOfConfig":"208"},{"size":1871,"mtime":1603369349091,"results":"294","hashOfConfig":"208"},{"size":377,"mtime":1602574509992,"results":"295","hashOfConfig":"208"},{"size":1941,"mtime":1602574509997,"results":"296","hashOfConfig":"208"},{"size":1948,"mtime":1606118389422,"results":"297","hashOfConfig":"208"},{"size":31741,"mtime":1602574509996,"results":"298","hashOfConfig":"208"},{"size":889,"mtime":1602574509840,"results":"299","hashOfConfig":"208"},{"size":758,"mtime":1602574509819,"results":"300","hashOfConfig":"208"},{"size":869,"mtime":1602574509817,"results":"301","hashOfConfig":"208"},{"size":1709,"mtime":1602574509825,"results":"302","hashOfConfig":"208"},{"size":3568,"mtime":1602574509998,"results":"303","hashOfConfig":"208"},{"size":3327,"mtime":1602574509567,"results":"304","hashOfConfig":"208"},{"size":756,"mtime":1602574510000,"results":"305","hashOfConfig":"208"},{"size":9129,"mtime":1602574509564,"results":"306","hashOfConfig":"208"},{"size":1119,"mtime":1612269372715,"results":"307","hashOfConfig":"208"},{"size":2795,"mtime":1602574509993,"results":"308","hashOfConfig":"208"},{"size":9664,"mtime":1602574509993,"results":"309","hashOfConfig":"208"},{"size":17134,"mtime":1612351923633,"results":"310","hashOfConfig":"208"},{"size":11389,"mtime":1602574509995,"results":"311","hashOfConfig":"208"},{"size":395,"mtime":1602574510000,"results":"312","hashOfConfig":"208"},{"size":64,"mtime":1602574509983,"results":"313","hashOfConfig":"208"},{"size":863,"mtime":1602574510033,"results":"314","hashOfConfig":"208"},{"size":1319,"mtime":1602574509983,"results":"315","hashOfConfig":"208"},{"size":1411,"mtime":1602574509986,"results":"316","hashOfConfig":"208"},{"size":5421,"mtime":1602574509986,"results":"317","hashOfConfig":"208"},{"size":891,"mtime":1602574510014,"results":"318","hashOfConfig":"208"},{"size":2941,"mtime":1602574509988,"results":"319","hashOfConfig":"208"},{"size":1478,"mtime":1602574509992,"results":"320","hashOfConfig":"208"},{"size":1693,"mtime":1602574509988,"results":"321","hashOfConfig":"208"},{"size":3426,"mtime":1602574509999,"results":"322","hashOfConfig":"208"},{"size":965,"mtime":1602574510013,"results":"323","hashOfConfig":"208"},{"size":234,"mtime":1602574509966,"results":"324","hashOfConfig":"208"},{"size":970,"mtime":1612246455574,"results":"325","hashOfConfig":"208"},{"size":2213,"mtime":1602574509999,"results":"326","hashOfConfig":"208"},{"size":1651,"mtime":1602574510000,"results":"327","hashOfConfig":"208"},{"size":1558,"mtime":1602574509990,"results":"328","hashOfConfig":"208"},{"size":2304,"mtime":1602574509826,"results":"329","hashOfConfig":"208"},{"size":2560,"mtime":1602574509566,"results":"330","hashOfConfig":"208"},{"size":2853,"mtime":1602574509566,"results":"331","hashOfConfig":"208"},{"size":995,"mtime":1602574509965,"results":"332","hashOfConfig":"208"},{"size":1920,"mtime":1608198189737,"results":"333","hashOfConfig":"208"},{"size":313,"mtime":1602574509964,"results":"334","hashOfConfig":"208"},{"size":29809,"mtime":1602574509564,"results":"335","hashOfConfig":"208"},{"size":1689,"mtime":1602574509974,"results":"336","hashOfConfig":"208"},{"size":385,"mtime":1602574509971,"results":"337","hashOfConfig":"208"},{"size":2994,"mtime":1602574509974,"results":"338","hashOfConfig":"208"},{"size":1861,"mtime":1602574509969,"results":"339","hashOfConfig":"208"},{"size":919,"mtime":1602574509970,"results":"340","hashOfConfig":"208"},{"size":6461,"mtime":1602574509994,"results":"341","hashOfConfig":"208"},{"size":2791,"mtime":1602574509992,"results":"342","hashOfConfig":"208"},{"size":6790,"mtime":1602574509994,"results":"343","hashOfConfig":"208"},{"size":1202,"mtime":1602574510012,"results":"344","hashOfConfig":"208"},{"size":153,"mtime":1602574510031,"results":"345","hashOfConfig":"208"},{"size":1269,"mtime":1612249130638,"results":"346","hashOfConfig":"208"},{"size":4481,"mtime":1602935473187,"results":"347","hashOfConfig":"208"},{"size":2307,"mtime":1604402211182,"results":"348","hashOfConfig":"208"},{"size":14546,"mtime":1611925876416,"results":"349","hashOfConfig":"208"},{"size":4329,"mtime":1612249595415,"results":"350","hashOfConfig":"208"},{"size":7196,"mtime":1604921087488,"results":"351","hashOfConfig":"208"},{"size":4099,"mtime":1604399561347,"results":"352","hashOfConfig":"208"},{"size":2098,"mtime":1602745391836,"results":"353","hashOfConfig":"208"},{"size":7213,"mtime":1605788572245,"results":"354","hashOfConfig":"208"},{"size":3129,"mtime":1604732234515,"results":"355","hashOfConfig":"208"},{"size":1420,"mtime":1602574510019,"results":"356","hashOfConfig":"208"},{"size":2225,"mtime":1602574510015,"results":"357","hashOfConfig":"208"},{"size":683,"mtime":1602574509979,"results":"358","hashOfConfig":"208"},{"size":18681,"mtime":1602574509978,"results":"359","hashOfConfig":"208"},{"size":4196,"mtime":1612348252509,"results":"360","hashOfConfig":"208"},{"size":2247,"mtime":1602834074943,"results":"361","hashOfConfig":"208"},{"size":5039,"mtime":1612345153392,"results":"362","hashOfConfig":"208"},{"size":1727,"mtime":1606109556214,"results":"363","hashOfConfig":"208"},{"size":2251,"mtime":1612334352678,"results":"364","hashOfConfig":"208"},{"size":7941,"mtime":1612527577624,"results":"365","hashOfConfig":"208"},{"size":3353,"mtime":1612344928901,"results":"366","hashOfConfig":"208"},{"size":726,"mtime":1612334356979,"results":"367","hashOfConfig":"208"},{"size":10288,"mtime":1612508309490,"results":"368","hashOfConfig":"208"},{"size":3369,"mtime":1612345770805,"results":"369","hashOfConfig":"208"},{"size":14550,"mtime":1612348178363,"results":"370","hashOfConfig":"208"},{"size":1718,"mtime":1602574510001,"results":"371","hashOfConfig":"208"},{"size":262,"mtime":1602574510032,"results":"372","hashOfConfig":"208"},{"size":936,"mtime":1602574509990,"results":"373","hashOfConfig":"208"},{"size":1181,"mtime":1602574509982,"results":"374","hashOfConfig":"208"},{"size":752,"mtime":1602574510012,"results":"375","hashOfConfig":"208"},{"size":953,"mtime":1605859903520,"results":"376","hashOfConfig":"208"},{"size":326,"mtime":1606034398942,"results":"377","hashOfConfig":"208"},{"size":1653,"mtime":1602574509827,"results":"378","hashOfConfig":"208"},{"size":7240,"mtime":1602574510008,"results":"379","hashOfConfig":"208"},{"size":1291,"mtime":1602574509973,"results":"380","hashOfConfig":"208"},{"size":1236,"mtime":1602574509999,"results":"381","hashOfConfig":"208"},{"size":6936,"mtime":1605859903520,"results":"382","hashOfConfig":"208"},{"size":552,"mtime":1602574509968,"results":"383","hashOfConfig":"208"},{"size":342,"mtime":1602574509977,"results":"384","hashOfConfig":"208"},{"size":1272,"mtime":1602574509971,"results":"385","hashOfConfig":"208"},{"size":3106,"mtime":1602574509969,"results":"386","hashOfConfig":"208"},{"size":1800,"mtime":1604661966971,"results":"387","hashOfConfig":"208"},{"size":35920,"mtime":1602574509966,"results":"388","hashOfConfig":"208"},{"size":6568,"mtime":1604491494176,"results":"389","hashOfConfig":"208"},{"size":7249,"mtime":1606566629799,"results":"390","hashOfConfig":"208"},{"size":4133,"mtime":1605094964074,"results":"391","hashOfConfig":"208"},{"size":965,"mtime":1602574509823,"results":"392","hashOfConfig":"208"},{"size":2360,"mtime":1602574509822,"results":"393","hashOfConfig":"208"},{"size":1225,"mtime":1602574510028,"results":"394","hashOfConfig":"208"},{"size":390,"mtime":1602574510033,"results":"395","hashOfConfig":"208"},{"size":1739,"mtime":1602574509986,"results":"396","hashOfConfig":"208"},{"size":682,"mtime":1608196733706,"results":"397","hashOfConfig":"208"},{"size":226,"mtime":1602574510031,"results":"398","hashOfConfig":"208"},{"size":2660,"mtime":1602574509964,"results":"399","hashOfConfig":"208"},{"size":4402,"mtime":1604734221679,"results":"400","hashOfConfig":"208"},{"size":6230,"mtime":1604668377046,"results":"401","hashOfConfig":"208"},{"size":2168,"mtime":1602574509975,"results":"402","hashOfConfig":"208"},{"size":1251,"mtime":1604661117384,"results":"403","hashOfConfig":"208"},{"size":1099,"mtime":1602574509968,"results":"404","hashOfConfig":"208"},{"size":4362,"mtime":1602574509967,"results":"405","hashOfConfig":"208"},{"size":4611,"mtime":1602574509971,"results":"406","hashOfConfig":"208"},{"size":5439,"mtime":1606112044150,"results":"407","hashOfConfig":"208"},{"size":1835,"mtime":1603369349090,"results":"408","hashOfConfig":"208"},{"size":1399,"mtime":1603172140919,"results":"409","hashOfConfig":"208"},{"size":1549,"mtime":1602574509998,"results":"410","hashOfConfig":"208"},{"size":2251,"mtime":1602574509839,"results":"411","hashOfConfig":"208"},{"size":1000,"mtime":1602574509829,"results":"412","hashOfConfig":"208"},{"size":7130,"mtime":1602574509995,"results":"413","hashOfConfig":"208"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"417"},"a5wehm",{"filePath":"418","messages":"419","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"427"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"417"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"439"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"439"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"427"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"417"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"417"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"417"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"417"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"476","messages":"477","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"417"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"417"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"509","messages":"510","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"417"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"417"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"427"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"439"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"427"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"439"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"417"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"417"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"595"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"439"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"417"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"439"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"417"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"714","messages":"715","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"724","messages":"725","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"726","messages":"727","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"728","messages":"729","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"417"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"417"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"427"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762","usedDeprecatedRules":"417"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"427"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"816","messages":"817","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"417"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"831","messages":"832","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"837","messages":"838","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"839","messages":"840","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"841","messages":"842","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"843","messages":"844","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\index.js",["865"],"import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport Students from './pages/student'\r\nimport StudentProfile from './pages/studentProfile'\r\nimport StudentForm from './pages/studentform'\r\nimport Passwordreset from './pages/studentPasswordReset'\r\n\r\nexport default function Student() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/Student/StudentForm/:id'>\r\n        <StudentForm />\r\n      </Route>\r\n      <Route exact path='/Student/studentProfile/:id'>\r\n        <StudentProfile />\r\n      </Route>\r\n      <Route exact path='/Student/SPasswordReset/:id'>\r\n        <Passwordreset />\r\n      </Route>\r\n      {/* <Route exact path='/Student/Student/:id'>\r\n        <StudentProfile />\r\n      </Route> */}\r\n      <Route exact path='/Student'>\r\n        <Students />\r\n      </Route>\r\n      {/* <Route exact path='/Student' component={Students} /> */}\r\n      <Route  exact path='/Student/StudentForm' component={StudentForm} />\r\n      {/* <Route  exact path='/Student/testprofile' component={StudentProfile} /> */}\r\n\r\n     \r\n    </Switch>\r\n  )\r\n}\r\n",["866","867"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\BasePage.js",["868","869"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\BuilderPage.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\index.js",[],["870","871"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\index.js",[],["872","873"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\permissionRoles.js",["874"],"import React, { useEffect, useState } from 'react'\r\nimport { Card, Table } from 'react-bootstrap'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nexport default function PermissionRoles () {\r\n  const [Roles, setRoles] = useState()\r\n  const history = useHistory()\r\n  const { id } = useParams()\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('/api/permission/roles')\r\n      .then(result => {\r\n        console.log(\"result here\" , result , \"end\")\r\n        setRoles(result.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    // axios\r\n    //   .get(`/api/permission/getRolesPermission/${id}`)\r\n    //   .then(result => {\r\n    //     console.log(result)\r\n    //     setRoles(result.data)\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err)\r\n    //   })\r\n  }, [id])\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Header title='Examinations'>\r\n              <Card.Title></Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <h1>Roles</h1>\r\n              <Table>\r\n                <tr>\r\n                \r\n                </tr>\r\n                {Roles &&\r\n                  Roles.length != 0 &&\r\n                  Roles.map(item => (\r\n                    <tr>\r\n                      <td\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={() =>\r\n                          history.push(`/permission/Role/${item.id}`)\r\n                        }\r\n                      >\r\n                        <h4>{item.name}</h4>\r\n                      </td>\r\n                    \r\n                    </tr>\r\n                  ))}\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\Courses.js",["875","876","877","878"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Card, Row } from 'react-bootstrap'\r\nimport CourseBlocks from '../components/courseblocks'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function Courses (props) {\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const CourseContenHandler = id => {\r\n    debugger\r\n    history.push('/ecourse/courseOverview')\r\n  }\r\n\r\n  // const [Courses, setCourse] = useState([])\r\n  const [Class, setClass] = useState([])\r\n  const [BranchesName, setBranchesName] = useState('')\r\n  const updateData = () => {\r\n    debugger\r\n    axios\r\n      .get('/api/course/getAllCoursesOfAllClasses')\r\n      .then(res => {\r\n        debugger\r\n        setBranchesName(res.data[0].branches)\r\n        setClass(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [id])\r\n  return (\r\n    <div>\r\n      {Class && (\r\n        <div className='row'>\r\n          <div className='col-md-12'>\r\n            <Row>\r\n              <Card className='col-md-12'>\r\n                <Card.Header as='h5'>\r\n                  Course\r\n                 \r\n                    <button\r\n                      type='button'\r\n                      className='btn btn-primary pull-left'\r\n                      style={{float:\"right\"}}\r\n                      onClick={() => {\r\n                        history.push('/setting/CourseForm/')\r\n                      }}\r\n                    >\r\n                      New course\r\n                    </button>\r\n                 \r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row>\r\n                    {Class &&\r\n                      Class.length != 0 &&\r\n                      Class.map(item => (\r\n\r\n                        <CourseBlocks item={item} key={item.courses._id} />\r\n                      ))}\r\n                    {Class && Class.length == 0 && (\r\n                      <p>NO COURSE IS AVAILABLE FOR YOU</p>\r\n                    )}\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\branchUserList.js",["879"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\nimport userActionFormatter from '../components/userActionFormatter'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\n//   import BranchActionFormatter from '../components/branchActionFormatter'\r\nimport { permissionsContext } from '../../permissionManager/permissionContext'\r\n\r\nfunction UserList (props) {\r\n  const { isUserAuthenticate } = useContext(permissionsContext)\r\n\r\n  const [Users, setUsers] = useState([])\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    debugger\r\n    axios\r\n      .get('/api/staff/User')\r\n      .then(res => {\r\n        setUsers(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  const EditUser = id => {\r\n    history.push('/user/BranchUserForm/' + id)\r\n  }\r\n  const DeleteUser = id => {\r\n    debugger\r\n    if (window.confirm('do you really want to delete')) {\r\n      axios.delete('/api/staff/staff/' + id).then(res => {\r\n        alert('deleted')\r\n      })\r\n    }\r\n  }\r\n  const InactiveteUser = id => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'mobile',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: userActionFormatter,\r\n      formatExtraData: {\r\n        EditUserAction: EditUser,\r\n        DeleteUserAction: DeleteUser,\r\n        isUserAuthenticate\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Users'>\r\n              <CardHeaderToolbar>\r\n                {isUserAuthenticate('M3',2) && \r\n                  <button\r\n                    type='button'\r\n                    className='btn btn-primary'\r\n                    onClick={() => {\r\n                      props.history.push('/user/BranchUserForm')\r\n                    }}\r\n                  >\r\n                    New User\r\n                  </button>\r\n                }\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Users ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Users}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps}\r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n",["880","881"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\examQuestions.js",["882"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\SectionEditDilogue.js",["883","884","885"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n// import { useParams } from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Modal } from 'react-bootstrap'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport { Input } from '../../../../_metronic/_partials/controls'\r\nimport { actions } from './../_redux/EcourseRedux'\r\n\r\nconst SectionEditSchema = Yup.object().shape({\r\n  _id: Yup.string().nullable(true),\r\n  name: Yup.string().required('Firstname is required'),\r\n  timeInHours: Yup.number().required('Time  is required'),\r\n  timeInMinutes: Yup.number().required('Time is required'),\r\n  order: Yup.number(),\r\n  courseId: Yup.mixed()\r\n    .nullable(false)\r\n    .required('Course is required')\r\n})\r\n\r\nfunction SectionEditDilogue ({\r\n  show,\r\n  actionsLoading,\r\n  CourseID,\r\n  dispatch,\r\n  Section\r\n})\r\n\r\n\r\n{\r\n  const [section, setsection] = useState(Section != null ?{ ...Section, courseId: CourseID }:{\r\n    _id: null,\r\n    courseId: CourseID,\r\n    name: '',\r\n    timeInHours: null,\r\n    timeInMinutes:null ,\r\n    order: null\r\n  })\r\n  \r\n  let history = useHistory()\r\n  const onHide = () => {\r\n    console.log(CourseID)\r\n    dispatch(actions.SetCurrentSection(null))\r\n    history.push('/Ecourse/CourseContent/?id=' + CourseID)\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal\r\n        size='md'\r\n        show={show}\r\n        onHide={onHide}\r\n        aria-labelledby='example-modal-sizes-title-md'\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id='example-modal-sizes-title-md'>\r\n  {section._id!=null?\"Edit\":\"New\"} section\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <>\r\n          <Formik\r\n            // enableReinitialize={true}\r\n            initialValues={section}\r\n            validationSchema={SectionEditSchema}\r\n            onSubmit={values => {\r\n              debugger\r\n              console.log(values)\r\n              let sec = {\r\n                _id: values._id,\r\n                courseId: values.courseId,\r\n                name: values.name,\r\n                timeInHours: values.timeInHours,\r\n                timeInMinutes: values.timeInMinutes,\r\n                order:values.order\r\n              }\r\n              axios\r\n                .post('/api/course/courseSection', sec)\r\n                .then(response => {\r\n                  onHide()\r\n                })\r\n                .catch(err => {\r\n                  console.log(err)\r\n                })\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <>\r\n                <Modal.Body className='overlay overlay-block cursor-default'>\r\n                  {actionsLoading && (\r\n                    <div className='overlay-layer bg-transparent'>\r\n                      <div className='spinner spinner-lg spinner-success' />\r\n                    </div>\r\n                  )}\r\n                  <Form className='form form-label-right'>\r\n                    <div className='form-group row'>\r\n                      <div className='col-lg-12'>\r\n                        <Field                        \r\n                          name='name'\r\n                          component={Input}\r\n                          placeholder='title'\r\n                          label='Section Title'\r\n                        />\r\n                      </div>\r\n                      <div className='col-lg-12'>\r\n                        <Field\r\n                          name='timeInHours'\r\n                          component={Input}\r\n                          placeholder='timeInHours'\r\n                          label='timeInHours'\r\n                          type=\"number\"\r\n                        />\r\n                      </div>\r\n                      <div className='col-lg-12'>\r\n                        <Field\r\n                          name='timeInMinutes'\r\n                          component={Input}\r\n                          placeholder='timeInMinutes'\r\n                          label='timeInMinutes'\r\n                          type=\"number\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className='col-lg-12'>\r\n                        <Field\r\n                          name='order'\r\n                          component={Input}\r\n                          placeholder='order'\r\n                          label='order'\r\n                          type=\"number\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <button\r\n                    type='button'\r\n                    onClick={onHide}\r\n                    className='btn btn-light btn-elevate mr-2'\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <></>\r\n                  <button\r\n                    type='submit'\r\n                    onClick={() => handleSubmit()}\r\n                    className='btn btn-primary btn-elevate'\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </Modal.Footer>\r\n              </>\r\n            )}\r\n          </Formik>\r\n        </>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  debugger\r\n  console.log(state.course.CurrentCourseId)\r\n  return {\r\n    CourseID: state.course.CurrentCourseId,\r\n    Section: state.course.CurrentSection\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(SectionEditDilogue)\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\CourseProfileFormater.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\ContentAddButton.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\progressbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\questionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\NewCourse.js",["886"],"import React, { Component } from 'react'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport JoditEditor from 'jodit-react'\r\nimport axios from 'axios'\r\n\r\n\r\nexport default class NewCourse extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      // _id: null,\r\n      categories: null,\r\n      rating: 0,\r\n      numberOfRatings: 0,\r\n      numberOfStudent: 0,\r\n      title: '',\r\n      Description: '',\r\n      overview: '',\r\n      timeInHours: \"\",\r\n      timeInMinutes: \"\",\r\n      posterImageUrl: \"\",\r\n      file: ''\r\n    }\r\n    this.editor = React.createRef(null)\r\n    this.uploadFile = this.uploadFile.bind(this)\r\n    this.submitCourse = this.submitCourse.bind(this)\r\n    const {id}=this.props.match.params;\r\n\r\n  }\r\n  onChangeOverView = e => {\r\n    debugger\r\n    // console.log(this.editor.current)\r\n    this.setState(state => ({\r\n      overview: e.target.innerHTML\r\n    }))\r\n  }\r\n  uploadFile = event => {\r\n    console.log('uploding File')\r\n  }\r\n  submitCourse = event => {\r\n    console.log('uploding File')\r\n    console.log(this.id)\r\n    axios\r\n      .post('/api/course/course'+this.id)\r\n      .then(result => {\r\n        this.props.history.push('/setting/courses/'+this.id)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n\r\n    event.preventDefault()\r\n  }\r\n  componentDidMount () {\r\n\r\n    // const search = useLocation().search;\r\n\r\n    const search = this.props.location.search;\r\n    console.log(search);\r\n    const id = new URLSearchParams(search).get(\"cid\");\r\n    console.log(\"id\", id);\r\n    if (id) {\r\n      axios.get(\"/api/course/course/\"+id).then(response=>{\r\n        this.setState({\r\n          ...response.data\r\n        }) \r\n      })\r\n    \r\n    }\r\n  }\r\n  render () {\r\n    const config = {\r\n      readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n    }\r\n    return (\r\n      <div>\r\n        <div className='row'>\r\n          <div className='col-md-12'>\r\n            <Card>\r\n              <Form onSubmit={this.submitCourse} className='form'>\r\n              <Card.Body>\r\n                \r\n                  <Form.Group className='row'>\r\n                    <div className='col-md-6' controlId='formTitle'>\r\n                    <Form.Label>Course Title</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Course Title'\r\n                      value={this.state.title}\r\n                      onChange={event =>\r\n                        this.setState({ title: event.target.value })\r\n                      }\r\n                    />\r\n                    <Form.Text className='text-muted'>\r\n                      new course title.\r\n                    </Form.Text> </div>\r\n                    <div controlId='formDesc' className='col-md-6'>\r\n                \r\n                    <Form.Label>Course Description</Form.Label>\r\n                    <Form.Control \r\n                      type='text'\r\n                      placeholder='Course Description'\r\n                      value={this.state.Description}\r\n                      onChange={event =>\r\n                        this.setState({ Description: event.target.value })\r\n                      }\r\n                    /></div>\r\n                  </Form.Group>\r\n                  \r\n                  <Form.Group controlId='formThr' className='row'>\r\n                    <div className='col-md-6'>\r\n                    <Form.Label>Course Time (hr)</Form.Label>\r\n                    <Form.Control \r\n                      type='number'\r\n                      placeholder='Time in hours'\r\n                      value={this.state.timeInHours}\r\n                      onChange={event =>\r\n                        this.setState({ timeInHours: event.target.value })\r\n                      }\r\n                    /></div>\r\n                 \r\n                  <div className='col-md-6' controlId='formTmin'>\r\n                    <Form.Label>Course Time (min)</Form.Label>\r\n                    <Form.Control\r\n                      type='number'\r\n                      placeholder='Time in Minutes'\r\n                      value={this.state.timeInMinutes}\r\n                      onChange={event =>\r\n                        this.setState({ timeInMinutes: event.target.value })\r\n                      }\r\n                    /></div>\r\n                  </Form.Group>\r\n                  <Form.Group controlId='formOverview' className='row'>\r\n                    <Form.Label className='col-md-12 text-left mb-5'>Course Overview</Form.Label>\r\n                    {/* <Form.Control type='text' placeholder='Course Overview' /> */}\r\n                   <div className='col-md-12 mb-5'><JoditEditor\r\n                      ref={this.editor}\r\n                      value={this.state.overview}\r\n                      config={config}\r\n                      tabIndex={1} // tabIndex of textarea\r\n                      onBlur={this.onChangeOverView.bind(this)} // preferred to use only this option to update the content for performance reasons\r\n                      //    onChange={newContent=>{ this.setState(state=>({overview: newContent.target.textContent}))}}\r\n                    /></div> \r\n                  </Form.Group>\r\n\r\n\r\n                  <Form.Group controlId='Image'>\r\n                    <Form.Label>Course Description</Form.Label>\r\n                    <Form.Control\r\n                      type='file'\r\n                      //   value={this.state.Description}\r\n                      onChange={event =>\r\n                        this.setState({ file: event.target.files[0] })\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n\r\n                 \r\n              \r\n              </Card.Body>\r\n              <Card.Footer>\r\n              <Button variant='primary' type='submit'>\r\n                    Submit\r\n                  </Button>\r\n              </Card.Footer>\r\n              </Form>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentform.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionTestList.js",["887"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport TestActionFormatter from '../components/TestActionFormatter'\r\n\r\nexport default function SetionTest (props) {\r\n  const [Test, setTests] = useState([])\r\n\r\n  let history = useHistory()\r\n    const {id} = useParams();\r\n  const EditHandler = (TId) => {\r\n    debugger;\r\n    history.push(`/Test/Course/${id}/TestForm/${TId}`)\r\n  }\r\n  const DeleteHandler = (TId) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios\r\n        .delete('/api/Test/' + id + '/deleteTestById/' + TId )\r\n        .then(res => {alert(\"Test Deleted \");updateData() })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n  const GetQuestionHandler=(TId)=>{\r\n    history.push(`/Test/${TId}/Questions` )\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },   \r\n    {\r\n      dataField: 'passingMarks',\r\n      text: 'passing',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'totalMarks',\r\n      text: 'Total',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'isComplete',\r\n      text: 'Status',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'description',\r\n      text: 'Description',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: TestActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestions:GetQuestionHandler,\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\nconst updateData=()=>{\r\n//   debugger\r\n  axios.get(`/api/Test/${id}/getAllTestsBySection`)\r\n    .then(res => {\r\n    debugger;\r\n    setTests(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title={`Test-`}>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push(`/Test/Course/${id}/TestForm`)\r\n                  }}\r\n                >\r\n                  Create Test\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Test ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Test}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\TestForm.js",["888","889"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function TestForm () {\r\n  const [Test, setTest] = useState({\r\n    name: '',\r\n    description: '',\r\n    class: '',\r\n    totalMarks: '',\r\n    timeInHours: '',\r\n    timeInMinutes: '',\r\n    passingMarks: ''\r\n  })\r\n  const [Class, setClasses] = useState([])\r\n  // const [Years, setYears] = useState([])\r\n\r\n  let { id ,  TId } = useParams()\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    \r\n    debugger\r\n    if (id) {\r\n      console.log(id , TId)\r\n      axios.get(`/api/Test/getTestById/${TId}`)\r\n    .then(res => {\r\n    debugger;\r\n    console.log(\"res\" , res)\r\n    setTest(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n    }\r\n  }, [TId, id])\r\n\r\n  const saveTest = event => {\r\n    event.preventDefault()\r\n    axios\r\n      .post(`/api/Test/${id}/saveTestDetails`, Test)\r\n      .then(res => {\r\n        history.push(`/Test/Course/${id}/tests`)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form onSubmit={saveTest} className='form'>\r\n                <Form.Group controlId='formTitle' className='row'>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Test Name</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test Name'\r\n                      value={Test.name}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, name: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Total Marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='Total Marks'\r\n                      value={Test.totalMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, totalMarks: event.target.value })\r\n                      }\r\n                    />set\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>passing  marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='passing Marks'\r\n                      value={Test.passingMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, passingMarks: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                 \r\n\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Hours</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='time in  hours'\r\n                      value={Test.timeInHours}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInHours: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Minutes</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='time in  minutes'\r\n                      value={Test.timeInMinutes}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInMinutes: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='col-md-12'>\r\n                    <Form.Label>Test description</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test description'\r\n                      value={Test.description}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, description: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestList.js",["890"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport TestActionFormatter from '../components/TestActionFormatter'\r\n\r\nexport default function CourseTestList (props) {\r\n  const [Test, setTests] = useState([])\r\n\r\n  let history = useHistory()\r\n    const {id} = useParams();\r\n  const EditHandler = (TId) => {\r\n    debugger;\r\n    history.push(`/Test/CourseTest/${id}/TestForm/${TId}`)\r\n  }\r\n  const DeleteHandler = (TId) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios\r\n        .delete('/api/Course/' + id + '/deleteTestById/' + TId )\r\n        .then(res => {alert(\"Test Deleted \");updateData() })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n  const GetQuestionHandler=(TId)=>{\r\n    history.push(`/Test/CourseTest/${TId}/Questions` )\r\n  }\r\n  const ChangeDescription = (cellContent) => {\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent }}></div>\r\n}\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },   \r\n    {\r\n      dataField: 'passingMarks',\r\n      text: 'passing',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'totalMarks',\r\n      text: 'Total',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'isComplete',\r\n      text: 'Status',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'testLevel',\r\n      text: 'Test Level',\r\n      sort: true,\r\n      formatter : ChangeDescription , \r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: TestActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestions:GetQuestionHandler,\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\nconst updateData=()=>{\r\n//   debugger\r\n  axios.get(`/api/Course/${id}/getAllTestsByCourse`)\r\n    .then(res => {\r\n    debugger;\r\n    setTests(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title={`Test-`}>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push(`/Test/CourseTest/${id}/TestForm`)\r\n                  }}\r\n                >\r\n                  Create Test\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Test ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Test}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseQuestionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\pages\\Notifications.js",["891","892","893","894"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Button , Modal } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\nimport NotificationActionFormatter from '../components/NotificationActionFormatter'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\n\r\nexport default function Notifications (props) {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [modelData , setModelData] = useState()\r\n\r\n  const ChangeDescription = (cellContent) => {\r\n  return cellContent && <Button onClick={() => {setModelData(cellContent) ; setModalShow(true)}}>Show </Button> \r\n  }\r\n  const ChangeDate = (cellContent) =>{ \r\n    return cellContent.slice(0 ,10)\r\n  }\r\n  const ChangeName = (cellContent) => {\r\n    return cellContent.charAt(0).toUpperCase() + cellContent.slice(1)\r\n  }\r\n  const StatusColor = (cellContent) => {\r\n    if(cellContent == \"Pending\"){\r\n      return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"Red\") }}></div> \r\n    }\r\n    if(cellContent == 'Approved'){\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"Green\") }}></div> \r\n    }\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"marron\") }}></div> \r\n\r\n  }\r\n  const ChangeTypeColor = (cellContent) => {\r\n     if(cellContent == \"ClassFee\"){\r\n        return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"Blue-green\t\") }}></div> \r\n     }\r\n     if (cellContent == \"StudentFee\"){\r\n      return <div  dangerouslySetInnerHTML={{    __html: cellContent.fontcolor(\"Brick Red\t\") }}></div>  \r\n     }\r\n\r\n    return cellContent\r\n\r\n   }\r\n  const RejectClassAction = (changeRequestId ,entityId ,requestedFees , requestType) => {\r\n    var data = {status : \"Rejected\" , changeRequestId :changeRequestId ,entityId :entityId ,\r\n    requestedFees :requestedFees , requestType : requestType\r\n   }\r\n   \r\n\r\n   \r\n   axios.post('/api/branch/handleRequest' , data).then((res) => {\r\n\r\n   }).catch((error) => {\r\n\r\n   })\r\n   updateData()\r\n  }\r\n  const ApproveClassAction = (changeRequestId ,entityId ,requestedFees , requestType) => {\r\n    var data = {status : \"Approved\" , changeRequestId :changeRequestId ,entityId :entityId ,\r\n     requestedFees :requestedFees , requestType : requestType\r\n    }\r\n\r\n    axios.post('/api/branch/handleRequest' , data).then((res) => {\r\n\r\n    }).catch((error) => {\r\n\r\n    })\r\n    updateData()\r\n\r\n  }\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Description\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* <h4>Centered Modal</h4> */}\r\n          <p>\r\n           {props.data}\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )}\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: 'changeRequest._id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'changeRequest.requestType',\r\n      text: 'Type',\r\n      sort: true,\r\n      formatter : ChangeTypeColor,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'changeRequest.entityName',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'changeRequest.description',\r\n      text: 'Description',\r\n      sort: true,\r\n      formatter : ChangeDescription,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'changeRequest.fees',\r\n      text: 'fees',\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: 'changeRequest.requestedFees',\r\n      text: 'RequestedFees',\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: 'changeRequest.requestedBy[0].name',\r\n      text: 'requestedBy',\r\n      sort: true,\r\n      formatter : ChangeName,\r\n    },\r\n    {\r\n      dataField: 'changeRequest.requestDate',\r\n      text: 'requestdate',\r\n      sort: true,\r\n      formatter : ChangeDate,\r\n    },\r\n    {\r\n      dataField: 'changeRequest.status',\r\n      text: 'status',\r\n      sort: true,\r\n      formatter : StatusColor\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter : NotificationActionFormatter , \r\n      formatExtraData: {\r\n        RejectClassAction: RejectClassAction,\r\n        ApproveClassAction: ApproveClassAction\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '250px'\r\n      }\r\n    }\r\n  ]\r\n  const updateData=()=>{\r\n    debugger\r\n    axios\r\n      .get('/api/Branch/getRequests')\r\n      .then(res => {\r\n        setNotifications(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const [Notifications, setNotifications] = useState(null)\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='All Class'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    props.history.push('/setting/classForm')\r\n                  }}\r\n                >\r\n                  New Class\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Notifications ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Notifications}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps}\r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n              {modelData && <MyVerticallyCenteredModal\r\n      show={modalShow}\r\n      onHide={() => setModalShow(false)}\r\n      data={ modelData}\r\n      />}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\CourseContent.js",["895","896","897","898","899","900","901","902"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\cardSideStickey.js",["903"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Announcement.js",["904","905"],"import React  , {useEffect,  useRef , useState} from 'react'\r\nimport { Row, Col,Card ,Button  , Form } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport JoditEditor from 'jodit-react'\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from 'react-router'\r\nexport default function Announcement({ id}){\r\nconst [announcement , setannouncement]  = useState({\r\n  title : \"\" , \r\n  Description : \"\"\r\n})\r\nconst [announcements , setannoucements] = useState()\r\n\r\n  const editor = useRef(null)\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const {courseId} = useParams()\r\n  useEffect(() => {\r\n    update()\r\n  }, [])\r\n  const update =() => {\r\n    axios.get('/api/course/getAnnouncement/' + courseId).then((res)=>{\r\n      setannoucements(res.data)\r\n    }).catch((res)=>{\r\n\r\n    })\r\n  }\r\n  const handleAnnouncement = e => {\r\n    setannouncement({...announcement,Description :  e.target.innerText })\r\n  }\r\n\r\n  const saveAnnouncement =  async event => {\r\n    event.preventDefault()\r\n    debugger;\r\n    await axios.post('/api/course/saveAnnouncement/' + courseId , announcement).then((res) => {\r\n    }).catch((error) => {\r\n\r\n    })\r\n    setannouncement({title : \"\" , Description : \"\"})\r\n    update()\r\n\r\n  }\r\n    return (\r\n        <Card classNameName='col-md-12'>\r\n          {/* { (id == )} */}\r\n          <Form onSubmit={saveAnnouncement} className='form'>\r\n\r\n            <Form.Group controlId='formTitle' className='row'>\r\n\r\n                  \r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test Name'\r\n                      value={announcement.title}\r\n                      onChange={event =>\r\n                        setannouncement({ ...announcement, title: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-12'>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <JoditEditor\r\n                        ref={editor}\r\n                        value={announcement.Description}\r\n                        config={config}\r\n                        tabIndex={1} // tabIndex of textarea\r\n                        onBlur={handleAnnouncement} // preferred to use only this option to update the content for performance reasons\r\n                      />\r\n                  </div>\r\n                  </Form.Group>\r\n\r\n                  <Button variant='primary' type='submit'>\r\n                    Submit\r\n                        </Button>\r\n          </Form>\r\n          \r\n            \r\n        <Card.Header as='h5'>Announcements</Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col>\r\n            {console.log(\"id\" , id)}\r\n            {announcements && announcements.length && announcements.map((element) => \r\n                \r\n              <div style={{ width: '80%' }} key={element.announcement._id}>\r\n                \r\n                <h3>{element.announcement.title}</h3>\r\n                <p>\r\n                  {element.announcement.Description}\r\n                </p>\r\n               \r\n                <p>\r\n                  Created at {element.announcement.createDate.slice(0, 10)}\r\n                </p>\r\n              </div>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\TestQuestionsActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\coursetestblocks.js",["906","907"],"import React from 'react'\r\nimport { Card, Row, Col, Button } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function TestBlocks({ test , classes ,course }) {\r\n  const history = useHistory()\r\n  return (\r\n    <>\r\n      <Col md={4} sm={12}>\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title>Test Name :  { test.name}   <span style={{ float: \"right\" }} className='badge badge-secondary'>{test.testLevel}</span></Card.Title>\r\n            <Card.Text>Class Name :{classes.name}</Card.Text>\r\n            <Card.Text>Course Name : {course.title}</Card.Text>\r\n            <Card.Text>Test Level : {test.testLevel}</Card.Text>\r\n\r\n            \r\n            <span className={\"badge badge-danger\"}>{test.isComplete == true ? \"Complete\" : \"Not Complete\"} </span>\r\n            <hr></hr>\r\n            <Card.Text> <div  dangerouslySetInnerHTML={{    __html: test.description }}></div></Card.Text>\r\n            <div>\r\n            <p >Total Time : {test.timeInHours} : {test.timeInMinutes} hr  </p>\r\n            <p style={{ float: \"right\" }}>passing Marks: {test.passingMarks}</p>\r\n            <p>Total Marks: {test.totalMarks}</p>\r\n            </div>\r\n  \r\n            {console.log(\"test\"  , test)}\r\n            <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push('/Test/CourseTest/' + test._id + '/Questions')\r\n              }}\r\n            >\r\n              Show Test\r\n            </Button>\r\n            {/* <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push('/' + test._id)\r\n              }}\r\n            >\r\n              start Course\r\n            </Button> */}\r\n            {/* <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                history.push('Courses/Tests/' + course._id)\r\n              }}\r\n            >\r\n              Test\r\n            </Button> */}\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ScheduleExamActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget1.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget8.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\mixed\\MixedWidget1.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget4.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\stats\\StatsWidget12.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenuListControlPanel.js",["908","909","910","911","912","913","914","915","916","917","918","919","920"],"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useContext } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SVG from 'react-inlinesvg'\r\nimport { shallowEqual, useSelector } from 'react-redux'\r\nimport { toAbsoluteUrl, checkIsActive } from '../../../../_helpers'\r\nimport { permissionsContext } from '../../../../../app/modules/permissionManager/permissionContext'\r\n\r\nexport function AsideMenuListControlPanel ({ layoutProps }) {\r\n  const location = useLocation()\r\n  const getMenuItemActive = (url, hasSubmenu = false) => {\r\n    return checkIsActive(location, url)\r\n      ? ` ${!hasSubmenu && 'menu-item-active'} menu-item-open `\r\n      : ''\r\n  }\r\n  const  {auth}  = useSelector(\r\n    ({ auth }) => ({\r\n      auth: auth\r\n    }),\r\n    shallowEqual\r\n  )\r\n  const { isUserAuthenticate } = useContext(permissionsContext)\r\n\r\n  return (\r\n    <>\r\n      {/* begin::Menu Nav */}\r\n      <ul className={`menu-nav ${layoutProps.ulClasses}`}>\r\n        {/*begin::1 Level*/}\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/home', false)}`}\r\n          aria-haspopup='true'\r\n        >\r\n          \r\n          <div className='menu-link' onClick={() => window.location.href = \"http://localhost:3001/searchpage\"} >\r\n              <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Design/Layers.svg')} />\r\n            </span> \r\n            <span className='menu-text' >Home</span>\r\n          </div>\r\n           \r\n        </li>\r\n        <hr></hr>\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/dashboard', false)}`}\r\n          aria-haspopup='true'\r\n        >\r\n          <NavLink className='menu-link' to='/dashboard'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Design/Layers.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Dashboard</span>\r\n          </NavLink>\r\n        </li>\r\n        {/*end::1 Level*/}\r\n\r\n        {/*begin::1 Level*/}\r\n        {/*end::1 Level*/}\r\n        {/* <li\r\n          className={`menu-item ${getMenuItemActive('/setting', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Branch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>setting</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Branch</span>\r\n                </span>\r\n              </li>\r\n              <li\r\n                className={`menu-item ${getMenuItemActive('/setting/branch')}`}\r\n                aria-haspopup='true'\r\n              >\r\n                <NavLink className='menu-link' to='/setting/branch'>\r\n                  <i className='menu-bullet menu-bullet-dot'>\r\n                    <span />\r\n                  </i>\r\n                  <span className='menu-text'>Branch</span>\r\n                </NavLink>\r\n              </li>\r\n              <li\r\n                className={`menu-item ${getMenuItemActive('/setting/class')}`}\r\n                aria-haspopup='true'\r\n              >\r\n                <NavLink className='menu-link' to='/setting/class'>\r\n                  <i className='menu-bullet menu-bullet-dot'>\r\n                    <span />\r\n                  </i>\r\n                  <span className='menu-text'>Class</span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li> */}\r\n\r\n{(    auth.isInstituteUser || isUserAuthenticate('M1', 1))  && ( \r\n<li\r\n          className={`menu-item ${getMenuItemActive('/setting/Branch', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Branch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Branch</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n)}\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/setting/class', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/class'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Class</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M3', 1)) && (\r\n          <li className={`menu-item ${getMenuItemActive('/User', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/User'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Users</span>\r\n              {/* <i className='menu-arrow' /> */}\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n        {/* Components */}\r\n\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M6', 1)) && ( <li\r\n          className={`menu-item ${getMenuItemActive(\r\n            '/ecourse/Courses',\r\n            false\r\n          )}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/ecourse/Courses'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Courses</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n        )}\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M7', 1)) && ( <li\r\n          className={`menu-item ${getMenuItemActive('/Test/testlist', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Test/testlist'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Tests</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n        )}\r\n      {(    auth.isInstituteUser || isUserAuthenticate('M4', 1)) && (   <li\r\n          className={`menu-item ${getMenuItemActive('/Exams', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Exams'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Examination</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Schedule Exam</span>\r\n                </span>\r\n              </li>\r\n              <li\r\n                className={`menu-item ${getMenuItemActive('/Exams/Scheduled')}`}\r\n                aria-haspopup='true'\r\n              >\r\n                <NavLink className='menu-link' to='/Exams/Scheduled'>\r\n                  <i className='menu-bullet menu-bullet-dot'>\r\n                    <span />\r\n                  </i>\r\n                  <span className='menu-text'>Schedule Exam</span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      )}\r\n\r\n\r\n        \r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/Notifications', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Notifications'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Notifications</span>\r\n          </NavLink>\r\n        </li>\r\n\r\n        {    auth.isInstituteUser  && ( <li\r\n          className={`menu-item ${getMenuItemActive(\r\n            '/permission/Roles',\r\n            false\r\n          )}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/permission/Roles'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Permission</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Permission</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        )}\r\n\r\n        {/* begin::section */}\r\n        <li className='menu-section '>\r\n          <h4 className='menu-text'>Components</h4>\r\n          <i className='menu-icon flaticon-more-v2'></i>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\Userform.js",["921","922","923"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\store.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicSubheader.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\privateRoute.js",["924"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\_redux\\EcourseRedux.js",["925","926"],"import { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\n\r\nexport const actionTypes = {\r\n  ADD_SECTION: 'New Course Section',\r\n  SET_CURRENT_COURSE: 'Set Current Course',\r\n  SET_CURRENT_SECTION: 'Set Current Section',\r\n  SET_CURRENT_CONTENT:'Set Current Content'\r\n}\r\n\r\nconst initialCourseState = {\r\n  CurrentCourseId: null,\r\n  CurrentSection: null,\r\n  CurrentContent:null,\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v706-ecom' },\r\n  (state = initialCourseState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.SET_CURRENT_COURSE: {\r\n        const { id } = action.payload\r\n        return { ...state, CurrentCourseId: id }\r\n      }\r\n      case actionTypes.SET_CURRENT_SECTION: {\r\n        const { item } = action.payload\r\n        return { ...state, CurrentSection: item }\r\n      }\r\n      case actionTypes.SET_CURRENT_CONTENT: {\r\n        const { item } = action.payload\r\n        return { ...state, CurrentContent: item }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  SetCurrentCourse: id => ({\r\n    type: actionTypes.SET_CURRENT_COURSE,\r\n    payload: { id }\r\n  }),\r\n  SetCurrentSection: item => ({\r\n    type: actionTypes.SET_CURRENT_SECTION,\r\n    payload: { item }\r\n  }),\r\n  SetCurrentContent: item => ({\r\n    type: actionTypes.SET_CURRENT_CONTENT,\r\n    payload: { item }\r\n  })\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\_redux\\authRedux.js",["927"],"import { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { put, takeLatest } from \"redux-saga/effects\";\r\nimport { getUserByToken,\r\n  // logoutUser\r\n } from \"./authCrud\";\r\n\r\nexport const actionTypes = {\r\n  getUserData : 'getUserData',\r\n  Login: \"[Login] Action\",\r\n  Logout: \"[Logout] Action\",\r\n  Register: \"[Register] Action\",\r\n  registerReducer: \"[registerReducer] Action\",\r\n  UserRequested: \"[Request User] Action\",\r\n  UserLoaded: \"[Load User] Auth API\",\r\n  LogoutRequested:\"[Logout User] Auth API\",\r\n  ChangeBranch:\"[Change Current Branch] Auth API\",\r\n  ChangeControlPanelStatus:\"[Change Control panel status]\"\r\n};\r\n\r\nconst initialAuthState = {\r\n  user: undefined,\r\n  isInstituteUser:false,\r\n  userPermission:[],\r\n  authToken: undefined,\r\n  currentBranch:null,\r\n  branches:[],\r\n  controlPanelStatus:false\r\n};\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: \"v706-demo1-auth\", whitelist: [\"user\", \"authToken\",\"currentBranch\",\"branches\",\"controlPanelStatus\",\"isInstituteUser\",\"userPermission\"] },\r\n  (state = initialAuthState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.Login: {\r\n        const { authToken } = action.payload;\r\n        return { ...state, authToken, user: undefined };\r\n      }\r\n\r\n      case actionTypes.registerReducer: {\r\n        const message = action.payload;\r\n        return {  ...state, user: undefined };\r\n      }\r\n\r\n      case actionTypes.Logout: {\r\n        // TODO: Change this code. Actions in reducer aren't allowed.\r\n        return initialAuthState;\r\n      }\r\n\r\n      case actionTypes.UserLoaded: {\r\n        const { user ,authToken} = action.payload;\r\n        debugger;\r\n        if(user && user.roles){\r\n          console.log(\"in reduceer\" , user)\r\n          var  instituteAdmin= user.roles.filter(u=> u.type===1)\r\n          console.log(\"in reduceer 1\" , instituteAdmin)\r\n          var isInstituteUser=instituteAdmin.length?true:false;\r\n        }\r\n      \r\n        return { ...state,authToken , user,userPermission:user.permission,branches:user.branches,currentBranch:user.branch,isInstituteUser};\r\n      }\r\n        case actionTypes.ChangeControlPanelStatus: {\r\n          debugger;\r\n          const { status } = action.payload;\r\n        return { ...state,controlPanelStatus:status};\r\n      }\r\n      // case actionTypes.ChangeBranch: {\r\n      //   const { branchId } = action.payload;\r\n      //   return { ...state,currentBranch:state.branches?state.branches.filter(m=>m._id===branchId)[0]:null};\r\n      // }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n);\r\n\r\nexport const actions = {\r\n  login: authToken => ({ type: actionTypes.Login, payload: { authToken } }),\r\n  register: message => ({\r\n    type: actionTypes.Register,\r\n    payload: { message }\r\n  }),\r\n  registerReducer: message => ({\r\n    type: actionTypes.Register1,\r\n    payload: { message }\r\n  }),\r\n  logout: () => ({ type: actionTypes.Logout }),\r\n  requestUser: user =>({ type: actionTypes.UserRequested, payload: { user } }),\r\n  fulfillUser:( user ,authToken) => ({ type: actionTypes.UserLoaded, payload: { user ,authToken } }),\r\n  requestLogout: user => ({ type: actionTypes.LogoutRequested}),\r\n  changeBranch: branchId=>({ type: actionTypes.ChangeBranch,payload:{branchId}}),\r\n  ChangeControlPanelStatus:status=>({type: actionTypes.ChangeControlPanelStatus,payload:{status}})\r\n\r\n};\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.Login, function* loginSaga() {\r\n    yield put(actions.requestUser());\r\n  });\r\n\r\n  yield takeLatest(actionTypes.Register, function* registerSaga(action) {\r\n    console.log(\"in the saga\" , action.payload.message)\r\n    yield put(actions.registerReducer(action.payload.message))\r\n  });\r\n\r\n  yield takeLatest(actionTypes.UserRequested, function* userRequested() {\r\n    const { data: user } = yield getUserByToken();\r\n    yield put(actions.fulfillUser(user));\r\n  });\r\n\r\n  // yield takeLatest(actionTypes.LogoutRequested, function*  UserLogout() {\r\n  //   debugger;\r\n  //   logoutUser();\r\n  //   yield put(actions.logout());\r\n  // });\r\n\r\n  yield takeLatest(actionTypes.getUserData, function* getUser(action) {\r\n    debugger\r\n    const {authToken }  = action.payload\r\n    console.log(\"auth here\" , authToken)\r\n    const { data: user } = yield getUserByToken(authToken);\r\n    debugger\r\n    yield put(actions.fulfillUser(user ,authToken));\r\n    console.log(\"auth\" , authToken , user)\r\n  });\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CoursePlayer.js",["928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\__mocks__\\userTableMock.js",["950"],"import {toAbsoluteUrl} from \"../../../../_metronic/_helpers\";\r\n\r\nexport default [\r\n  {\r\n    id: 1,\r\n    username: \"admin\",\r\n    password: \"demo\",\r\n    email: \"admin@demo.com\",\r\n    accessToken: \"access-token-8f3ae836da744329a6f93bf20594b5cc\",\r\n    refreshToken: \"access-token-f8c137a2c98743f48b643e71161d90aa\",\r\n    roles: [1], // Administrator\r\n    pic: toAbsoluteUrl(\"/media/users/300_25.jpg\"),\r\n    fullname: \"Sean\",\r\n    occupation: \"CEO\",\r\n    companyName: \"Keenthemes\",\r\n    phone: \"456669067890\",\r\n    address: {\r\n      addressLine: \"L-12-20 Vertex, Cybersquare\",\r\n      city: \"San Francisco\",\r\n      state: \"California\",\r\n      postCode: \"45000\"\r\n    },\r\n    socialNetworks: {\r\n      linkedIn: \"https://linkedin.com/admin\",\r\n      facebook: \"https://facebook.com/admin\",\r\n      twitter: \"https://twitter.com/admin\",\r\n      instagram: \"https://instagram.com/admin\"\r\n    }\r\n  },\r\n  {\r\n    id: 2,\r\n    username: \"user\",\r\n    password: \"demo\",\r\n    email: \"user@demo.com\",\r\n    accessToken: \"access-token-6829bba69dd3421d8762-991e9e806dbf\",\r\n    refreshToken: \"access-token-f8e4c61a318e4d618b6c199ef96b9e55\",\r\n    roles: [2], // Manager\r\n    pic: toAbsoluteUrl(\"/media/users/100_2.jpg\"),\r\n    fullname: \"Megan\",\r\n    occupation: \"Deputy Head of Keenthemes in New York office\",\r\n    companyName: \"Keenthemes\",\r\n    phone: \"456669067891\",\r\n    address: {\r\n      addressLine: \"3487  Ingram Road\",\r\n      city: \"Greensboro\",\r\n      state: \"North Carolina\",\r\n      postCode: \"27409\"\r\n    },\r\n    socialNetworks: {\r\n      linkedIn: \"https://linkedin.com/user\",\r\n      facebook: \"https://facebook.com/user\",\r\n      twitter: \"https://twitter.com/user\",\r\n      instagram: \"https://instagram.com/user\"\r\n    }\r\n  },\r\n  {\r\n    id: 3,\r\n    username: \"guest\",\r\n    password: \"demo\",\r\n    email: \"guest@demo.com\",\r\n    accessToken: \"access-token-d2dff7b82f784de584b60964abbe45b9\",\r\n    refreshToken: \"access-token-c999ccfe74aa40d0aa1a64c5e620c1a5\",\r\n    roles: [3], // Guest\r\n    pic: toAbsoluteUrl(\"/media/users/default.jpg\"),\r\n    fullname: \"Ginobili Maccari\",\r\n    occupation: \"CFO\",\r\n    companyName: \"Keenthemes\",\r\n    phone: \"456669067892\",\r\n    address: {\r\n      addressLine: \"1467  Griffin Street\",\r\n      city: \"Phoenix\",\r\n      state: \"Arizona\",\r\n      postCode: \"85012\"\r\n    },\r\n    socialNetworks: {\r\n      linkedIn: \"https://linkedin.com/guest\",\r\n      facebook: \"https://facebook.com/guest\",\r\n      twitter: \"https://twitter.com/guest\",\r\n      instagram: \"https://instagram.com/guest\"\r\n    }\r\n  }\r\n];\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\index.js",["951"],"import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport SectionsTest from './pages/SectionTestList'\r\nimport TestForm from './pages/TestForm'\r\nimport TestQuestion from './pages/testQuestion'\r\nimport QuestionForm from './pages/questionForm'\r\nimport Question from './pages/question'\r\nimport CourseTestForm from './pages/CourseTestForm'\r\nimport CourseTestList from './pages/CourseTestList'\r\nimport CourseTestQuestions from './pages/CourseTestQuestions'\r\nimport CourseTestQuestion from './pages/CourseTestQuestion'\r\nimport CourseQuestionForm from './pages/CourseQuestionForm'\r\nimport SectionTestList from './pages/SectionalTestList'\r\nimport SectionalTestForm from './pages/SectionalTestForm'\r\nimport TestList from './pages/testList'\r\n\r\nexport default function Student() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/Test/Course/:id/tests'>\r\n        <SectionsTest/>\r\n      </Route>\r\n      <Route exact path='/Test/Course/:id/TestForm'>\r\n        <TestForm/>\r\n      </Route>\r\n      <Route exact path='/Test/Course/:id/TestForm/:TId'>\r\n        <TestForm/>\r\n      </Route>\r\n      <Route exact path='/Test/:id/Questions'>\r\n        <TestQuestion />\r\n      </Route> \r\n      <Route exact path='/Test/:id/Question/:qid'>\r\n        <Question />\r\n      </Route>\r\n      <Route exact path='/Test/:id/QuestionForm'>\r\n        <QuestionForm />\r\n      </Route>\r\n      <Route exact path='/Test/:id/QuestionForm/:qid'>\r\n        <QuestionForm />\r\n      </Route>  \r\n\r\n      <Route exact path='/Test/CourseTest/:id?/TestForm'>\r\n        <CourseTestForm/>\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/TestForm/:TId'>\r\n        <CourseTestForm/>\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/tests'>\r\n        <CourseTestList/>\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/Questions'>\r\n        <CourseTestQuestions/>\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/Question/:qid'>\r\n        <CourseTestQuestion />\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/QuestionForm'>\r\n        <CourseQuestionForm />\r\n      </Route>\r\n      <Route exact path='/Test/CourseTest/:id/QuestionForm/:qid'>\r\n        <CourseQuestionForm />\r\n      </Route>\r\n      \r\n\r\n      <Route exact path='/Test/:id/section/:sid/tests'>\r\n        < SectionTestList />\r\n      </Route>\r\n      <Route exact path='/Test/:id/section/:sid/sectionalTestForm'>\r\n        < SectionalTestForm />\r\n      </Route>\r\n      <Route exact path='/Test/:id/section/:sid/sectionalTestForm/:tid'>\r\n        < SectionalTestForm />\r\n      </Route>\r\n      <Route exact path='/Test/testlist'>\r\n        < TestList />\r\n      </Route>\r\n      \r\n      \r\n     \r\n      {/* <Route  exact path='/Student/testprofile' component={StudentProfile} /> */}\r\n\r\n     \r\n    </Switch>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage5.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage2.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\menus.js",["952"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport MenuActionFormatter from '../components/MenuActionFormatter'\r\n\r\nexport default function Menus (props) {\r\n  const [menus, setMenus] = useState(null)\r\n\r\n  let history = useHistory()\r\n  const EditMenuHandler = (id) => {\r\n    history.push('' + id)\r\n  }\r\n  const DeleteMenuHandler = (id) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios\r\n        .delete('', { id })\r\n        .then(res => {})\r\n        .catch(() => {})\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Title',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'MenuCode',\r\n      text: 'Description',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },   \r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: MenuActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditMenuHandler,\r\n        DeleteAction: DeleteMenuHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\n\r\n  useEffect(() => {\r\n    debugger\r\n    // axios.get('')\r\n    //   .then(res => {\r\n    //   debugger;\r\n    //       // let ClassBatches= res.data.classes.reduce((batchlist,obj)=>\r\n    //       // {       debugger;\r\n    //       //      return batchlist.concat(obj.batches)\r\n    //       // },[])\r\n    //       if(res.data && res.data.length){\r\n    //         setMenus(res.data)\r\n    //       }\r\n      \r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err)\r\n    //   })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Menu list'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/permission/MenuForm')\r\n                  }}\r\n                >\r\n                  New Menu\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {menus && menus.length ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={menus}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\FeeManagement\\pages\\feeManagement.js",["953","954","955","956","957"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\n\r\nexport default function FeeManagement (props) {\r\n  const [feeStructure , setFeeStructure] = useState()\r\n\r\n  const updateData=()=>{\r\n   axios\r\n     .get('/api/fee/GetStudentFeeDetail')\r\n     .then(res => {\r\n       console.log(\"data here \" , res.data)\r\n       setFeeStructure(res.data)\r\n     })\r\n     .catch(err => {\r\n       console.log(err)\r\n     })\r\n }\r\n \r\n useEffect(() => {\r\n   updateData()\r\n }, [])\r\n\r\nconst TotalFeeSubmittedFormatter = (cellContent ) => {\r\n  return cellContent && cellContent || 0\r\n}\r\nconst RemainingFeeSubmittedFormatter = (cellContent , row) => {\r\n  if(cellContent){\r\n    if(row.fees / 2 < cellContent){\r\n      return <div style={{color : \"red\"}}>{cellContent}</div>\r\n    }else{\r\n      return <div style={{color : \"green\"}}>{cellContent}</div>\r\n    }\r\n  }\r\n  return <div style={{color : \"red\"}}>{row.fees}</div>\r\n}\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Student Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'TotalFeeSubmitted',\r\n      text: 'Total Fee Submitted',\r\n      sort: true,\r\n      formatter :  TotalFeeSubmittedFormatter,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'fees',\r\n      text: 'Total Fees',\r\n      sort: true,\r\n      //cellClasses: 'bg-primary',\r\n      //headerClasses: 'bg-primary',\r\n      \r\n      sortCaret: sortCaret, \r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'Remaining',\r\n      text: 'Remaining Fees',\r\n      sort: true,\r\n      formatter :  RemainingFeeSubmittedFormatter,\r\n      //cellClasses: 'bg-primary',\r\n      //headerClasses: 'bg-primary',\r\n      \r\n      sortCaret: sortCaret, \r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      // formatter: BatchActionFormatter,\r\n      // formatExtraData: {\r\n      //   EditBatchAction: EditBranchHandler,\r\n      //   DeleteBatchAction: DeleteBranchHandler\r\n      // },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Batch list'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    props.history.push('/setting/BatchForm')\r\n                  }}\r\n                >\r\n                  New Batcch\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {feeStructure && feeStructure.length && (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={feeStructure}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) || (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\scheduleExam.js",["958","959","960"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport ScheduleExamActionFormatter from '../components/ScheduleExamActionFormatter'\r\nimport DatePicker from 'react-datepicker'\r\nimport { registerLocale , setDefaultLocale } from \"react-datepicker\";\r\nimport { enUS } from 'date-fns/locale'\r\nregisterLocale(\"enUS\", enUS); // register it with the name you want\r\nsetDefaultLocale(\"enUS\");\r\nexport default function ScheduleExam (props) {\r\n  const [Exams, setExams] = useState([])\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [Exam , setExam] = useState()\r\n  const [ReExam , setReExam] = useState()\r\n  let history = useHistory()\r\n\r\n  const DeleteHandler = (isActive, _id , examId ,  startDate ,endDate , classID ) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      var data = {isActive, _id , examId ,  startDate ,endDate , classID }\r\n      axios\r\n        .post('/api/Examination/deleteScheduleExam/'  , data)\r\n        .then(res => {\r\n          alert('Exam Deleted')\r\n          updateData()\r\n        })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n  const ChangeDescription = (cellContent) => {\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent }}></div>\r\n  }\r\n  const ChangeStartDate = (cellContent) => {\r\n    setReExam({...ReExam , startDate :cellContent})\r\n    return cellContent ? cellContent.slice(0,10) : cellContent\r\n  }\r\n  const ChangeEndDate = (cellContent) => {\r\n    setReExam({...ReExam  , endDate : cellContent })\r\n    return cellContent ? cellContent.slice(0,10) : cellContent\r\n  }\r\n  const statusFormatter = (cellContent) => {\r\n    return cellContent == true ? \"Active\" : \"InActive\" \r\n  }\r\n  const editActive = (cellContent) => {\r\n    return \r\n  }\r\n  const ChangeState = (val , id , classID) => {\r\n\r\n    debugger;\r\n   var data = {isActive : val , id , classID}\r\n   console.log(data);\r\n\r\n    axios.post('/api/examination/updateActive' ,data ).then((res) => {\r\nconsole.log(res.data)\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    })\r\n    updateData()\r\n  }\r\n  \r\n  const editHandler = (id , className , examName , startDate , endDate , classID , examId) => {\r\n    console.log(id , className , examName, startDate, endDate)\r\n    setReExam({...ReExam , id : id , className : className , examName :examName ,classID : classID , examId : examId  })\r\n    setExam({ ...Exam , id : id , className : className , examName :examName ,endDate :endDate  , startDate :startDate })\r\n    setModalShow(true)\r\n }\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: 'classes.examSchedule._id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'classes.examSchedule.examId[0].name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'classes.name',\r\n      text: 'Class',\r\n      sort: true,\r\n      //cellClasses: 'bg-primary',\r\n      //headerClasses: 'bg-primary',\r\n\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n\r\n    {\r\n      dataField: 'classes.examSchedule.startDate',\r\n      text: 'StartDate',\r\n      sort: true,\r\n      formatter : ChangeStartDate,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'classes.examSchedule.endDate',\r\n      text: 'EndDate',\r\n      sort: true,\r\n      formatter :  ChangeEndDate ,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'classes.examSchedule.isActive',\r\n      text: 'Status',\r\n      sort: true,\r\n      formatter: statusFormatter,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'classes.examSchedule.examId[0].description',\r\n      text: 'Description',\r\n      sort: true,\r\n      formatter: ChangeDescription,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: ScheduleExamActionFormatter,\r\n      formatExtraData: {\r\n        ChangeState : ChangeState , \r\n        EditAction : editHandler , \r\n        DeleteAction: DeleteHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n  ]\r\n  const updateData = () => {\r\n    debugger\r\n    axios\r\n      .get('/api/examination/getExamSchedule')\r\n      .then(res => {\r\n        debugger\r\n        setExams(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n  const submitReSchedule =  (id) => {\r\n    \r\n    axios.post('/api/examination/reSchedule' ,ReExam ).then((res) => {\r\n      if(res.status === 200){\r\n        setModalShow(false)\r\n        updateData()\r\n      }\r\n    }).catch((error) => {\r\n\r\n    })\r\n    \r\n  }\r\n\r\n  function MyVerticallyCenteredModal (props) {\r\n    return (\r\n       \r\n      <Modal\r\n        {...props}\r\n        size='lg'\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n        key={props.data.id}\r\n      >\r\n        <Modal.Header >\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            ReSchedule Exam\r\n          </Modal.Title>\r\n          <button onClick={() => setModalShow(false)}>close</button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <h4>Class Name : &nbsp;{props.data.className}</h4><br></br>\r\n          <h4>Exam Name : &nbsp;{props.data.examName}</h4>\r\n          <br></br>\r\n          <br></br>\r\n          <p>\r\n            Start Date :     <DatePicker value={Exam.startDate ?  Exam.startDate.slice(0,10) : Exam.startDateNew }  selected={Exam.startDateNew }   onChange={newDate =>{ setReExam({...ReExam , startDate : newDate}) ; setExam({...Exam , startDateNew : newDate , startDate : \"\"})} } />\r\n\r\n          </p>\r\n          <p>\r\n            End Date :  <DatePicker  value={Exam.endDate ? Exam.endDate.slice(0,10) : Exam.endDateNew } selected={Exam.endDateNew }  onChange={newDate => { setReExam({...ReExam , endDate : newDate}) ; setExam({...Exam , endDateNew : newDate , endDate : \"\"})} }/>\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={() =>\r\n            submitReSchedule(props.data.id)\r\n            }>Submit</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        \r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Examinations'>\r\n              <CardHeaderToolbar>\r\n                {/* <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/Exams/ExamForm')\r\n                  }}\r\n                >\r\n                  Create Exam\r\n                </button> */}\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Exams ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Exams}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps}\r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n              {Exam && ReExam &&  <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                data= {Exam}\r\n              />}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\location.js",["961"],"import React, { useState, useEffect } from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport axios from 'axios'\r\n\r\nexport default function ReactMap () {\r\nconst [location , setLocation] = useState({\r\n  center: {\r\n    lat: 23.290004,\r\n    lng: 77.437377\r\n    , \r\n  }\r\n})\r\n// const [myLocation , setMyLocation]\r\nconst [zoom , setZoom] = useState(20)\r\n\r\n  const AnyReactComponent = ({latitude  ,  longitude   }) => <div>lat : {latitude} , lng : {longitude}</div>;\r\n  const getLocation = () => {\r\n    debugger;\r\n    axios.get('/api/branch/getBranchLocation').then((res) => {\r\n      setLocation({\r\n        center: {\r\n          lat: res.data[0].location ? res.data[0].location.latitude : 23.290004,  \r\n          lng: res.data[0].location ? res.data[0].location.longitude : 77.437377\r\n        }\r\n      })\r\n    }).catch((error) => {\r\n\r\n    })\r\n  }\r\n  const saveLocation = () => {\r\n    var data = {lat : location.center.lat  ,lng : location.center.lng }\r\n    axios.post('/api/branch/saveBranchLocation' , data).then((res) => {\r\n\r\n    }).catch((error) => {\r\n\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getLocation()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return(\r\n<div>\r\n  { location && location.center && location.center.lat && location.center.lng && \r\n      <div style={{ height: '100vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyAmEXEE2SToTSNKMqoxl1w71nJ-q5zXPOE\" }}\r\n          defaultCenter={location.center}\r\n          defaultZoom={zoom}\r\n          fullscreenControl\r\n          onClick={(e) => setLocation({\r\n            center : {\r\n              lat : e.lat,\r\n              lng : e.lng\r\n            }\r\n          })}\r\n        >\r\n          <AnyReactComponent\r\n            lat={location.center.lat}\r\n            lng={location.center.lng}\r\n            latitude = {location.center.lat}\r\n            longitude={location.center.lng}\r\n            \r\n          /> \r\n        </GoogleMapReact>\r\n       \r\n          <p>latitude : {location.center.lat} , longitude : {location.center.lng} &nbsp; &nbsp; &nbsp; <button onClick={saveLocation}>Submit Your Location</button></p> \r\n         \r\n      </div>\r\n        }\r\n    \r\n    \r\n    </div>\r\n  )\r\n}","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentAudio.js",["962"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\userProfile.js",["963"],"import React from 'react'\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    CardHeaderToolbar\r\n  } from '../../../../_metronic/_partials/controls'\r\n  import { useParams } from 'react-router-dom'\r\n\r\nfunction UserProfile ({history}) {\r\n    let { id } = useParams()\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Profile'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                    history.push('/user/UserForm')\r\n                  }}\r\n                >\r\n                  New User\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody></CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentText.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\components\\userActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\classActionFormatterBranch.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Overview.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\SplashScreen.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\LoadingDialog.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\Pagination.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\HeaderCheckbox.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\stats\\StatsWidget11.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\mixed\\MixedWidget14.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\lists\\ListsWidget3.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\FormAlert.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\FieldFeedbackLabel.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeBlockToolbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeBlock.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\batches.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\branches.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\branchForm.js",["964","965","966"],"import React, { useState ,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Form, Col ,ListGroup ,Dropdown } from 'react-bootstrap'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function BranchForm () {\r\n  const [Branch, setBranch] = useState( { id:null,name: '',  address: { address: '',pincode : \"\" ,  city: '', state: '' } }\r\n  )\r\n  const [postal , setPostal] = useState()\r\n  const [postalError , setPostalError] = useState()\r\n  let { id } = useParams()\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n\r\n    debugger;\r\n    if(id){\r\n      axios\r\n      .get('/api/branch/branch/' + id)\r\n      .then(res => {\r\n        setBranch(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        return {}\r\n      })\r\n    }\r\n  }, [id , Branch.address.state])\r\n\r\n  const saveBranchData = event => {\r\n    event.preventDefault()\r\n    debugger\r\n    axios\r\n      .post('/api/branch/branch', Branch)\r\n      .then(res => {\r\n        history.push('/setting/Branch')\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const getAddress = (pincode) => {\r\n \r\n   \r\n    axios.get(`api/branch/getPostalAddress/${pincode}`).then((res)=>{\r\n     \r\n    if(res.data[0].Status == 'Error'){\r\n      setPostalError(`${res.data[0].Message} : Give Correct PinCode`)\r\n      setPostal(\"\") \r\n    }else{\r\n      setPostalError('')\r\n      setPostal(res.data[0].PostOffice)\r\n    }\r\n    }).catch((error) => {\r\n\r\n    })\r\n\r\n  }\r\n  \r\n  const selectPostalName = (name  , District , state) => {\r\n    setBranch({\r\n      ...Branch,\r\n      address: {...Branch.address, division : name ,  city: District  , state : state  }\r\n      \r\n    }) \r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n          <CardHeader title='Add Branch'>\r\n            \r\n         </CardHeader>\r\n            <CardBody>\r\n              <Form onSubmit={saveBranchData}>\r\n                <Form.Group controlId='formTitle' className=\"row\">\r\n                  <Col><Form.Label>Branch Name</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Branch Name'\r\n                    required\r\n                    value={Branch.name}\r\n                    onChange={event =>\r\n                      setBranch({ ...Branch, name: event.target.value })\r\n                    }\r\n                  /></Col>\r\n                  <Col><Form.Label>PinCode</Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    placeholder='Postal Code'\r\n                    required\r\n                    value={Branch.address.pincode}\r\n                    onChange={event =>{\r\n                      setBranch({ ...Branch,\r\n                        address: {\r\n                        ...Branch.address,\r\n                        pincode: event.target.value\r\n                      } })\r\n                      if(event.target.value.length >= 6){\r\n                        getAddress(event.target.value)\r\n                      }\r\n                    }}\r\n                  />\r\n                  {postalError && <Form.Text style={{color : 'red'}}>{postalError}</Form.Text>}\r\n                  \r\n                 {postal && postal.length  && \r\n                 <Dropdown>\r\n                 <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                   Select Division\r\n                 </Dropdown.Toggle>\r\n               \r\n                 <Dropdown.Menu>\r\n                  \r\n                 \r\n                 {postal && postal.length  && postal.map((single => {\r\n                   return <Dropdown.Item key={single.Name}  onClick ={() =>  selectPostalName(single.Name , single.District , single.State) }>{single.Name}</Dropdown.Item>\r\n                         \r\n                 })) \r\n                  } \r\n                   </Dropdown.Menu>\r\n               </Dropdown>}</Col>\r\n                  {postal && console.log(postal)}\r\n                  <Col><Form.Label>Address</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder=' street  address  / house number /shop number /'\r\n                    value={Branch.address.address}\r\n                    onChange={event =>\r\n                      setBranch({\r\n                        ...Branch,\r\n                        address: {\r\n                          ...Branch.address,\r\n                          address: event.target.value\r\n                        }\r\n                      })\r\n                    }\r\n                  /></Col>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='city' className=\"row\">\r\n                  <Col><Form.Label>Division </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='city'\r\n                    value={Branch.address.division}\r\n                  /></Col>\r\n                  </Form.Group>\r\n                <Form.Group controlId='city' className=\"row\">\r\n                  <Col><Form.Label>city </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='city'\r\n                    value={Branch.address.city}\r\n                   \r\n                  /></Col>\r\n                  <Col><Form.Label>state </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='state'\r\n                    value={Branch.address.state}\r\n                    \r\n                  /></Col>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseSections.js",["967","968","969","970","971","972","973","974"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownTopbarItemToggler.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu3.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\DropdownMenu2.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\cookie.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\branchActionFormatter.js",[],["975","976"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classes.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\pages\\studentPasswordReset.js",["977"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\classActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestQuestion.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\RouterHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionalTestList.js",["978"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport TestActionFormatter from '../components/TestActionFormatter'\r\n\r\nexport default function SectionTest (props) {\r\n  const [Test, setTests] = useState([])\r\n\r\n  let history = useHistory()\r\n    const {id , sid} = useParams();\r\n  const EditHandler = (TId) => {\r\n    debugger;\r\n    history.push(`/Test/${id}/section/${sid}/sectionalTestForm/${TId}`)\r\n  }\r\n  const DeleteHandler = (TId) => {\r\n    if (window.confirm('do you really  want to delete')) {\r\n      axios\r\n        .delete('/api/Test/' + sid + '/deleteTestById/' + TId )\r\n        .then(res => {alert(\"Test Deleted \");updateData() })\r\n        .catch(() => {})\r\n    }\r\n  }\r\n  const GetQuestionHandler=(TId)=>{\r\n    history.push(`/Test/${TId}/Questions` )\r\n  }\r\n  const ChangeDescription = (cellContent) => {\r\n    return <div  dangerouslySetInnerHTML={{    __html: cellContent }}></div>\r\n}\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },   \r\n    {\r\n      dataField: 'passingMarks',\r\n      text: 'passing',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'totalMarks',\r\n      text: 'Total',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'isComplete',\r\n      text: 'Status',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'description',\r\n      text: 'Description',\r\n      sort: true,\r\n      formatter : ChangeDescription ,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },\r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n      formatter: TestActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestions:GetQuestionHandler,\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\nconst updateData=()=>{\r\n//   debugger\r\n  axios.get(`/api/Test/${sid}/getallTestBySectionIdAdmin`)\r\n    .then(res => {\r\n    debugger;\r\n    setTests(res.data[0].tests)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>{console.log('in the page')}\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title={`Test-`}>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push(`/Test/${id}/section/${sid}/sectionalTestForm`)\r\n                  }}\r\n                >\r\n                  Create Test\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {Test ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={Test}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TablePaginationHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\testQuestion.js",["979"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar\r\n} from '../../../../_metronic/_partials/controls'\r\nimport { sortCaret, headerSortingClasses } from '../../../../_metronic/_helpers'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider\r\n} from 'react-bootstrap-table2-paginator'\r\nimport ActionFormatter from '../components/TestQuestionsActionFormatter'\r\n\r\n\r\nexport default function TestQuestions (props) {\r\n  const {id} = useParams();\r\n  const [questions, setQuestions] = useState([])\r\n\r\n  let history = useHistory()\r\n  const EditHandler = (qid) => {\r\n    debugger;\r\n    history.push('/Test/' + id + '/QuestionForm/' + qid)\r\n  }\r\n  const DeleteHandler = (QId) => {\r\n    if (window.confirm('do you really  want to delete11')) {\r\n      axios\r\n      .get(`/api/Test/getTestQuestionById/${QId}`)\r\n      .then(res => {\r\n        console.log(res)\r\n        axios\r\n        .post('/api/Test/' + id +  '/deleteQuestion/' ,res.data)\r\n        .then(res => {alert(\"Question Deleted \");updateData() })\r\n        .catch(() => {})\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      \r\n    }\r\n  }\r\n  const ShowHandler=(qid)=>{\r\n    history.push('/Test/' + id + '/Question/' + qid)\r\n\r\n  }\r\n\r\n  const options = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!')\r\n      console.log('Newest size per page:' + sizePerPage)\r\n      console.log('Newest page:' + page)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: '_id',\r\n      text: 'ID',\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: 'question',\r\n      text: 'question',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    },    \r\n    {\r\n      dataField: 'marks',\r\n      text: 'Marks',\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses\r\n    }, \r\n    {\r\n      dataField: 'action',\r\n      text: 'Actions',\r\n       formatter: ActionFormatter,\r\n      formatExtraData: {\r\n        EditAction: EditHandler,\r\n        DeleteAction: DeleteHandler,\r\n        ShowQuestion:ShowHandler\r\n      },\r\n      classes: 'text-right pr-0',\r\n      headerClasses: 'text-right pr-3',\r\n      style: {\r\n        minWidth: '100px'\r\n      }\r\n    }\r\n    \r\n  ]\r\n  const updateData=()=>{\r\n    debugger\r\n    axios.get('/api/Test/'+id + '/getTestQuestions')\r\n      .then(res => {\r\n      debugger; \r\n      console.log(res.data)        \r\n      setQuestions(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    }\r\n      useEffect(() => {\r\n        updateData()\r\n      }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <CardHeader title='Test Question'>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-primary'\r\n                  onClick={() => {\r\n                  history.push('/Test/'+id+'/QuestionForm')\r\n                  }}\r\n                >\r\n                  Add Question\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {questions ? (\r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => {\r\n                    return (\r\n                      <BootstrapTable\r\n                        keyField='_id'\r\n                        data={questions}\r\n                        columns={columns}\r\n                        classes='table table-head-custom table-vertical-center overflow-hidden'\r\n                        wrapperClasses='table-responsive'\r\n                        bootstrap4\r\n                        remote\r\n                        bordered={false}\r\n                        pagination={paginationFactory(options)}\r\n                        {...paginationTableProps} \r\n                      />\r\n                    )\r\n                  }}\r\n                </PaginationProvider>\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\content\\ContentRoute.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\components\\TestActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\ScrollTop.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\footer\\Footer.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\components\\NotificationActionFormatter.js",["980","981","982","983"],"// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\nimport SVG from 'react-inlinesvg'\r\nimport { toAbsoluteUrl } from '../../../../_metronic/_helpers'\r\nimport { Button } from 'react-bootstrap'\r\nexport default function NotificationActionFormatter (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  {  ApproveClassAction , RejectClassAction}\r\n) {\r\n\r\n  return (\r\n    <>\r\n\r\n      { row.changeRequest.status == \"Pending\" && <a\r\n        title='ReSchedule'\r\n        // className='btn btn-icon btn-light btn-hover-primary btn-sm mx-3'\r\n        onClick={() => ApproveClassAction(row.changeRequest._id , row.changeRequest.entityId ,\r\n           row.changeRequest.requestedFees , row.changeRequest.requestType\r\n          )}\r\n      >\r\n        <span className='svg-icon svg-icon-md svg-icon-primary'>\r\n          {/* <SVG title=' ReSchedule'\r\n            src={toAbsoluteUrl('/media/svg/icons/Communication/Write.svg')}\r\n          /> */}\r\n          <Button>Approved</Button>\r\n        </span>\r\n      </a>\r\n}\r\n      { row.changeRequest.status == \"Pending\" &&  <a\r\n        title='Delete Question'\r\n        // className='btn btn-icon btn-light btn-hover-danger btn-sm'\r\n        onClick={() => RejectClassAction(row.changeRequest._id , row.changeRequest.entityId ,\r\n          row.changeRequest.requestedFees , row.changeRequest.requestType\r\n         )}\r\n      >\r\n        <span className='svg-icon svg-icon-md svg-icon-danger'>\r\n          {/* <SVG  src={toAbsoluteUrl('/media/svg/icons/General/Trash.svg')} title='Delete \r\n          Exam' /> */}\r\n          <Button>Reject</Button>\r\n        </span>\r\n      </a>\r\n}\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\offcanvas\\QuickPanel.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\scrolltop.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\footer.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\brand.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\Topbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\components\\BreadCrumbs.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\offcanvas.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\ControlPanelButton.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\LanguageSelectorDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\MyCartDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\aside-menu\\AsideMenuList.js",["984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011"],"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useContext } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SVG from 'react-inlinesvg'\r\nimport { shallowEqual, useSelector } from 'react-redux'\r\nimport { toAbsoluteUrl, checkIsActive } from '../../../../_helpers'\r\n// import { permissionsContext } from '../../permissionManager/permissionContext'\r\nimport { permissionsContext } from '../../../../../app/modules/permissionManager/permissionContext'\r\n\r\nexport function AsideMenuList ({ layoutProps }) {\r\n  const location = useLocation()\r\n  const getMenuItemActive = (url, hasSubmenu = false) => {\r\n    return checkIsActive(location, url)\r\n      ? ` ${!hasSubmenu && 'menu-item-active'} menu-item-open `\r\n      : ''\r\n  }\r\n  const  {auth}  = useSelector(\r\n    ({ auth }) => ({\r\n      auth: auth\r\n    }),\r\n    shallowEqual\r\n  )\r\n  const { isUserAuthenticate } = useContext(permissionsContext)\r\n\r\n  return (\r\n    <>\r\n      {/* begin::Menu Nav */}\r\n      <ul className={`menu-nav ${layoutProps.ulClasses}`}>\r\n        {/*begin::1 Level*/}\r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/home', false)}`}\r\n          aria-haspopup='true'\r\n        >\r\n          \r\n          <div className='menu-link' onClick={() => window.location.href = \"http://localhost:3001/searchpage\"} >\r\n              <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Design/Layers.svg')} />\r\n            </span> \r\n            <span className='menu-text' >Home</span>\r\n          </div>\r\n           \r\n        </li>\r\n        <hr></hr>\r\n       \r\n        <hr></hr>\r\n        {auth.isInstituteUser && ( <li\r\n          className={`menu-item `}\r\n          aria-haspopup='true'\r\n        >\r\n          <NavLink className='menu-link' to='#'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Design/Layers.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Institute Controls</span>\r\n          </NavLink>\r\n        </li>\r\n )}\r\n       {auth.isInstituteUser && ( <hr></hr> )}\r\n       \r\n        {(    auth.isInstituteUser || isUserAuthenticate('M1', 1))  && ( \r\n<li\r\n          className={`menu-item ${getMenuItemActive('/setting/Branch', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Branch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Branch</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n)}\r\n         {(    auth.isInstituteUser || isUserAuthenticate('M2', 1))  && ( <li\r\n          className={`menu-item ${getMenuItemActive('/setting/class', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/class'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Class</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n         )}\r\n\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M3', 1)) && (\r\n          <li className={`menu-item ${getMenuItemActive('/User', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/User'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Users</span>\r\n              {/* <i className='menu-arrow' /> */}\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n        {/* Components */}\r\n\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M6', 1)) && (\r\n           <li\r\n          className={`menu-item ${getMenuItemActive(\r\n            '/ecourse/Courses',\r\n            false\r\n          )}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/ecourse/Courses'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Courses</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n         )} \r\n        {(    auth.isInstituteUser || isUserAuthenticate('M7', 1)) && ( <li\r\n          className={`menu-item ${getMenuItemActive('/Test/testlist', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Test/testlist'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Tests</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n        </li>\r\n        )}\r\n      {(    auth.isInstituteUser || isUserAuthenticate('M4', 1)) && (   <li\r\n          className={`menu-item ${getMenuItemActive('/Exams', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Exams'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Examination</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Schedule Exam</span>\r\n                </span>\r\n              </li>\r\n              <li\r\n                className={`menu-item ${getMenuItemActive('/Exams/Scheduled')}`}\r\n                aria-haspopup='true'\r\n              >\r\n                <NavLink className='menu-link' to='/Exams/Scheduled'>\r\n                  <i className='menu-bullet menu-bullet-dot'>\r\n                    <span />\r\n                  </i>\r\n                  <span className='menu-text'>Schedule Exam</span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      )}\r\n\r\n\r\n        \r\n        <li\r\n          className={`menu-item ${getMenuItemActive('/Notifications', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Notifications'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Notifications</span>\r\n          </NavLink>\r\n        </li>\r\n\r\n        {    auth.isInstituteUser  && ( <li\r\n          className={`menu-item ${getMenuItemActive(\r\n            '/permission/Roles',\r\n            false\r\n          )}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/permission/Roles'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Permission</span>\r\n            {/* <i className='menu-arrow' /> */}\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Permission</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        )}\r\n\r\n{auth.isInstituteUser && ( <hr></hr> )}\r\n      {auth.isInstituteUser && ( <hr></hr> )}\r\n      {auth.isInstituteUser && ( <li\r\n          className={`menu-item `}\r\n          aria-haspopup='true'\r\n        >\r\n          <NavLink className='menu-link' to='#'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Design/Layers.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Branch Controls</span>\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n       {auth.isInstituteUser && ( <hr></hr> )}\r\n        {/*end::1 Level*/}\r\n\r\n        {/*begin::1 Level*/}\r\n\r\n        {/* <li\r\n          className={`menu-item ${getMenuItemActive('/setting', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Batch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>setting</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className={`menu-item ${getMenuItemActive('/setting/Batch')}`}\r\n                  aria-haspopup='true'\r\n                >\r\n                  <NavLink className='menu-link' to='/setting/Batch'>\r\n                    <i className='menu-bullet menu-bullet-dot'>\r\n                      <span />\r\n                    </i>\r\n                    <span className='menu-text'>Batch</span>\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </ul>\r\n          </div>\r\n        </li> */}\r\n {(    auth.isInstituteUser || isUserAuthenticate('M8', 1))  && ( <li\r\n          className={`menu-item ${getMenuItemActive('/setting/Batch')}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/Batch'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Batch</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Batch</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n )}\r\n\r\n{(    auth.isInstituteUser || isUserAuthenticate('M9', 1))  && ( <li\r\n          className={`menu-item ${getMenuItemActive('/Student', false)}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/Student'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>Student</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>Students</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n)}\r\n        {/* {isUserAuthenticate('M3', 1) && ( */}\r\n          {(    auth.isInstituteUser || isUserAuthenticate('M3', 1))  && (  <li\r\n            className={`menu-item ${getMenuItemActive('/user', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/user/BranchUser'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>User</span>\r\n              <i className='menu-arrow' />\r\n            </NavLink>\r\n\r\n            <div className='menu-submenu '>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className='menu-item  menu-item-parent'\r\n                  aria-haspopup='true'\r\n                >\r\n                  <span className='menu-link'>\r\n                    <span className='menu-text'>User</span>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          )}\r\n        {/* ) */}\r\n        {/* } */}\r\n        {(    auth.isInstituteUser || isUserAuthenticate('M2', 1)) && (\r\n          <li\r\n            className={`menu-item ${getMenuItemActive('/setting/classList', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/setting/classList'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Classes</span>\r\n              <i className='menu-arrow' />\r\n            </NavLink>\r\n\r\n            <div className='menu-submenu '>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className='menu-item  menu-item-parent'\r\n                  aria-haspopup='true'\r\n                >\r\n                  <span className='menu-link'>\r\n                    <span className='menu-text'>Classes</span>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n         ) \r\n         }\r\n        <li\r\n            className={`menu-item ${getMenuItemActive('/setting/location', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/setting/location'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Location</span>\r\n              <i className='menu-arrow' />\r\n            </NavLink>\r\n\r\n            <div className='menu-submenu '>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className='menu-item  menu-item-parent'\r\n                  aria-haspopup='true'\r\n                >\r\n                  <span className='menu-link'>\r\n                    <span className='menu-text'>Location</span>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n       \r\n          {(    auth.isInstituteUser || isUserAuthenticate('M10', 1) ) && (<li\r\n            className={`menu-item ${getMenuItemActive('/fee', false)}`}\r\n            aria-haspopup='true'\r\n            data-menu-toggle='hover'\r\n          >\r\n            <NavLink className='menu-link' to='/fee'>\r\n              <span className='svg-icon menu-icon'>\r\n                <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n              </span>\r\n              <span className='menu-text'>Fee Management</span>\r\n              <i className='menu-arrow' />\r\n            </NavLink>\r\n\r\n            <div className='menu-submenu '>\r\n              <ul className='menu-subnav'>\r\n                <li\r\n                  className='menu-item  menu-item-parent'\r\n                  aria-haspopup='true'\r\n                >\r\n                  <span className='menu-link'>\r\n                    <span className='menu-text'>Fee Management</span>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n        )}\r\n        {(auth && auth.user && !auth.user.branch) && ( <li\r\n          className={`menu-item ${getMenuItemActive('/setting/UserCourses')}`}\r\n          aria-haspopup='true'\r\n          data-menu-toggle='hover'\r\n        >\r\n          <NavLink className='menu-link' to='/setting/UserCourses'>\r\n            <span className='svg-icon menu-icon'>\r\n              <SVG src={toAbsoluteUrl('/media/svg/icons/Home/Library.svg')} />\r\n            </span>\r\n            <span className='menu-text'>MyCourses</span>\r\n            <i className='menu-arrow' />\r\n          </NavLink>\r\n\r\n          <div className='menu-submenu '>\r\n            <ul className='menu-subnav'>\r\n              <li className='menu-item  menu-item-parent' aria-haspopup='true'>\r\n                <span className='menu-link'>\r\n                  <span className='menu-text'>MyCourses</span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        )}\r\n         \r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\search\\SearchResult.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\setupAxios.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\Metronici18n.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicSplashScreen.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\LayoutConfig.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorsPage.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\LayoutInit.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\StickyToolbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\aside\\Aside.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\SubHeader.js",["1012"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage6.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\_redux\\authCrud.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\header-menu\\HeaderMenuWrapper.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\subheader\\components\\QuickActions.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\brand\\Brand.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\sticky-card.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside-toggle.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\aside-menu.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\TableSortingHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\QuiclUserToggler.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\AssetsHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\components\\menu.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\PaginationToolbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\Checkbox.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\pagination\\PaginationLinks.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples-kt\\KTCodeExample.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeExample.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\UserProfileDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\BranchesSelectorDropdown.js",["1013"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\QuickActionsDropdown.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage3.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\DashboardPage.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\index.js",["1014"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentVideo.js",["1015"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\testList.js",["1016","1017","1018","1019"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\ContentAll.js",["1020","1021","1022"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\batchForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\CourseTestForm.js",["1023","1024","1025","1026","1027","1028","1029"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Form, Card , Col } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport JoditEditor from 'jodit-react'\r\n\r\nexport default function TestForm () {\r\n  const [Test, setTest] = useState({\r\n    name: '',\r\n    description: '',\r\n    class: '',\r\n    testLevel : '',\r\n    totalMarks: '',\r\n    timeInHours: '',\r\n    timeInMinutes: '',\r\n    passingMarks: ''\r\n  })\r\n  const [CourseId , setCourseId] = useState()\r\n  const [CourseList , setCourseList] = useState()\r\n  const [Class, setClasses] = useState([])\r\n  // const [Years, setYears] = useState([])\r\n  const editor = React.useRef(null)\r\n  const config = {\r\n   defaultActionOnPaste: 'insert_as_html',\r\n   askBeforePasteFromWord: false,\r\n   askBeforePasteHTML: false,\r\n   readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n}\r\nconst handleDescripiton = e => {\r\n  debugger;\r\n  console.log(e.target.innerHTML)\r\n  setTest({\r\n    ...Test,\r\n    description : e.target.innerHTML\r\n  })\r\n}\r\n  let { id ,  TId } = useParams()\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    setCourseId(id)\r\n    if(id == undefined){\r\n      axios.get('/api/course/getAllClassCoursesNameForTestadd').then(res => {\r\n        setCourseList(res.data)\r\n      })\r\n    }\r\n    debugger\r\n    if (id) {\r\n      axios.get(`/api/Test/getTestById/${TId}`)\r\n    .then(res => {\r\n    debugger;\r\n    setTest(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n    }\r\n  }, [TId, id])\r\n\r\n  const saveTest = event => {\r\n    event.preventDefault()\r\n    axios\r\n      .post(`/api/Course/${CourseId}/saveTestDetails`, Test)\r\n      .then(res => {\r\n        if(id == undefined){\r\n          history.push(`/Test/testlist`)\r\n\r\n        }\r\n        else{\r\n        history.push(`/Test/CourseTest/${id}/tests`)\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form onSubmit={saveTest} className='form'>\r\n\r\n                <Form.Group controlId='formTitle' className='row'>\r\n\r\n                {id == undefined && <div className='col-md-4'>\r\n                    <Form.Label>Select Class </Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      as='select'\r\n                      placeholder=''\r\n                      // disabled={Exam._id?\"true\":\"false\"}\r\n                      // value={Exam.class}\r\n                      onChange={event =>\r\n                        setCourseId(event.target.value)\r\n                      }\r\n                    >\r\n                      <option value=\"\" >select class</option>\r\n                      {CourseList && CourseList.length && CourseList.map(item => (\r\n                        <option value={item.courses._id} key={item.courses._id}>\r\n                          {item.courses.title}\r\n                        </option>\r\n                      ))\r\n                      }\r\n                    </Form.Control>\r\n                  </div>\r\n                }\r\n\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Test Name</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='text'\r\n                      placeholder='Test Name'\r\n                      value={Test.name}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, name: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Total Marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='Total Marks'\r\n                      value={Test.totalMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, totalMarks: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>passing  marks</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='passing Marks'\r\n                      value={Test.passingMarks}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, passingMarks: event.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                 \r\n\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Hours</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='time in  hours'\r\n                      value={Test.timeInHours}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInHours: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Time in Minutes</Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      type='number'\r\n                      placeholder='time in  minutes'\r\n                      value={Test.timeInMinutes}\r\n                      onChange={event =>\r\n                        setTest({ ...Test, timeInMinutes: event.target.value})\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                    <Form.Label>Test Level</Form.Label>\r\n                      \r\n                      <Form.Control as=\"select\" defaultValue=\"Choose...\" required={true} onChange={(event) =>\r\n                        setTest({ ...Test, testLevel: event.target.value})}>\r\n                          <option value=\"\">Test Level</option>\r\n                        <option>Easy</option>\r\n                        <option>Intermediate</option>\r\n                        <option>Hard</option>\r\n                      </Form.Control>\r\n                  </div>\r\n                  \r\n                  <div className='col-md-12'>\r\n                    <Form.Label>Test description</Form.Label>\r\n                    < JoditEditor\r\n                        ref={editor}\r\n                        value={Test.description}\r\n                        config={config}\r\n                        tabIndex={1} // tabIndex of textarea\r\n                        onBlur={event =>\r\n                          setTest({ ...Test, description : event.target.innerHTML})\r\n                        }\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classForm.js",["1030","1031","1032"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Button, Form, Card, Col } from 'react-bootstrap'\r\nimport JoditEditor from 'jodit-react'\r\n\r\n\r\nexport default function ClassForm() {\r\n  let { id, cid } = useParams()\r\n  const [ClassVar, setClass] = useState({ name: '', description: '',fees:\"\"})\r\n  let history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      debugger;\r\n      axios.get('/api/branch/class/' + id).then(res => {\r\n        if (res.data) {\r\n          setClass({\r\n            id: res.data._id,\r\n            name: res.data.name,\r\n            description: res.data.description,\r\n            fees: res.data.fees,\r\n          })\r\n          // initial._id = id\r\n          // initial.name = res.data.name\r\n          // initial.description = res.data.description\r\n        }\r\n      })\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  const saveClassFormData = async event => {\r\n    event.preventDefault()\r\n    debugger\r\n    await axios\r\n      .post('/api/branch/class', ClassVar)\r\n      .then(res => {\r\n        debugger;\r\n        history.push('/setting/class');\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const getData = () => {\r\n    debugger\r\n  }\r\n  const editor = React.useRef(null)\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const handleDescripiton = e => {\r\n    debugger;\r\n    setClass({\r\n      ...ClassVar , \r\n      description : e.target.innerHTML\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Card.Body>\r\n              <Form onSubmit={saveClassFormData}>\r\n                <Form.Group controlId='formTitle' className=\"row\">\r\n                  <Form.Label>Class</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Class Title'\r\n                    required\r\n                    value={ClassVar.name}\r\n                    onChange={event =>\r\n                      setClass({ ...ClassVar, name: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='formTitle' className=\"row\">\r\n                  <Form.Label>Fees</Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    placeholder='amount'\r\n                    value={ClassVar.fees}\r\n                    onChange={event =>\r\n                      setClass({ ...ClassVar, fees: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='formTitle' className=\"row\">\r\n                  {/* <Col>\r\n                  \r\n                  <Form.Label>description</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Class description'\r\n                      value={ClassVar.description}\r\n                      onChange={event =>\r\n                        setClass({ ...ClassVar, description: event.target.value })\r\n                      }\r\n                    />\r\n                    </Col> */}\r\n\r\n\r\n\r\n                  <Form.Label>Description</Form.Label>\r\n                  < JoditEditor\r\n                    ref={editor}\r\n                    value={ClassVar.description}\r\n                    config={config}\r\n                    tabIndex={1} // tabIndex of textarea\r\n                    onBlur={handleDescripiton} // preferred to use only this option to update the content for performance reasons\r\n                  />\r\n\r\n\r\n                </Form.Group>\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\question.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\exam.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\FAQs.js",["1033","1034","1035"],"import React , {useEffect , useState ,useRef } from 'react'\r\nimport { Row, Col,Card  , Form , Button} from 'react-bootstrap'\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from 'axios'\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from 'react-router'\r\nimport JoditEditor from 'jodit-react'\r\nexport default function FAQs(){\r\n  const {courseId} = useParams()\r\n  const [faqs , setfaqs] = useState([])\r\n  const [faq , setfaq]  = useState({\r\n    question : \"\" , \r\n    answer : \"\"\r\n  })\r\n  const editor = useRef(null)\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const {user} = useSelector(state => state.auth);\r\n  useEffect(() => {\r\n    update()\r\n  }, [])\r\n  const update =() => {\r\n    axios.get('/api/course/getFaq/' + courseId).then((res)=>{\r\n       setfaqs(res.data)\r\n    }).catch((res)=>{\r\n\r\n    })\r\n  }\r\n  const saveAnnouncement =  async event => {\r\n    event.preventDefault()\r\n    debugger;\r\n    await axios.post('/api/course/saveFaq/' + courseId , faq).then((res) => {\r\n    }).catch((error) => {\r\n\r\n    })\r\n    setfaq({question : \"\" , answer : \"\"})\r\n    update()\r\n\r\n  }\r\n  const handleAnnouncement = e => {\r\n    setfaq({...faq, answer :  e.target.innerText })\r\n  }\r\n    return (\r\n        <Card classNameName='col-md-12'>\r\n          {user && faqs && faqs.length && (user._id ==  faqs[0].faq.createdBy[0]._id) && \r\n          <Form onSubmit={saveAnnouncement} className='form'>\r\n\r\n            <Form.Group controlId='formTitle' className='row'>\r\n\r\n      \r\n      <div className='col-md-4'>\r\n        <Form.Label>Question</Form.Label>\r\n        <Form.Control\r\n          required='true'\r\n          type='text'\r\n          placeholder='Test Name'\r\n          value={faq.question}\r\n          onChange={event =>\r\n            setfaq({ ...faq, question: event.target.value })\r\n          }\r\n        />\r\n      </div>\r\n      <div className='col-md-12'>\r\n        <Form.Label>Answer</Form.Label>\r\n        <JoditEditor\r\n            ref={editor}\r\n            value={faq.answer}\r\n            config={config}\r\n            tabIndex={1} // tabIndex of textarea\r\n            onBlur={handleAnnouncement} // preferred to use only this option to update the content for performance reasons\r\n          />\r\n      </div>\r\n      </Form.Group>\r\n\r\n      <Button variant='primary' type='submit'>\r\n        Submit\r\n            </Button>\r\n</Form>\r\n}\r\n        <Card.Header as='h5'>Frequently Asked Questions</Card.Header>\r\n       {faqs && faqs.length && faqs.map((ele) => \r\n       \r\n       <Card.Body>\r\n\r\n          <Row>\r\n            <Col>\r\n              <div style={{ width: '80%' }}>\r\n                <h3>{ele.faq.question}</h3>\r\n                <p>\r\n                  {ele.faq.answer}\r\n                </p>\r\n               \r\n                <p>\r\n                  Created by <b>{ele.faq.createdBy[0].name}</b> Last updated {ele.faq.createdAt.slice(0,10)}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n       )}\r\n      </Card>\r\n    )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\batchActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\QuestionOptionForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\widgets\\advance-tables\\AdvanceTablesWidget2.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\index.js",["1036","1037"],"import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport Classes from './pages/classes'\r\nimport ClassForm from './pages/classForm'\r\nimport Branches from './pages/branches'\r\nimport BranchForm from './pages/branchForm'\r\nimport Batches from './pages/batches'\r\nimport BatchForm from './pages/batchForm'\r\nimport Courses from './pages/Courses'\r\nimport CourseForm from './pages/CourseForm'\r\nimport CourseSections from './pages/CourseSections'\r\nimport CourseSectionform from './pages/CourseSectionform'\r\nimport ContentText from './pages/ContentText'\r\nimport ContentPdf from './pages/ContentPdf'\r\nimport ContentVideo from './pages/ContentVideo'\r\nimport ContentAudio from './pages/ContentAudio'\r\nimport ContentAll from './pages/ContentAll'\r\nimport CoursePlayer from './pages/CoursePlayer'\r\nimport ClassesForBranch from './pages/classesForBranch'\r\nimport ReactMap from './pages/location'\r\nimport FeeManagement from './pages/FeeManagement'\r\n\r\n//user\r\nimport UserCourses from './pages/UserCourses'\r\nimport UserCourseForm from './pages/UserCourseForm'\r\nimport UserCourseSections from './pages/UserCourseSections'\r\nimport UserCourseSectionForm from './pages/UserCourseSectionform'\r\nimport UserVideoContent from './pages/UserContentAll'\r\n\r\n\r\n\r\nexport default function ECourse () {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/setting/class' component={Classes} />\r\n      <Route exact path='/setting/Branch' component={Branches} />\r\n      <Route exact path='/setting/Batch' component={Batches} />\r\n\r\n      <Route exact path='/setting/classForm' component={ClassForm} />\r\n      <Route exact path='/setting/branchForm' component={BranchForm} />\r\n      <Route exact path='/setting/BatchForm/' component={BatchForm} />\r\n\r\n      <Route path='/setting/branchForm/:id'>\r\n        <BranchForm />\r\n      </Route>\r\n      <Route exact path='/setting/CourseForm/:id?'>\r\n        <CourseForm />\r\n      </Route>\r\n      <Route path='/setting/classForm/:id'>\r\n        <ClassForm />\r\n      </Route>\r\n      <Route exact path='/setting/BatchForm/:id'>\r\n        <BatchForm />\r\n      </Route>\r\n\r\n      <Route exact path='/setting/CourseForm/:id/:cid'>\r\n        <CourseForm />\r\n      </Route>\r\n      <Route exact path='/setting/Courses/:id'>\r\n        <Courses />\r\n      </Route>\r\n      <Route exact path='/setting/course/:id/sections'>\r\n        < CourseSections />\r\n      </Route>\r\n      <Route exact path='/setting/course/:id/showCourse'>\r\n        < CoursePlayer />\r\n      </Route>\r\n      \r\n      <Route exact path='/setting/course/:cid/sectionForm'>\r\n        < CourseSectionform />\r\n      </Route>\r\n      <Route exact path='/setting/course/:cid/sectionForm/:id'>\r\n        < CourseSectionform />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content'>\r\n        < ContentAll />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/text'>\r\n        < ContentText />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/video'>\r\n        < ContentVideo />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/audio'>\r\n        < ContentAudio />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/pdf'>\r\n        < ContentPdf />\r\n      </Route>\r\n      <Route exact path='/setting/course/section/:id/content/:cid'>\r\n        <ContentAll/>\r\n      </Route>\r\n      <Route exact path='/setting/classList'>\r\n        <ClassesForBranch/>\r\n      </Route>\r\n      <Route exact path='/setting/location'>\r\n        <ReactMap/>\r\n      </Route>\r\n\r\n\r\n       {/* User */}\r\n      <Route exact path='/setting/UserCourses'>\r\n        <UserCourses/>\r\n      </Route>\r\n      <Route exact path='/setting/UserCourseForm/:cid?'>\r\n        <UserCourseForm/>\r\n      </Route>\r\n      <Route exact path='/setting/Usercourse/:id/sections'>\r\n        < UserCourseSections />\r\n      </Route>\r\n      <Route exact path='/setting/Usercourse/:cid/sectionForm/:id?'>\r\n        < UserCourseSectionForm />\r\n      </Route>\r\n      <Route exact path='/setting/Usercourse/section/:id/content'>\r\n        < UserVideoContent />\r\n      </Route>\r\n      \r\n{/* \r\n      <Redirect to='/error/error-v1' /> */}\r\n    </Switch>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\CourseActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourses.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\feesChangeFormatterBranch.js",["1038","1039"],"// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useState , useEffect } from 'react' \r\nimport SVG from 'react-inlinesvg'\r\n\r\nimport { toAbsoluteUrl } from '../../../../_metronic/_helpers'\r\n\r\nexport default function FeesChangeActionFormatter ({\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  updateFees\r\n}) {\r\n  const [IsInput, setIsInput] = useState(false)\r\n  const [feesValue, setFeesValue] = useState(cellContent)\r\n  const Edit = () => {\r\n    setIsInput(true)\r\n  }\r\n  const save = () => {\r\n    updateFees(row._id, feesValue , row.name , row.fees)\r\n    setIsInput(false)\r\n  }\r\n  \r\n    useEffect(() => {\r\n      debugger;\r\n    }, [feesValue])\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n      {IsInput && (\r\n        <>\r\n           <button onClick={save} className={'btn btn-success'} style={{\"display\":\"inline\"}}>\r\n            save\r\n          </button>\r\n          <input\r\n            // value= {feesValue}\r\n            placeholder={`${row.fees} Give New Amount`}\r\n            onChange={event => {\r\n              setFeesValue(event.target.value)\r\n              \r\n            }}\r\n          />\r\n       \r\n        </>\r\n      )}\r\n      {!IsInput && (\r\n        <>\r\n          <div>\r\n          <button onClick={Edit} className={'btn btn-primary '} style={{\"display\":\"inline\"}}>\r\n              edit\r\n            </button>\r\n            {row.fees}\r\n            \r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\UserCourseActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourseForm.js",["1040","1041","1042"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseSectionform.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\components\\UserCourseProfileFormater.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourseSections.js",["1043","1044","1045","1046","1047","1048","1049","1050"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Accordion, Card, Col, Nav, Row } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport SVG from 'react-inlinesvg'\r\nimport { toAbsoluteUrl } from '../../../../_metronic/_helpers'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\nimport AddContentButton from '../components/ContentAddButton'\r\n\r\nexport default function UserCourseSections () {\r\n  //id of Course\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n  const [sections, setSections] = useState([])\r\n  const [expanded, setExpanded] = useState('panel1')\r\n  const [course, setCourse] = useState(null)\r\n\r\n  const handleChange = panel => () => {\r\n    if (expanded != panel) setExpanded(panel)\r\n  }\r\n  const CreateSection = () => {\r\n    history.push('/setting/Usercourse/' + id + '/sectionForm')\r\n  }\r\n\r\n  const EditSection = secId => {\r\n    history.push('/Setting/Usercourse/' + id + '/sectionForm/' + secId)\r\n  }\r\n  const DeleteSection = id => {\r\n    debugger\r\n    if (window.confirm('Do you realy Want to delete Compelete Section ?')) {\r\n      debugger\r\n      axios\r\n        .delete('/api/course/deleteUserCourseSection/' + id)\r\n        .then(response => {\r\n          loaddata()\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n  const loaddata = () => {\r\n    axios\r\n      .get('/api/course/getUserCourse/' + id)\r\n      .then(res => {\r\n        debugger\r\n        console.log('res' , res.data)\r\n        setCourse(res.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n  const editContent = (id, sectionId) => {\r\n    history.push('/setting/course/section/' + sectionId + '/content/' + id)\r\n  }\r\n  const showContent = ( sectionId) => {\r\n    console.log(id , sectionId)\r\n    history.push(`/setting/course/${id}/showCourse`)\r\n  }\r\n\r\n  const deleteContent = id => {\r\n    debugger\r\n    if (window.confirm('Do you realy Want to delete Compelete Section ?')) {\r\n      axios\r\n        .delete('/api/Course/sectionContent/' + id)\r\n        .then(res => {\r\n          loaddata()\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    loaddata()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className='row'>\r\n          <div className='col-md-12'>\r\n            <Card>\r\n              <Card.Header as='h5'>\r\n                {course && course.class ? course.class.name + '->' : ''}\r\n                {course ? course.title : ''}\r\n                <Button\r\n                  variant='primary'\r\n                  className='btn btn-outline-primary ml-2 float-right'\r\n                  type='button'\r\n                  onClick={() => {\r\n                    if (history.length > 1) {\r\n                      // this will take you back if there is history\r\n                      history.goBack()\r\n                    }\r\n                  }}\r\n                >\r\n                  back\r\n                </Button>\r\n                <button\r\n                  className='btn btn-primary float-right'\r\n                  onClick={CreateSection}\r\n                >\r\n                  Add New Section\r\n                </button>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Accordion>\r\n                  {course &&\r\n                    course.sections.sort((a, b) => a.order - b.order).map(item => (\r\n                      \r\n                      <Card key={item._id}>\r\n                        <Card.Header>\r\n                          <div className='row'>\r\n                            <div className='col ANewSec'>\r\n                              <Accordion.Toggle\r\n                                as={Button}\r\n                                variant='text'\r\n                                eventKey={item._id}\r\n                              >{console.log(\"item\" , item)}\r\n                                <h5>{item.name}</h5>\r\n                              </Accordion.Toggle>\r\n                            </div>\r\n                            <Col md='auto'>\r\n                              <div\r\n                                className='btn-group'\r\n                                role='group'\r\n                                aria-label=''\r\n                              >\r\n                                {/* <AddContentButton\r\n                                  sectionId={item._id}\r\n                                  courseId={id}\r\n                                /> */}\r\n                                <button\r\n                                className=\"btn btn-primary\"\r\n                                  onClick={() => {\r\n                                    history.push(`/test/${id}/section/${item._id}/tests`)\r\n                                  }}\r\n                                >\r\n                                  Tests\r\n                                </button>\r\n                                <button\r\n                                 className=\"btn btn-primary\"\r\n                                  onClick={() => {\r\n                                    history.push(`/setting/Usercourse/section/${item._id}/content/`)\r\n                                  }}\r\n                                >\r\n                                  Add Content\r\n                                </button>\r\n\r\n                                <button\r\n                                  className=' btn btn-primary pull-right'\r\n                                  style={{ marginLeft: 'auto' }}\r\n                                  onClick={e => {\r\n                                    EditSection(item._id)\r\n                                  }}\r\n                                >\r\n                                  <span className='svg-icon svg-icon-md'>\r\n                                    <SVG\r\n                                      title='Edit Content'\r\n                                      src={toAbsoluteUrl(\r\n                                        '/media/svg/icons/Communication/Write.svg'\r\n                                      )}\r\n                                    />\r\n                                  </span>\r\n                                </button>\r\n                                <button\r\n                                  className=' btn btn-danger pull-right'\r\n                                  onClick={event => {\r\n                                    DeleteSection(item._id)\r\n                                  }}\r\n                                >\r\n                                  <span className='svg-icon svg-icon-md'>\r\n                                    <SVG\r\n                                      src={toAbsoluteUrl(\r\n                                        '/media/svg/icons/General/Trash.svg'\r\n                                      )}\r\n                                      title='Delete Content'\r\n                                    />\r\n                                  </span>\r\n                                </button>\r\n                              </div>\r\n                            </Col>\r\n                          </div>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey={item._id}>\r\n                          <Card.Body>\r\n                            {item.contents.map(c => {\r\n                              return (\r\n                                <div\r\n                                  className='row mb-5 brd_b'\r\n                                  key={c._id}\r\n                                  // style={{ margin: '10px' }}\r\n                                >\r\n                                  <Col className='secTitle'>{c.title}</Col>\r\n\r\n                                  <Col className='secType'>{`${c.videoUrl || c.videoDescription ? \"Video\" : \"\"}  ${c.pdfUrl || c.pdfDescription? \"| Pdf\" : \"\"} ${c.imageUrl || c.imageDescription? \"| Image\" : \"\"} ${c.audioUrl ? \"| Audio\" : \"\"} ${c.textDescription ? \"Text\" : \"\"} `}</Col>\r\n                                  {/* <Col className='secUrl'>\r\n                                    {c.contentUrl ? 'true' : 'false'}\r\n                                  </Col> */}\r\n                                  <Col xs md='2' className='secAction'>\r\n                                    <div\r\n                                      className='btn-group float-right'\r\n                                      role='group'\r\n                                      aria-label=''\r\n                                    >\r\n                                      <button\r\n                                        className='btn btn-outline-primary pull-right'\r\n                                        onClick={event => {\r\n                                          showContent( item._id)\r\n                                        }}\r\n                                      >\r\n                                        Show\r\n                                      </button>\r\n                                      <button\r\n                                        className='btn btn-outline-primary pull-right'\r\n                                        onClick={event => {\r\n                                          editContent(c._id, item._id)\r\n                                        }}\r\n                                      >\r\n                                        Edit\r\n                                      </button>\r\n                                      <button\r\n                                        className='btn btn-outline-danger pull-right'\r\n                                        onClick={event => {\r\n                                          deleteContent(c._id)\r\n                                        }}\r\n                                      >\r\n                                        Delete\r\n                                      </button>\r\n                                    </div>\r\n                                  </Col>\r\n                                </div>\r\n                              )\r\n                            })}\r\n                          </Card.Body>\r\n                        </Accordion.Collapse>\r\n                      </Card>\r\n                    ))}\r\n                </Accordion>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserCourseSectionform.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\UserContentAll.js",["1051","1052","1053"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\App.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\__mocks__\\mockAxios.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\content\\Content.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\i18n\\I18nProvider.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ErrorsExamples\\ErrorPage1.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\permissionContext.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Notifications\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\stretched-card.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\ContentEditDilogue.js",["1054","1055","1056","1057","1058","1059"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\header-menu\\HeaderMenu.js",["1060","1061"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Usermanagement\\pages\\branchuserForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\SVGIcon.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dropdowns\\index.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\forms\\DatePickerField.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples-kt\\KTCodeBlock.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Curriculam.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\builder\\Builder.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\pages\\examForm.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\CourseForm.js",["1062","1063","1064","1065","1066","1067","1068"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport JoditEditor from 'jodit-react'\r\nimport axios from 'axios'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nexport default function CourseForm () {\r\n  const config = {\r\n    defaultActionOnPaste: 'insert_as_html',\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false,\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n  }\r\n  const editor = useRef(null)\r\n  const [Course, setCourse] = useState({\r\n    rating: 0,\r\n    numberOfRatings: 0,\r\n    numberOfStudent: 0,\r\n    title: '',\r\n    Description: '',\r\n    overview: '',\r\n    posterImageUrl: '',\r\n    file: ''\r\n  })\r\n  const [ClassList , setClassList] = useState()\r\n  const [ClassId , setClassId] = useState()\r\n  const [ClassSelected , setClassSelected] = useState()\r\n  const { id } = useParams()\r\n  const { cid } = useParams()\r\n  const history = useHistory()\r\n  const onChangeOverView = e => {\r\n    debugger\r\n    // console.log(this.editor.current)\r\n    setCourse({\r\n      ...Course,\r\n      overview: e.target.innerHTML\r\n    })\r\n  }\r\n  // const uploadFile = async () => {}\r\n  const SaveCourse = async event => {\r\n    event.preventDefault()\r\n    debugger\r\n    var ImageUrl = ''\r\n    let courseObject =Course;\r\n    if (Course.file) {\r\n      let formData = new FormData()\r\n      formData.append('file', Course.file)\r\n      debugger\r\n      await axios\r\n        .post('api/course/uploadCourseProfile/', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        })\r\n        .then(res => {\r\n          debugger\r\n          ImageUrl = res.data.name\r\n          // setCourse({ ...Course, posterImageUrl: res.data.name })\r\n        })\r\n        .catch(() => {\r\n          console.log('error in file upload')\r\n        })\r\n    }\r\n\r\n    if (ImageUrl) {\r\n      courseObject.posterImageUrl=ImageUrl\r\n    }\r\n    // console.log(ImageUrl)\r\n    debugger\r\n    if(ClassId == undefined){\r\n      return alert(\"Please Select Class\")\r\n    }\r\n    await axios\r\n      .post('/api/course/course/' + ClassId, courseObject)\r\n      .then(result => {\r\n        debugger\r\n        history.goBack()\r\n        if(id == undefined){\r\n\r\n          history.push('/ecourse/Courses')\r\n        }\r\n        else{\r\n          \r\n          history.push('/setting/courses/' + id)\r\n        }\r\n        \r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    debugger\r\n  }\r\n  useEffect(() => {\r\n    debugger\r\n    setClassId(id)\r\n    axios.get('/api/course/getAllClassNameForCourseAdd')\r\n          .then(res => {\r\n            setClassList(res.data[0].classes)\r\n          }).catch(err => {\r\n            console.log(err)\r\n          })\r\n\r\n    if (cid) {\r\n      axios\r\n        .get('/api/course/course/' + cid)\r\n        .then(res => {\r\n          setCourse(res.data.course)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [cid])\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Card>\r\n            <Form onSubmit={SaveCourse} className='form'>\r\n              <Card.Body>\r\n                <Form.Group className='row'>\r\n                  \r\n               {id == undefined && <div className='col-md-4'>\r\n                    <Form.Label>Select Class </Form.Label>\r\n                    <Form.Control\r\n                      required='true'\r\n                      as='select'\r\n                      placeholder=''\r\n                      // disabled={Exam._id?\"true\":\"false\"}\r\n                      // value={Exam.class}\r\n                      onChange={event =>\r\n                        setClassId(event.target.value)\r\n                      }\r\n                    >\r\n                      <option value=\"\">select class</option>\r\n                      {ClassList && ClassList.length && ClassList.map(item => (\r\n                        <option value={item._id} key={item._id}>\r\n                          {item.name}\r\n                        </option>\r\n                      ))\r\n                      }\r\n                    </Form.Control>\r\n                  </div>\r\n                }\r\n                  <div className='col-md-6' controlId='formTitle'>\r\n                    <Form.Label>Course Title</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Course Title'\r\n                      value={Course.title}\r\n                      required\r\n                      onChange={event =>\r\n                        setCourse({ ...Course, title: event.target.value })\r\n                      }\r\n                    />\r\n                    <Form.Text className='text-muted'>\r\n                      new course title.\r\n                    </Form.Text>\r\n                  </div>\r\n                  <div controlId='formDesc' className='col-md-6'>\r\n                    <Form.Label>Course Description</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Course Description'\r\n                      value={Course.Description}\r\n                      onChange={event =>\r\n                        setCourse({\r\n                          ...Course,\r\n                          Description: event.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='formOverview' className='row'>\r\n                  <Form.Label className='col-md-12 text-left mb-5'>\r\n                    Course Overview\r\n                  </Form.Label>\r\n                  {/* <Form.Control type='text' placeholder='Course Overview' /> */}\r\n                  <div className='col-md-12 mb-5'>\r\n                    <JoditEditor\r\n                      ref={editor}\r\n                      value={Course.overview}\r\n                      config={config}\r\n                      tabIndex={1} // tabIndex of textarea\r\n                      onBlur={onChangeOverView} // preferred to use only this option to update the content for performance reasons\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='Image'>\r\n                  <Form.Label>Course Picture</Form.Label>\r\n                  <Form.Control\r\n                    type='file'\r\n                    //   value={Course.Description}\r\n                    onChange={event =>\r\n                      setCourse({ ...Course, file: event.target.files[0] })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                {Course.posterImageUrl && (\r\n                  <img                     src={\r\n                      'http://localhost:4000/uploads/CourseProfile/' +\r\n                      Course.posterImageUrl\r\n                    }\r\n                    width='200px'\r\n                  />\r\n                )}\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <Button variant='primary' type='submit'>\r\n                  Submit\r\n                </Button>\r\n              </Card.Footer>\r\n            </Form>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\pages\\permissions.js",["1069","1070"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header-topbar.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\header-menu.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\student\\components\\StudentActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\redux\\rootReducer.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\_core\\MetronicLayout.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Auth\\pages\\connectPage.js",["1071","1072","1073","1074","1075","1076"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\pages\\MyPage.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_helpers\\LocalStorageHelpers.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\pages\\CourseDetails.js",["1077"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Test\\pages\\SectionalTestForm.js",["1078","1079"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\dashboards\\Dashboard.js",["1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\ECourse\\components\\Reviews.js",["1091","1092"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\Notice.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\Card.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_partials\\controls\\code-examples\\CodeExampleSimple.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Setting\\pages\\classesForBranch.js",["1093","1094","1095","1096","1097","1098"],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\Examination\\components\\ExamQuestionsActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\app\\modules\\permissionManager\\components\\MenuActionFormatter.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\header\\Header.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\extended\\quick-user.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\_assets\\js\\layout\\base\\subheader.js",[],"F:\\ashwani\\mindproc_project\\lms\\lmsadmin\\src\\_metronic\\layout\\components\\extras\\dropdowns\\search\\SearchDropdown.js",[],{"ruleId":"1099","severity":1,"message":"1100","line":2,"column":10,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":18},{"ruleId":"1103","replacedBy":"1104"},{"ruleId":"1105","replacedBy":"1106"},{"ruleId":"1099","severity":1,"message":"1107","line":2,"column":27,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":32},{"ruleId":"1099","severity":1,"message":"1108","line":8,"column":3,"nodeType":"1101","messageId":"1102","endLine":8,"endColumn":21},{"ruleId":"1103","replacedBy":"1109"},{"ruleId":"1105","replacedBy":"1110"},{"ruleId":"1103","replacedBy":"1111"},{"ruleId":"1105","replacedBy":"1112"},{"ruleId":"1113","severity":1,"message":"1114","line":46,"column":32,"nodeType":"1115","messageId":"1116","endLine":46,"endColumn":34},{"ruleId":"1099","severity":1,"message":"1117","line":13,"column":9,"nodeType":"1101","messageId":"1102","endLine":13,"endColumn":28},{"ruleId":"1099","severity":1,"message":"1118","line":20,"column":10,"nodeType":"1101","messageId":"1102","endLine":20,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1114","line":62,"column":36,"nodeType":"1115","messageId":"1116","endLine":62,"endColumn":38},{"ruleId":"1113","severity":1,"message":"1119","line":67,"column":44,"nodeType":"1115","messageId":"1116","endLine":67,"endColumn":46},{"ruleId":"1099","severity":1,"message":"1120","line":48,"column":9,"nodeType":"1101","messageId":"1102","endLine":48,"endColumn":23},{"ruleId":"1103","replacedBy":"1121"},{"ruleId":"1105","replacedBy":"1122"},{"ruleId":"1123","severity":1,"message":"1124","line":116,"column":4,"nodeType":"1125","endLine":116,"endColumn":8,"suggestions":"1126"},{"ruleId":"1099","severity":1,"message":"1127","line":1,"column":17,"nodeType":"1101","messageId":"1102","endLine":1,"endColumn":26},{"ruleId":"1099","severity":1,"message":"1128","line":2,"column":10,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":19},{"ruleId":"1099","severity":1,"message":"1129","line":34,"column":19,"nodeType":"1101","messageId":"1102","endLine":34,"endColumn":29},{"ruleId":"1099","severity":1,"message":"1130","line":27,"column":12,"nodeType":"1101","messageId":"1102","endLine":27,"endColumn":14},{"ruleId":"1123","severity":1,"message":"1124","line":124,"column":6,"nodeType":"1125","endLine":124,"endColumn":8,"suggestions":"1131"},{"ruleId":"1099","severity":1,"message":"1132","line":17,"column":10,"nodeType":"1101","messageId":"1102","endLine":17,"endColumn":15},{"ruleId":"1099","severity":1,"message":"1133","line":17,"column":17,"nodeType":"1101","messageId":"1102","endLine":17,"endColumn":27},{"ruleId":"1123","severity":1,"message":"1124","line":128,"column":6,"nodeType":"1125","endLine":128,"endColumn":8,"suggestions":"1134"},{"ruleId":"1113","severity":1,"message":"1119","line":33,"column":20,"nodeType":"1115","messageId":"1116","endLine":33,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1119","line":36,"column":20,"nodeType":"1115","messageId":"1116","endLine":36,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1119","line":43,"column":21,"nodeType":"1115","messageId":"1116","endLine":43,"endColumn":23},{"ruleId":"1113","severity":1,"message":"1119","line":46,"column":22,"nodeType":"1115","messageId":"1116","endLine":46,"endColumn":24},{"ruleId":"1099","severity":1,"message":"1135","line":2,"column":18,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":22},{"ruleId":"1099","severity":1,"message":"1136","line":4,"column":10,"nodeType":"1101","messageId":"1102","endLine":4,"endColumn":20},{"ruleId":"1099","severity":1,"message":"1137","line":4,"column":22,"nodeType":"1101","messageId":"1102","endLine":4,"endColumn":26},{"ruleId":"1099","severity":1,"message":"1138","line":4,"column":28,"nodeType":"1101","messageId":"1102","endLine":4,"endColumn":33},{"ruleId":"1099","severity":1,"message":"1139","line":5,"column":10,"nodeType":"1101","messageId":"1102","endLine":5,"endColumn":24},{"ruleId":"1099","severity":1,"message":"1140","line":6,"column":10,"nodeType":"1101","messageId":"1102","endLine":6,"endColumn":31},{"ruleId":"1099","severity":1,"message":"1141","line":7,"column":10,"nodeType":"1101","messageId":"1102","endLine":7,"endColumn":31},{"ruleId":"1113","severity":1,"message":"1114","line":44,"column":31,"nodeType":"1115","messageId":"1116","endLine":44,"endColumn":33},{"ruleId":"1142","severity":1,"message":"1143","line":9,"column":9,"nodeType":"1144","messageId":"1116","endLine":9,"endColumn":17},{"ruleId":"1099","severity":1,"message":"1145","line":7,"column":3,"nodeType":"1101","messageId":"1102","endLine":7,"endColumn":13},{"ruleId":"1123","severity":1,"message":"1146","line":26,"column":6,"nodeType":"1125","endLine":26,"endColumn":8,"suggestions":"1147"},{"ruleId":"1099","severity":1,"message":"1148","line":2,"column":16,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":19},{"ruleId":"1113","severity":1,"message":"1119","line":18,"column":69,"nodeType":"1115","messageId":"1116","endLine":18,"endColumn":71},{"ruleId":"1149","severity":1,"message":"1150","line":30,"column":9,"nodeType":"1151","endLine":33,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":44,"column":9,"nodeType":"1151","endLine":47,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":105,"column":1,"nodeType":"1151","endLine":109,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":119,"column":9,"nodeType":"1151","endLine":123,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":134,"column":11,"nodeType":"1151","endLine":137,"endColumn":12},{"ruleId":"1149","severity":1,"message":"1150","line":149,"column":73,"nodeType":"1151","endLine":156,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":166,"column":73,"nodeType":"1151","endLine":170,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":180,"column":73,"nodeType":"1151","endLine":184,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":195,"column":15,"nodeType":"1151","endLine":195,"endColumn":80},{"ruleId":"1149","severity":1,"message":"1150","line":200,"column":15,"nodeType":"1151","endLine":203,"endColumn":16},{"ruleId":"1149","severity":1,"message":"1150","line":218,"column":9,"nodeType":"1151","endLine":222,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":231,"column":41,"nodeType":"1151","endLine":238,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":249,"column":15,"nodeType":"1151","endLine":249,"endColumn":80},{"ruleId":"1099","severity":1,"message":"1152","line":4,"column":8,"nodeType":"1101","messageId":"1102","endLine":4,"endColumn":14},{"ruleId":"1099","severity":1,"message":"1148","line":6,"column":35,"nodeType":"1101","messageId":"1102","endLine":6,"endColumn":38},{"ruleId":"1153","severity":1,"message":"1154","line":143,"column":51,"nodeType":"1155","messageId":"1156","endLine":143,"endColumn":53},{"ruleId":"1099","severity":1,"message":"1100","line":2,"column":9,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":17},{"ruleId":"1099","severity":1,"message":"1157","line":3,"column":10,"nodeType":"1101","messageId":"1102","endLine":3,"endColumn":13},{"ruleId":"1099","severity":1,"message":"1158","line":3,"column":15,"nodeType":"1101","messageId":"1102","endLine":3,"endColumn":25},{"ruleId":"1099","severity":1,"message":"1159","line":41,"column":15,"nodeType":"1101","messageId":"1102","endLine":41,"endColumn":22},{"ruleId":"1099","severity":1,"message":"1160","line":11,"column":8,"nodeType":"1101","messageId":"1102","endLine":11,"endColumn":11},{"ruleId":"1099","severity":1,"message":"1161","line":21,"column":3,"nodeType":"1101","messageId":"1102","endLine":21,"endColumn":6},{"ruleId":"1099","severity":1,"message":"1162","line":25,"column":3,"nodeType":"1101","messageId":"1102","endLine":25,"endColumn":9},{"ruleId":"1099","severity":1,"message":"1135","line":27,"column":3,"nodeType":"1101","messageId":"1102","endLine":27,"endColumn":7},{"ruleId":"1099","severity":1,"message":"1163","line":42,"column":10,"nodeType":"1101","messageId":"1102","endLine":42,"endColumn":20},{"ruleId":"1099","severity":1,"message":"1164","line":54,"column":9,"nodeType":"1101","messageId":"1102","endLine":54,"endColumn":15},{"ruleId":"1113","severity":1,"message":"1119","line":111,"column":69,"nodeType":"1115","messageId":"1116","endLine":111,"endColumn":71},{"ruleId":"1113","severity":1,"message":"1119","line":113,"column":56,"nodeType":"1115","messageId":"1116","endLine":113,"endColumn":58},{"ruleId":"1123","severity":1,"message":"1165","line":120,"column":6,"nodeType":"1125","endLine":120,"endColumn":25,"suggestions":"1166"},{"ruleId":"1123","severity":1,"message":"1167","line":126,"column":7,"nodeType":"1125","endLine":126,"endColumn":14,"suggestions":"1168"},{"ruleId":"1113","severity":1,"message":"1119","line":131,"column":19,"nodeType":"1115","messageId":"1116","endLine":131,"endColumn":21},{"ruleId":"1169","severity":1,"message":"1170","line":140,"column":5,"nodeType":"1101","messageId":"1171","endLine":140,"endColumn":6},{"ruleId":"1172","severity":1,"message":"1173","line":154,"column":31,"nodeType":"1101","messageId":"1174","endLine":154,"endColumn":37},{"ruleId":"1175","severity":1,"message":"1176","line":169,"column":6,"nodeType":"1177","endLine":169,"endColumn":20},{"ruleId":"1172","severity":1,"message":"1173","line":298,"column":56,"nodeType":"1101","messageId":"1174","endLine":298,"endColumn":62},{"ruleId":"1175","severity":1,"message":"1176","line":303,"column":31,"nodeType":"1177","endLine":303,"endColumn":45},{"ruleId":"1178","severity":1,"message":"1179","line":332,"column":62,"nodeType":"1180","messageId":"1181","endLine":332,"endColumn":64},{"ruleId":"1178","severity":1,"message":"1179","line":359,"column":109,"nodeType":"1180","messageId":"1181","endLine":359,"endColumn":111},{"ruleId":"1178","severity":1,"message":"1179","line":359,"column":314,"nodeType":"1180","messageId":"1181","endLine":359,"endColumn":316},{"ruleId":"1178","severity":1,"message":"1179","line":364,"column":75,"nodeType":"1180","messageId":"1181","endLine":364,"endColumn":77},{"ruleId":"1178","severity":1,"message":"1179","line":364,"column":97,"nodeType":"1180","messageId":"1181","endLine":364,"endColumn":99},{"ruleId":"1178","severity":1,"message":"1179","line":383,"column":32,"nodeType":"1180","messageId":"1181","endLine":383,"endColumn":34},{"ruleId":"1182","severity":1,"message":"1183","line":3,"column":1,"nodeType":"1184","endLine":82,"endColumn":3},{"ruleId":"1099","severity":1,"message":"1100","line":2,"column":10,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":18},{"ruleId":"1099","severity":1,"message":"1185","line":21,"column":17,"nodeType":"1101","messageId":"1102","endLine":21,"endColumn":25},{"ruleId":"1099","severity":1,"message":"1145","line":3,"column":10,"nodeType":"1101","messageId":"1102","endLine":3,"endColumn":20},{"ruleId":"1178","severity":1,"message":"1179","line":39,"column":22,"nodeType":"1180","messageId":"1181","endLine":39,"endColumn":24},{"ruleId":"1178","severity":1,"message":"1179","line":39,"column":37,"nodeType":"1180","messageId":"1181","endLine":39,"endColumn":39},{"ruleId":"1178","severity":1,"message":"1179","line":142,"column":52,"nodeType":"1180","messageId":"1181","endLine":142,"endColumn":54},{"ruleId":"1178","severity":1,"message":"1179","line":161,"column":17,"nodeType":"1180","messageId":"1181","endLine":161,"endColumn":19},{"ruleId":"1099","severity":1,"message":"1186","line":30,"column":7,"nodeType":"1101","messageId":"1102","endLine":30,"endColumn":14},{"ruleId":"1113","severity":1,"message":"1119","line":56,"column":24,"nodeType":"1115","messageId":"1116","endLine":56,"endColumn":26},{"ruleId":"1099","severity":1,"message":"1187","line":58,"column":9,"nodeType":"1101","messageId":"1102","endLine":58,"endColumn":19},{"ruleId":"1099","severity":1,"message":"1188","line":14,"column":15,"nodeType":"1101","messageId":"1102","endLine":14,"endColumn":22},{"ruleId":"1099","severity":1,"message":"1189","line":9,"column":3,"nodeType":"1101","messageId":"1102","endLine":9,"endColumn":20},{"ruleId":"1099","severity":1,"message":"1130","line":11,"column":11,"nodeType":"1101","messageId":"1102","endLine":11,"endColumn":13},{"ruleId":"1099","severity":1,"message":"1190","line":4,"column":29,"nodeType":"1101","messageId":"1102","endLine":4,"endColumn":38},{"ruleId":"1099","severity":1,"message":"1189","line":9,"column":3,"nodeType":"1101","messageId":"1102","endLine":9,"endColumn":20},{"ruleId":"1113","severity":1,"message":"1119","line":53,"column":27,"nodeType":"1115","messageId":"1116","endLine":53,"endColumn":29},{"ruleId":"1099","severity":1,"message":"1135","line":2,"column":18,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":22},{"ruleId":"1099","severity":1,"message":"1161","line":2,"column":46,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":49},{"ruleId":"1099","severity":1,"message":"1148","line":2,"column":51,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":54},{"ruleId":"1099","severity":1,"message":"1191","line":8,"column":8,"nodeType":"1101","messageId":"1102","endLine":8,"endColumn":24},{"ruleId":"1099","severity":1,"message":"1192","line":14,"column":10,"nodeType":"1101","messageId":"1102","endLine":14,"endColumn":18},{"ruleId":"1099","severity":1,"message":"1193","line":14,"column":20,"nodeType":"1101","messageId":"1102","endLine":14,"endColumn":31},{"ruleId":"1099","severity":1,"message":"1194","line":18,"column":9,"nodeType":"1101","messageId":"1102","endLine":18,"endColumn":21},{"ruleId":"1113","severity":1,"message":"1114","line":19,"column":18,"nodeType":"1115","messageId":"1116","endLine":19,"endColumn":20},{"ruleId":"1103","replacedBy":"1195"},{"ruleId":"1105","replacedBy":"1196"},{"ruleId":"1099","severity":1,"message":"1127","line":1,"column":27,"nodeType":"1101","messageId":"1102","endLine":1,"endColumn":36},{"ruleId":"1123","severity":1,"message":"1124","line":128,"column":6,"nodeType":"1125","endLine":128,"endColumn":8,"suggestions":"1197"},{"ruleId":"1123","severity":1,"message":"1124","line":116,"column":10,"nodeType":"1125","endLine":116,"endColumn":12,"suggestions":"1198"},{"ruleId":"1099","severity":1,"message":"1199","line":5,"column":8,"nodeType":"1101","messageId":"1102","endLine":5,"endColumn":11},{"ruleId":"1099","severity":1,"message":"1200","line":6,"column":10,"nodeType":"1101","messageId":"1102","endLine":6,"endColumn":23},{"ruleId":"1113","severity":1,"message":"1119","line":18,"column":34,"nodeType":"1115","messageId":"1116","endLine":18,"endColumn":36},{"ruleId":"1113","severity":1,"message":"1119","line":33,"column":34,"nodeType":"1115","messageId":"1116","endLine":33,"endColumn":36},{"ruleId":"1149","severity":1,"message":"1150","line":31,"column":9,"nodeType":"1151","endLine":34,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":47,"column":36,"nodeType":"1151","endLine":50,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":62,"column":1,"nodeType":"1151","endLine":66,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":76,"column":75,"nodeType":"1151","endLine":80,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":92,"column":11,"nodeType":"1151","endLine":95,"endColumn":12},{"ruleId":"1149","severity":1,"message":"1150","line":108,"column":12,"nodeType":"1151","endLine":115,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":125,"column":73,"nodeType":"1151","endLine":129,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":139,"column":73,"nodeType":"1151","endLine":143,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":154,"column":15,"nodeType":"1151","endLine":154,"endColumn":80},{"ruleId":"1149","severity":1,"message":"1150","line":159,"column":15,"nodeType":"1151","endLine":162,"endColumn":16},{"ruleId":"1149","severity":1,"message":"1150","line":177,"column":9,"nodeType":"1151","endLine":181,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":190,"column":41,"nodeType":"1151","endLine":197,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":208,"column":15,"nodeType":"1151","endLine":208,"endColumn":80},{"ruleId":"1149","severity":1,"message":"1150","line":220,"column":34,"nodeType":"1151","endLine":223,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":267,"column":67,"nodeType":"1151","endLine":271,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":282,"column":15,"nodeType":"1151","endLine":282,"endColumn":80},{"ruleId":"1149","severity":1,"message":"1150","line":292,"column":66,"nodeType":"1151","endLine":296,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":307,"column":15,"nodeType":"1151","endLine":307,"endColumn":80},{"ruleId":"1149","severity":1,"message":"1150","line":317,"column":77,"nodeType":"1151","endLine":321,"endColumn":12},{"ruleId":"1149","severity":1,"message":"1150","line":332,"column":17,"nodeType":"1151","endLine":335,"endColumn":18},{"ruleId":"1149","severity":1,"message":"1150","line":347,"column":11,"nodeType":"1151","endLine":351,"endColumn":12},{"ruleId":"1149","severity":1,"message":"1150","line":362,"column":17,"nodeType":"1151","endLine":365,"endColumn":18},{"ruleId":"1149","severity":1,"message":"1150","line":375,"column":9,"nodeType":"1151","endLine":379,"endColumn":12},{"ruleId":"1149","severity":1,"message":"1150","line":390,"column":17,"nodeType":"1151","endLine":393,"endColumn":18},{"ruleId":"1149","severity":1,"message":"1150","line":402,"column":76,"nodeType":"1151","endLine":406,"endColumn":12},{"ruleId":"1149","severity":1,"message":"1150","line":417,"column":17,"nodeType":"1151","endLine":420,"endColumn":18},{"ruleId":"1149","severity":1,"message":"1150","line":429,"column":56,"nodeType":"1151","endLine":433,"endColumn":10},{"ruleId":"1149","severity":1,"message":"1150","line":444,"column":15,"nodeType":"1151","endLine":444,"endColumn":80},{"ruleId":"1099","severity":1,"message":"1201","line":5,"column":9,"nodeType":"1101","messageId":"1102","endLine":5,"endColumn":21},{"ruleId":"1099","severity":1,"message":"1202","line":2,"column":17,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":25},{"ruleId":"1099","severity":1,"message":"1100","line":2,"column":10,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":18},{"ruleId":"1099","severity":1,"message":"1189","line":9,"column":3,"nodeType":"1101","messageId":"1102","endLine":9,"endColumn":20},{"ruleId":"1099","severity":1,"message":"1203","line":4,"column":15,"nodeType":"1101","messageId":"1102","endLine":4,"endColumn":18},{"ruleId":"1099","severity":1,"message":"1130","line":12,"column":11,"nodeType":"1101","messageId":"1102","endLine":12,"endColumn":13},{"ruleId":"1113","severity":1,"message":"1114","line":51,"column":36,"nodeType":"1115","messageId":"1116","endLine":51,"endColumn":38},{"ruleId":"1113","severity":1,"message":"1119","line":58,"column":38,"nodeType":"1115","messageId":"1116","endLine":58,"endColumn":40},{"ruleId":"1099","severity":1,"message":"1189","line":9,"column":3,"nodeType":"1101","messageId":"1102","endLine":9,"endColumn":20},{"ruleId":"1099","severity":1,"message":"1204","line":14,"column":8,"nodeType":"1101","messageId":"1102","endLine":14,"endColumn":16},{"ruleId":"1099","severity":1,"message":"1205","line":15,"column":10,"nodeType":"1101","messageId":"1102","endLine":15,"endColumn":16},{"ruleId":"1099","severity":1,"message":"1203","line":4,"column":31,"nodeType":"1101","messageId":"1102","endLine":4,"endColumn":34},{"ruleId":"1099","severity":1,"message":"1132","line":21,"column":10,"nodeType":"1101","messageId":"1102","endLine":21,"endColumn":15},{"ruleId":"1099","severity":1,"message":"1133","line":21,"column":17,"nodeType":"1101","messageId":"1102","endLine":21,"endColumn":27},{"ruleId":"1099","severity":1,"message":"1206","line":30,"column":7,"nodeType":"1101","messageId":"1102","endLine":30,"endColumn":24},{"ruleId":"1113","severity":1,"message":"1119","line":42,"column":11,"nodeType":"1115","messageId":"1116","endLine":42,"endColumn":13},{"ruleId":"1113","severity":1,"message":"1119","line":65,"column":15,"nodeType":"1115","messageId":"1116","endLine":65,"endColumn":17},{"ruleId":"1113","severity":1,"message":"1119","line":89,"column":21,"nodeType":"1115","messageId":"1116","endLine":89,"endColumn":23},{"ruleId":"1099","severity":1,"message":"1203","line":4,"column":30,"nodeType":"1101","messageId":"1102","endLine":4,"endColumn":33},{"ruleId":"1099","severity":1,"message":"1207","line":9,"column":13,"nodeType":"1101","messageId":"1102","endLine":9,"endColumn":16},{"ruleId":"1099","severity":1,"message":"1208","line":45,"column":9,"nodeType":"1101","messageId":"1102","endLine":45,"endColumn":16},{"ruleId":"1099","severity":1,"message":"1145","line":7,"column":3,"nodeType":"1101","messageId":"1102","endLine":7,"endColumn":13},{"ruleId":"1123","severity":1,"message":"1146","line":27,"column":6,"nodeType":"1125","endLine":27,"endColumn":8,"suggestions":"1209"},{"ruleId":"1113","severity":1,"message":"1119","line":51,"column":53,"nodeType":"1115","messageId":"1116","endLine":51,"endColumn":55},{"ruleId":"1099","severity":1,"message":"1100","line":2,"column":10,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":18},{"ruleId":"1099","severity":1,"message":"1210","line":21,"column":8,"nodeType":"1101","messageId":"1102","endLine":21,"endColumn":21},{"ruleId":"1099","severity":1,"message":"1199","line":5,"column":8,"nodeType":"1101","messageId":"1102","endLine":5,"endColumn":11},{"ruleId":"1099","severity":1,"message":"1200","line":7,"column":10,"nodeType":"1101","messageId":"1102","endLine":7,"endColumn":23},{"ruleId":"1113","severity":1,"message":"1119","line":67,"column":75,"nodeType":"1115","messageId":"1116","endLine":67,"endColumn":77},{"ruleId":"1113","severity":1,"message":"1119","line":69,"column":55,"nodeType":"1115","messageId":"1116","endLine":69,"endColumn":57},{"ruleId":"1211","severity":1,"message":"1212","line":216,"column":19,"nodeType":"1151","endLine":221,"endColumn":21},{"ruleId":"1099","severity":1,"message":"1135","line":2,"column":18,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":22},{"ruleId":"1099","severity":1,"message":"1161","line":2,"column":46,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":49},{"ruleId":"1099","severity":1,"message":"1148","line":2,"column":51,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":54},{"ruleId":"1099","severity":1,"message":"1191","line":8,"column":8,"nodeType":"1101","messageId":"1102","endLine":8,"endColumn":24},{"ruleId":"1099","severity":1,"message":"1192","line":14,"column":10,"nodeType":"1101","messageId":"1102","endLine":14,"endColumn":18},{"ruleId":"1099","severity":1,"message":"1193","line":14,"column":20,"nodeType":"1101","messageId":"1102","endLine":14,"endColumn":31},{"ruleId":"1099","severity":1,"message":"1194","line":18,"column":9,"nodeType":"1101","messageId":"1102","endLine":18,"endColumn":21},{"ruleId":"1113","severity":1,"message":"1114","line":19,"column":18,"nodeType":"1115","messageId":"1116","endLine":19,"endColumn":20},{"ruleId":"1099","severity":1,"message":"1189","line":9,"column":3,"nodeType":"1101","messageId":"1102","endLine":9,"endColumn":20},{"ruleId":"1099","severity":1,"message":"1204","line":14,"column":8,"nodeType":"1101","messageId":"1102","endLine":14,"endColumn":16},{"ruleId":"1099","severity":1,"message":"1205","line":15,"column":10,"nodeType":"1101","messageId":"1102","endLine":15,"endColumn":16},{"ruleId":"1099","severity":1,"message":"1128","line":2,"column":10,"nodeType":"1101","messageId":"1102","endLine":2,"endColumn":19},{"ruleId":"1099","severity":1,"message":"1213","line":7,"column":10,"nodeType":"1101","messageId":"1102","endLine":7,"endColumn":15},{"ruleId":"1099","severity":1,"message":"1152","line":7,"column":23,"nodeType":"1101","messageId":"1102","endLine":7,"endColumn":29},{"ruleId":"1099","severity":1,"message":"1214","line":10,"column":10,"nodeType":"1101","messageId":"1102","endLine":10,"endColumn":15},{"ruleId":"1099","severity":1,"message":"1215","line":11,"column":10,"nodeType":"1101","messageId":"1102","endLine":11,"endColumn":17},{"ruleId":"1099","severity":1,"message":"1216","line":24,"column":19,"nodeType":"1101","messageId":"1102","endLine":24,"endColumn":29},{"ruleId":"1099","severity":1,"message":"1199","line":5,"column":8,"nodeType":"1101","messageId":"1102","endLine":5,"endColumn":11},{"ruleId":"1099","severity":1,"message":"1200","line":6,"column":10,"nodeType":"1101","messageId":"1102","endLine":6,"endColumn":23},{"ruleId":"1099","severity":1,"message":"1217","line":27,"column":10,"nodeType":"1101","messageId":"1102","endLine":27,"endColumn":23},{"ruleId":"1099","severity":1,"message":"1218","line":27,"column":26,"nodeType":"1101","messageId":"1102","endLine":27,"endColumn":42},{"ruleId":"1113","severity":1,"message":"1119","line":70,"column":16,"nodeType":"1115","messageId":"1116","endLine":70,"endColumn":18},{"ruleId":"1113","severity":1,"message":"1119","line":78,"column":15,"nodeType":"1115","messageId":"1116","endLine":78,"endColumn":17},{"ruleId":"1123","severity":1,"message":"1219","line":113,"column":6,"nodeType":"1125","endLine":113,"endColumn":11,"suggestions":"1220"},{"ruleId":"1113","severity":1,"message":"1119","line":123,"column":20,"nodeType":"1115","messageId":"1116","endLine":123,"endColumn":22},{"ruleId":"1211","severity":1,"message":"1212","line":203,"column":19,"nodeType":"1151","endLine":208,"endColumn":21},{"ruleId":"1099","severity":1,"message":"1186","line":6,"column":9,"nodeType":"1101","messageId":"1102","endLine":6,"endColumn":16},{"ruleId":"1099","severity":1,"message":"1221","line":10,"column":10,"nodeType":"1101","messageId":"1102","endLine":10,"endColumn":14},{"ruleId":"1099","severity":1,"message":"1127","line":1,"column":17,"nodeType":"1101","messageId":"1102","endLine":1,"endColumn":26},{"ruleId":"1099","severity":1,"message":"1202","line":1,"column":28,"nodeType":"1101","messageId":"1102","endLine":1,"endColumn":36},{"ruleId":"1099","severity":1,"message":"1222","line":3,"column":13,"nodeType":"1101","messageId":"1102","endLine":3,"endColumn":17},{"ruleId":"1099","severity":1,"message":"1100","line":5,"column":10,"nodeType":"1101","messageId":"1102","endLine":5,"endColumn":18},{"ruleId":"1099","severity":1,"message":"1223","line":5,"column":20,"nodeType":"1101","messageId":"1102","endLine":5,"endColumn":26},{"ruleId":"1099","severity":1,"message":"1107","line":5,"column":28,"nodeType":"1101","messageId":"1102","endLine":5,"endColumn":33},{"ruleId":"1123","severity":1,"message":"1224","line":44,"column":6,"nodeType":"1125","endLine":44,"endColumn":8,"suggestions":"1225"},{"ruleId":"1099","severity":1,"message":"1132","line":20,"column":10,"nodeType":"1101","messageId":"1102","endLine":20,"endColumn":15},{"ruleId":"1099","severity":1,"message":"1133","line":20,"column":17,"nodeType":"1101","messageId":"1102","endLine":20,"endColumn":27},{"ruleId":"1099","severity":1,"message":"1226","line":3,"column":5,"nodeType":"1101","messageId":"1102","endLine":3,"endColumn":17},{"ruleId":"1099","severity":1,"message":"1227","line":4,"column":5,"nodeType":"1101","messageId":"1102","endLine":4,"endColumn":18},{"ruleId":"1099","severity":1,"message":"1228","line":5,"column":5,"nodeType":"1101","messageId":"1102","endLine":5,"endColumn":17},{"ruleId":"1099","severity":1,"message":"1229","line":6,"column":5,"nodeType":"1101","messageId":"1102","endLine":6,"endColumn":18},{"ruleId":"1099","severity":1,"message":"1230","line":7,"column":5,"nodeType":"1101","messageId":"1102","endLine":7,"endColumn":18},{"ruleId":"1099","severity":1,"message":"1231","line":8,"column":5,"nodeType":"1101","messageId":"1102","endLine":8,"endColumn":17},{"ruleId":"1099","severity":1,"message":"1232","line":9,"column":5,"nodeType":"1101","messageId":"1102","endLine":9,"endColumn":25},{"ruleId":"1099","severity":1,"message":"1233","line":10,"column":5,"nodeType":"1101","messageId":"1102","endLine":10,"endColumn":25},{"ruleId":"1099","severity":1,"message":"1234","line":11,"column":5,"nodeType":"1101","messageId":"1102","endLine":11,"endColumn":17},{"ruleId":"1099","severity":1,"message":"1235","line":12,"column":5,"nodeType":"1101","messageId":"1102","endLine":12,"endColumn":17},{"ruleId":"1099","severity":1,"message":"1236","line":13,"column":5,"nodeType":"1101","messageId":"1102","endLine":13,"endColumn":17},{"ruleId":"1099","severity":1,"message":"1145","line":6,"column":3,"nodeType":"1101","messageId":"1102","endLine":6,"endColumn":13},{"ruleId":"1123","severity":1,"message":"1146","line":14,"column":6,"nodeType":"1125","endLine":14,"endColumn":8,"suggestions":"1237"},{"ruleId":"1099","severity":1,"message":"1238","line":3,"column":8,"nodeType":"1101","messageId":"1102","endLine":3,"endColumn":13},{"ruleId":"1099","severity":1,"message":"1162","line":4,"column":10,"nodeType":"1101","messageId":"1102","endLine":4,"endColumn":16},{"ruleId":"1099","severity":1,"message":"1135","line":4,"column":18,"nodeType":"1101","messageId":"1102","endLine":4,"endColumn":22},{"ruleId":"1099","severity":1,"message":"1189","line":9,"column":3,"nodeType":"1101","messageId":"1102","endLine":9,"endColumn":20},{"ruleId":"1099","severity":1,"message":"1239","line":18,"column":8,"nodeType":"1101","messageId":"1102","endLine":18,"endColumn":28},{"ruleId":"1113","severity":1,"message":"1119","line":132,"column":22,"nodeType":"1115","messageId":"1116","endLine":132,"endColumn":24},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1240"],"no-negated-in-lhs",["1241"],"'Route' is defined but never used.","'PermissionContenxt' is defined but never used.",["1240"],["1241"],["1240"],["1241"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'CourseContenHandler' is assigned a value but never used.","'BranchesName' is assigned a value but never used.","Expected '===' and instead saw '=='.","'InactiveteUser' is assigned a value but never used.",["1240"],["1241"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.","ArrayExpression",["1242"],"'useEffect' is defined but never used.","'useParams' is defined but never used.","'setsection' is assigned a value but never used.","'id' is assigned a value but never used.",["1243"],"'Class' is assigned a value but never used.","'setClasses' is assigned a value but never used.",["1244"],"'Form' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'ExpansionPanel' is defined but never used.","'ExpansionPanelSummary' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'update'. Either include it or remove the dependency array.",["1245"],"'Row' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","JSXOpeningElement","'Select' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'put' is defined but never used.","'takeLatest' is defined but never used.","'message' is assigned a value but never used.","'PDF' is defined but never used.","'Nav' is defined but never used.","'Button' is defined but never used.","'updatetime' is assigned a value but never used.","'player' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CourseData', 'gerCourse', 'getDiscussion', and 'sectionId'. Either include them or remove the dependency array.",["1246"],"React Hook useEffect has a missing dependency: 'changeVideoPlayer'. Either include it or remove the dependency array.",["1247"],"no-redeclare","'i' is already defined.","redeclared","no-self-assign","'player' is assigned to itself.","selfAssignment","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'setMenus' is assigned a value but never used.","'history' is assigned a value but never used.","'editActive' is assigned a value but never used.","'setZoom' is assigned a value but never used.","'CardHeaderToolbar' is defined but never used.","'ListGroup' is defined but never used.","'AddContentButton' is defined but never used.","'sections' is assigned a value but never used.","'setSections' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["1240"],["1241"],["1248"],["1249"],"'SVG' is defined but never used.","'toAbsoluteUrl' is defined but never used.","'QuickActions' is defined but never used.","'useState' is defined but never used.","'Col' is defined but never used.","'Progress' is defined but never used.","'colors' is defined but never used.","'handleDescripiton' is assigned a value but never used.","'cid' is assigned a value but never used.","'getData' is assigned a value but never used.",["1250"],"'FeeManagement' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Modal' is defined but never used.","'Input' is defined but never used.","'actions' is defined but never used.","'setContent' is assigned a value but never used.","'ClassSelected' is assigned a value but never used.","'setClassSelected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1251"],"'Role' is assigned a value but never used.","'auth' is defined but never used.","'Switch' is defined but never used.","React Hook useEffect has a missing dependency: 'courseId'. Either include it or remove the dependency array.",["1252"],"'MixedWidget1' is defined but never used.","'MixedWidget14' is defined but never used.","'ListsWidget9' is defined but never used.","'StatsWidget11' is defined but never used.","'StatsWidget12' is defined but never used.","'ListsWidget1' is defined but never used.","'AdvanceTablesWidget2' is defined but never used.","'AdvanceTablesWidget4' is defined but never used.","'ListsWidget3' is defined but never used.","'ListsWidget4' is defined but never used.","'ListsWidget8' is defined but never used.",["1253"],"'input' is defined but never used.","'ClassActionFormatter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1254","fix":"1255"},{"desc":"1256","fix":"1257"},{"desc":"1256","fix":"1258"},{"desc":"1259","fix":"1260"},{"desc":"1261","fix":"1262"},{"desc":"1263","fix":"1264"},{"desc":"1256","fix":"1265"},{"desc":"1256","fix":"1266"},{"desc":"1259","fix":"1267"},{"desc":"1268","fix":"1269"},{"desc":"1270","fix":"1271"},{"desc":"1259","fix":"1272"},"Update the dependencies array to be: [id, updateData]",{"range":"1273","text":"1274"},"Update the dependencies array to be: [updateData]",{"range":"1275","text":"1276"},{"range":"1277","text":"1276"},"Update the dependencies array to be: [update]",{"range":"1278","text":"1279"},"Update the dependencies array to be: [CourseData, contentId, gerCourse, getDiscussion, sectionId, time]",{"range":"1280","text":"1281"},"Update the dependencies array to be: [changeVideoPlayer, time]",{"range":"1282","text":"1283"},{"range":"1284","text":"1276"},{"range":"1285","text":"1276"},{"range":"1286","text":"1279"},"Update the dependencies array to be: [cid, id]",{"range":"1287","text":"1288"},"Update the dependencies array to be: [courseId]",{"range":"1289","text":"1290"},{"range":"1291","text":"1279"},[2875,2879],"[id, updateData]",[3094,3096],"[updateData]",[3282,3284],[765,767],"[update]",[3343,3362],"[CourseData, contentId, gerCourse, getDiscussion, sectionId, time]",[3449,3456],"[changeVideoPlayer, time]",[3303,3305],[2939,2941],[818,820],[2978,2983],"[cid, id]",[1473,1475],"[courseId]",[347,349]]